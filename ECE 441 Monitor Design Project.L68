00002000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 4/8/2016 8:08:19 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : ECE 441 Monitor Design Project
00000000                             3  * Written by : Daniel H. Meves
00000000                             4  * Date       : 03/21/2016 - 04/27/2016
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  *---------------------------
00000000                             9  **********CONSTANTS*********
00000000  =00000900                 10  BUF     EQU     $900
00000000  =000000E4                 11  TUTOR   EQU     228
00000000  =000000E3                 12  OUT1CR  EQU     227
00000000  =000000F1                 13  PORTIN1 EQU     241
00000000  =000000F3                 14  OUTPUT  EQU     243
00000000  =00000014                 15  INDEX   EQU     20
00000000  =000000AA                 16  TESTVAL1    EQU     $AA
00000000  =00000055                 17  TESTVAL2    EQU     $55
00000000                            18   
00000000  =00000008                 19  BS  EQU  $08   ; Backspace
00000000  =00000009                 20  HT  EQU  $09   ; Tab (horizontal 5 characters)
00000000  =0000000A                 21  LF  EQU  $0A   ; New line (line feed)
00000000  =0000000B                 22  VT  EQU  $0B   ; Vertical tab (4 lines)
00000000  =0000000C                 23  FF  EQU  $0C   ; Form Feed (Always end printing with a Form Feed.)
00000000  =0000000D                 24  CR  EQU  $0D   ; Carriage Return
00000000  =00000020                 25  SP  EQU  $20   ; Space
00000000  =00000024                 26  HEX EQU  $24
00000000  =00000023                 27  HASH    EQU     $23
00000000  =00000000                 28  NULL    EQU     $00
00000000                            29  *---------------------------
00001000                            30      ORG    $1000
00001000                            31      
00001000= 4D 4F 4E 49 54 4F ...     32  PROMPT      DC.B    'MONITOR441>',0
00001010                            33      ORG     $1010
00001010                            34  INPUTBUFFER     DS.B    80
00001060                            35      ORG     $1060
00001060                            36  CMDBUFFER       DS.B    80
00001110                            37      ORG     $1110
00001110                            38  ASCIIBUFFER     DS.B    20
00001124                            39  HEXBUFFER       DS.B    20
00001138                            40  BUFFER          DS.B    20
0000114C= 41 4E 20 45 52 52 ...     41  ERRORMSG        DC.B    'AN ERROR OCCURRED!',CR,LF,0
00001161= 49 4E 56 41 4C 49 ...     42  ADDRERROR       DC.B    'INVALID ADDRESS!',CR,LF,0
00001174= 4E 4F 54 20 41 4E ...     43  ASCIIERROR      DC.B    'NOT AN HEXADECIMAL VALUE!',CR,LF,0
00001190= 4E 4F 54 20 41 20 ...     44  HEXERROR        DC.B    'NOT A ASCII VALUE!',CR,LF,0
000011A5= 53 54 4F 52 49 4E ...     45  STOREDATA       DC.B    'STORING DATA AS ASCII.',CR,LF,0
000011BE= 41 44 44 52 45 53 ...     46  ODDADDRMSG1     DC.B    'ADDRESS 1 IS NOT AN EVEN ADDRESS!',CR,LF,0
000011E2= 41 44 44 52 45 53 ...     47  ODDADDRMSG2     DC.B    'ADDRESS 2 IS NOT AN EVEN ADDRESS!',CR,LF,0
00001206= 44 41 54 41 20 45 ...     48  DATALONGMSG     DC.B    'DATA ENTERED TOO LARGE, PLEASE ENTER WORD SIZE OR SMALLER!',CR,LF,0
00001243= 4D 45 4D 4F 52 59 ...     49  MEMERROR        DC.B    'MEMORY ERROR AT ADDRESS: ',0
0000125D= 4E 4F 20 4D 45 4D ...     50  MEMSUCCESS      DC.B    'NO MEMORY ERROR DETECTED!',CR,LF,0
00001279= 20 2D 20 00               51  SPACE           DC.B    ' - ',0
0000127D                            52  HELPMSG         *DC.B    CR,LF,'*****ALL MONITOR441 COMMANDS*****',CR,LF,LF
0000127D= 20 20 20 48 45 4C ...     53                  DC.B    '   HELP: Displays this message',CR,LF,LF
0000129E                            54                  
0000129E= 20 20 20 4D 44 53 ...     55                  DC.B    '   MDSP: Outputs Address And Memory Contents',CR,LF
000012CC= 20 20 20 4D 44 53 ...     56                  DC.B    '   MDSP <address1> <address2> eg: MDSP $908 $90A<CR>',CR,LF,LF
00001303                            57                  
00001303= 20 20 20 53 4F 52 ...     58                  DC.B    '   SORTW: Sorts A Block Of Memory',CR,LF
00001326= 20 20 20 44 65 66 ...     59                  DC.B    '   Default: Descending Order',CR,LF
00001344= 20 20 20 3B 41 3A ...     60                  DC.B    '   ;A: Ascending Order',CR,LF
0000135C= 20 20 20 3B 44 3A ...     61                  DC.B    '   ;D: Descending Order',CR,LF
00001375= 20 20 20 53 4F 52 ...     62                  DC.B    '   SORTW <address1> <address2> [;order] eg: SORTW $904 $90E ;A<CR>',CR,LF,LF
000013BA                            63                  
000013BA= 20 20 20 4D 4D 3A ...     64                  DC.B    '   MM: Modifies Data In Memory',CR,LF
000013DA= 20 20 20 44 65 66 ...     65                  DC.B    '   Default: Displays One Byte',CR,LF
000013F9= 20 20 20 3B 57 3A ...     66                  DC.B    '   ;W: Displays One Word',CR,LF
00001413= 20 20 20 3B 4C 3A ...     67                  DC.B    '   ;L: Displays One Long Word',CR,LF
00001432= 20 20 20 4D 4D 20 ...     68                  DC.B    '   MM <address>[;size] eg: MM $904;W<CR>',CR,LF,LF
0000145D                            69                  
0000145D= 20 20 20 4D 53 20 ...     70                  DC.B    '   MS - Memory Set.',CR,LF
00001472= 20 20 20 4D 53 20 ...     71                  DC.B    '   MS <address> [data] eg: MS $904 $FFFF<CR>',CR,LF,LF
000014A1                            72                  
000014A1= 20 20 20 42 46 3A ...     73                  DC.B    '   BF: Fills A Block Of Memory',CR,LF
000014C1= 20 20 20 42 46 20 ...     74                  DC.B    '   BF <address1> <address2> <word> eg: BF $904 $908 475A<CR>',CR,LF,LF
00001500                            75                  
00001500= 20 20 20 42 4D 4F ...     76                  DC.B    '   BMOV: Moves A Block of Memory To Another Area',CR,LF
00001532= 20 20 20 42 4D 4F ...     77                  DC.B    '   BMOV <address1> <address2> <address3> eg: BMOV $908 $90B $909<CR>',CR,LF,LF
00001579                            78                  
00001579= 20 20 20 42 54 53 ...     79                  DC.B    '   BTST - Block Test.',CR,LF,LF
00001591                            80                  
00001591= 20 20 20 42 53 43 ...     81                  DC.B    '   BSCH: Searches A Literal String In The Memory',CR,LF
000015C3= 20 20 20 42 53 43 ...     82                  DC.B    '   BSCH <address1> <address2> "literal string" eg: BSCH $900 $910 "MATCH"<CR>',CR,LF,LF
00001613                            83                  
00001613= 20 20 20 47 4F 3A ...     84                  DC.B    '   GO: Starts Execution From Given Address',CR,LF
0000163F= 20 20 20 47 4F 20 ...     85                  DC.B    '   GO <address> eg: GO $900<CR>',CR,LF,LF
00001661                            86                  
00001661= 20 20 20 44 46 20 ...     87                  DC.B    '   DF - Display Formatted Registers.',CR,LF,LF
00001688                            88                  
00001688= 20 20 20 45 58 49 ...     89                  DC.B    '   EXIT - Exit the monitor program eg: EXIT<CR>',CR,LF,LF
000016BA                            90                  
000016BA= 2A 2A 2A 2A 2A 54 ...     91                  DC.B    '*****Try HELP <command> or MAN <command> to view man page.*****',CR,LF,LF,0
000016FD                            92  
000016FD                            93  *--------------------------
000016FD                            94  *MAN PAGES
000016FD                            95  *--------------------------
00005000                            96      ORG     $5000
00005000= 0D 0A 48 45 4C 50 ...     97  HELPMANPAGE     DC.B    CR,LF,'HELP(1)                       MC68000/SANPER-1 ELU                       HELP(1)',CR,LF,LF
00005055                            98                  
00005055= 4E 41 4D 45 0D 0A         99                  DC.B    'NAME',CR,LF
0000505B= 20 20 20 48 45 4C ...    100                  DC.B    '   HELP - Help.',CR,LF,LF
0000506D                           101                  
0000506D= 53 59 4E 4F 50 53 ...    102                  DC.B    'SYNOPSYS',CR,LF
00005077= 20 20 20 48 45 4C ...    103                  DC.B    '   HELP',CR,LF,LF
00005081                           104                  
00005081= 44 45 53 43 52 49 ...    105                  DC.B    'DESCRIPTION',CR,LF
0000508E= 20 20 20 54 68 65 ...    106                  DC.B    '   The Help command must display all available commands and usage descriptions.',CR,LF,LF
000050E0                           107                  
000050E0                           108                  *DC.B    'OPTIONS',CR,LF
000050E0                           109                  *DC.B    '   none',CR,LF,LF
000050E0                           110                  
000050E0                           111                  *DC.B    'NOTES',CR,LF
000050E0                           112                  *DC.B    '   none',CR,LF,LF
000050E0                           113                  
000050E0                           114                  *DC.B    'FILES',CR,LF
000050E0                           115                  *DC.B    '   none',CR,LF,LF
000050E0                           116                  
000050E0                           117                  *DC.B    'ENVIRONMENT',CR,LF
000050E0                           118                  *DC.B    '   none',CR,LF,LF
000050E0                           119                  
000050E0                           120                  *DC.B    'DIAGNOSTICS',CR,LF
000050E0                           121                  *DC.B    '   none',CR,LF,LF
000050E0                           122                  
000050E0                           123                  *DC.B    'BUGS',CR,LF
000050E0                           124                  *DC.B    '   none known atm',CR,LF,LF
000050E0                           125                  
000050E0= 41 55 54 48 4F 52 ...    126                  DC.B    'AUTHOR',CR,LF
000050E8= 20 20 20 44 61 6E ...    127                  DC.B    '   Daniel H. Meves',CR,LF,LF
000050FD                           128                  
000050FD                           129                  *DC.B    'HISTORY',CR,LF
000050FD                           130                  *DC.B    '   none',CR,LF,LF
000050FD                           131                  
000050FD= 53 45 45 20 41 4C ...    132                  DC.B    'SEE ALSO',CR,LF
00005107= 20 20 20 4D 44 53 ...    133                  DC.B    '   MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
0000516D                           134                  
0000516D= 44 61 6E 69 65 6C ...    135                  DC.B    'Daniel H. Meves                    27 April 2016                        HELP(1)',CR,LF,LF,0
000051C0                           136                  
000051C0= 0D 0A 4D 44 53 50 ...    137  MDSPMANPAGE     DC.B    CR,LF,'MDSP(1)                       MC68000/SANPER-1 ELU                       MDSP(1)',CR,LF,LF
00005215                           138                  
00005215= 4E 41 4D 45 0D 0A        139                  DC.B    'NAME',CR,LF
0000521B= 20 20 20 4D 44 53 ...    140                  DC.B    '   MDSP - Memory Display.',CR,LF,LF
00005237                           141                  
00005237= 53 59 4E 4F 50 53 ...    142                  DC.B    'SYNOPSYS',CR,LF
00005241= 20 20 20 4D 44 53 ...    143                  DC.B    '   MDSP <address1> <address2>',CR,LF,LF
00005261                           144                  
00005261= 44 45 53 43 52 49 ...    145                  DC.B    'DESCRIPTION',CR,LF
0000526E= 20 20 20 54 68 65 ...    146                  DC.B    '   The MDSP (Memory Display) command outputs the address and memory contents from',CR,LF
000052C1= 20 20 20 3C 61 64 ...    147                  DC.B    '   <address1> to <address2>. The MDSP (Memory Display) command ALSO outputs the',CR,LF
00005312= 20 20 20 61 64 64 ...    148                  DC.B    '   address and memory contents from <address1> to <address1 + 16bytes>.',CR,LF,LF
0000535C                           149                  
0000535C                           150                  *DC.B    'OPTIONS',CR,LF
0000535C                           151                  *DC.B    '   none',CR,LF,LF
0000535C                           152                  
0000535C                           153                  *DC.B    'NOTES',CR,LF
0000535C                           154                  *DC.B    '   none',CR,LF,LF
0000535C                           155                  
0000535C                           156                  *DC.B    'FILES',CR,LF
0000535C                           157                  *DC.B    '   none',CR,LF,LF
0000535C                           158                  
0000535C                           159                  *DC.B    'ENVIRONMENT',CR,LF
0000535C                           160                  *DC.B    '   none',CR,LF,LF
0000535C                           161                  
0000535C                           162                  *DC.B    'DIAGNOSTICS',CR,LF
0000535C                           163                  *DC.B    '   none',CR,LF,LF
0000535C                           164                  
0000535C                           165                  *DC.B    'BUGS',CR,LF
0000535C                           166                  *DC.B    '   none known atm',CR,LF,LF
0000535C                           167                  
0000535C= 41 55 54 48 4F 52 ...    168                  DC.B    'AUTHOR',CR,LF
00005364= 20 20 20 44 61 6E ...    169                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005379                           170                  
00005379                           171                  *DC.B    'HISTORY',CR,LF
00005379                           172                  *DC.B    '   none',CR,LF,LF
00005379                           173                  
00005379= 53 45 45 20 41 4C ...    174                  DC.B    'SEE ALSO',CR,LF
00005383= 20 20 20 48 45 4C ...    175                  DC.B    '   HELP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
000053E9                           176                  
000053E9= 44 61 6E 69 65 6C ...    177                  DC.B    'Daniel H. Meves                    27 April 2016                        MDSP(1)',CR,LF,LF,0
0000543C                           178                  
0000543C= 0D 0A 53 4F 52 54 ...    179  SORTWMANPAGE    DC.B    CR,LF,'SORTW(1)                       MC68000/SANPER-1 ELU                       SORTW(1)',CR,LF,LF
00005493                           180                  
00005493= 4E 41 4D 45 0D 0A        181                  DC.B    'NAME',CR,LF
00005499= 20 20 20 53 4F 52 ...    182                  DC.B    '   SORTW - Sort.',CR,LF,LF
000054AC                           183                  
000054AC= 53 59 4E 4F 50 53 ...    184                  DC.B    'SYNOPSYS',CR,LF
000054B6= 20 20 20 53 4F 52 ...    185                  DC.B    '   SORTW <address1> <address2> [;order]',CR,LF,LF
000054E0                           186                  
000054E0= 44 45 53 43 52 49 ...    187                  DC.B    'DESCRIPTION',CR,LF
000054ED= 20 20 20 54 68 65 ...    188                  DC.B    '   The SORT command sorts a block of memory. The starting address <address1> and the',CR,LF
00005543= 20 20 20 65 6E 64 ...    189                  DC.B    '   ending address <address2> of the memory block are specified in the command. The order',CR,LF
0000559D= 20 20 20 28 41 20 ...    190                  DC.B    '   (A or D) specifies whether the list is sorted in Ascending or Descending order. (The size of',CR,LF
000055FE= 20 20 20 74 68 65 ...    191                  DC.B    '   the data to be sorted is a word)',CR,LF,LF
00005624                           192                  
00005624                           193                  *DC.B    'OPTIONS',CR,LF
00005624                           194                  *DC.B    '   none',CR,LF,LF
00005624                           195                  
00005624                           196                  *DC.B    'NOTES',CR,LF
00005624                           197                  *DC.B    '   none',CR,LF,LF
00005624                           198                  
00005624                           199                  *DC.B    'FILES',CR,LF
00005624                           200                  *DC.B    '   none',CR,LF,LF
00005624                           201                  
00005624                           202                  *DC.B    'ENVIRONMENT',CR,LF
00005624                           203                  *DC.B    '   none',CR,LF,LF
00005624                           204                  
00005624                           205                  *DC.B    'DIAGNOSTICS',CR,LF
00005624                           206                  *DC.B    '   none',CR,LF,LF
00005624                           207                  
00005624                           208                  *DC.B    'BUGS',CR,LF
00005624                           209                  *DC.B    '   none known atm',CR,LF,LF
00005624                           210                  
00005624= 41 55 54 48 4F 52 ...    211                  DC.B    'AUTHOR',CR,LF
0000562C= 20 20 20 44 61 6E ...    212                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005641                           213                  
00005641                           214                  *DC.B    'HISTORY',CR,LF
00005641                           215                  *DC.B    '   none',CR,LF,LF
00005641                           216                  
00005641= 53 45 45 20 41 4C ...    217                  DC.B    'SEE ALSO',CR,LF
0000564B= 20 20 20 48 45 4C ...    218                  DC.B    '   HELP(1), MDSP(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
000056B0                           219                  
000056B0= 44 61 6E 69 65 6C ...    220                  DC.B    'Daniel H. Meves                    27 April 2016                        SORTW(1)',CR,LF,LF,0
00005704                           221                  
00005704= 0D 0A 4D 4D 28 31 ...    222  MMMANPAGE       DC.B    CR,LF,'MM(1)                       MC68000/SANPER-1 ELU                       MM(1)',CR,LF,LF
00005755                           223                  
00005755= 4E 41 4D 45 0D 0A        224                  DC.B    'NAME',CR,LF
0000575B= 20 20 20 4D 4D 20 ...    225                  DC.B    '   MM - Memory Modify.',CR,LF,LF
00005774                           226                  
00005774= 53 59 4E 4F 50 53 ...    227                  DC.B    'SYNOPSYS',CR,LF
0000577E= 20 20 20 4D 4D 20 ...    228                  DC.B    '   MM <address> [;size]',CR,LF,LF
00005798                           229                  
00005798= 44 45 53 43 52 49 ...    230                  DC.B    'DESCRIPTION',CR,LF
000057A5= 20 20 20 4D 4D 20 ...    231                  DC.B    '   MM (Memory Modify) command is used to display memory and, as required, modify data',CR,LF
000057FC= 20 20 20 6F 72 20 ...    232                  DC.B    '   or enter new data. The size (byte, word, long word) controls the number of bytes displayed',CR,LF
0000585B= 20 20 20 66 6F 72 ...    233                  DC.B    '   for each address.',CR,LF,LF
00005872                           234                  
00005872                           235                  *DC.B    'OPTIONS',CR,LF
00005872                           236                  *DC.B    '   none',CR,LF,LF
00005872                           237                  
00005872                           238                  *DC.B    'NOTES',CR,LF
00005872                           239                  *DC.B    '   none',CR,LF,LF
00005872                           240                  
00005872                           241                  *DC.B    'FILES',CR,LF
00005872                           242                  *DC.B    '   none',CR,LF,LF
00005872                           243                  
00005872                           244                  *DC.B    'ENVIRONMENT',CR,LF
00005872                           245                  *DC.B    '   none',CR,LF,LF
00005872                           246                  
00005872                           247                  *DC.B    'DIAGNOSTICS',CR,LF
00005872                           248                  *DC.B    '   none',CR,LF,LF
00005872                           249                  
00005872                           250                  *DC.B    'BUGS',CR,LF
00005872                           251                  *DC.B    '   none known atm',CR,LF,LF
00005872                           252                  
00005872= 41 55 54 48 4F 52 ...    253                  DC.B    'AUTHOR',CR,LF
0000587A= 20 20 20 44 61 6E ...    254                  DC.B    '   Daniel H. Meves',CR,LF,LF
0000588F                           255                  
0000588F                           256                  *DC.B    'HISTORY',CR,LF
0000588F                           257                  *DC.B    '   none',CR,LF,LF
0000588F                           258                  
0000588F= 53 45 45 20 41 4C ...    259                  DC.B    'SEE ALSO',CR,LF
00005899= 20 20 20 48 45 4C ...    260                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00005901                           261                  
00005901= 44 61 6E 69 65 6C ...    262                  DC.B    'Daniel H. Meves                    27 April 2016                        MM(1)',CR,LF,LF,0
00005952                           263                  
00005952= 0D 0A 4D 53 28 31 ...    264  MSMANPAGE       DC.B    CR,LF,'MS(1)                       MC68000/SANPER-1 ELU                       MS(1)',CR,LF,LF
000059A3                           265                  
000059A3= 4E 41 4D 45 0D 0A        266                  DC.B    'NAME',CR,LF
000059A9= 20 20 20 4D 53 20 ...    267                  DC.B    '   MS - Memory Set.',CR,LF,LF
000059BF                           268                  
000059BF= 53 59 4E 4F 50 53 ...    269                  DC.B    'SYNOPSYS',CR,LF
000059C9= 20 20 20 4D 53 20 ...    270                  DC.B    '   MS <address> [data]',CR,LF,LF
000059E2                           271                  
000059E2= 44 45 53 43 52 49 ...    272                  DC.B    'DESCRIPTION',CR,LF
000059EF= 20 20 20 54 68 65 ...    273                  DC.B    '   The Memory Set (MS) command alters memory by setting data into the address specified. The',CR,LF
00005A4D= 20 20 20 64 61 74 ...    274                  DC.B    '   data can take the form of ASCII string or hexadecimal data.',CR,LF,LF
00005A8E                           275                  
00005A8E                           276                  *DC.B    'OPTIONS',CR,LF
00005A8E                           277                  *DC.B    '   none',CR,LF,LF
00005A8E                           278                  
00005A8E                           279                  *DC.B    'NOTES',CR,LF
00005A8E                           280                  *DC.B    '   none',CR,LF,LF
00005A8E                           281                  
00005A8E                           282                  *DC.B    'FILES',CR,LF
00005A8E                           283                  *DC.B    '   none',CR,LF,LF
00005A8E                           284                  
00005A8E                           285                  *DC.B    'ENVIRONMENT',CR,LF
00005A8E                           286                  *DC.B    '   none',CR,LF,LF
00005A8E                           287                  
00005A8E                           288                  *DC.B    'DIAGNOSTICS',CR,LF
00005A8E                           289                  *DC.B    '   none',CR,LF,LF
00005A8E                           290                  
00005A8E                           291                  *DC.B    'BUGS',CR,LF
00005A8E                           292                  *DC.B    '   none known atm',CR,LF,LF
00005A8E                           293                  
00005A8E= 41 55 54 48 4F 52 ...    294                  DC.B    'AUTHOR',CR,LF
00005A96= 20 20 20 44 61 6E ...    295                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005AAB                           296                  
00005AAB                           297                  *DC.B    'HISTORY',CR,LF
00005AAB                           298                  *DC.B    '   none',CR,LF,LF
00005AAB                           299                  
00005AAB= 53 45 45 20 41 4C ...    300                  DC.B    'SEE ALSO',CR,LF
00005AB5= 20 20 20 48 45 4C ...    301                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00005B1D                           302                  
00005B1D= 44 61 6E 69 65 6C ...    303                  DC.B    'Daniel H. Meves                    27 April 2016                        MS(1)',CR,LF,LF,0
00005B6E                           304                  
00005B6E= 0D 0A 42 46 28 31 ...    305  BFMANPAGE       DC.B    CR,LF,'BF(1)                       MC68000/SANPER-1 ELU                       BF(1)',CR,LF,LF
00005BBF                           306                  
00005BBF= 4E 41 4D 45 0D 0A        307                  DC.B    'NAME',CR,LF
00005BC5= 20 20 20 42 46 20 ...    308                  DC.B    '   BF - Block Fill.',CR,LF,LF
00005BDB                           309                  
00005BDB= 53 59 4E 4F 50 53 ...    310                  DC.B    'SYNOPSYS',CR,LF
00005BE5= 20 20 20 42 46 20 ...    311                  DC.B    '   BF <address1> <address2> <word>',CR,LF,LF
00005C0A                           312                  
00005C0A= 44 45 53 43 52 49 ...    313                  DC.B    'DESCRIPTION',CR,LF
00005C17= 20 20 20 54 68 65 ...    314                  DC.B    '   The Block Fill (BF) command fills memory starting with the word boundary <address1> through',CR,LF
00005C77= 20 20 20 3C 61 64 ...    315                  DC.B    '   <address2>. Both <address1> and <address2> must be even addresses. This command only',CR,LF
00005CD0= 20 20 20 66 69 6C ...    316                  DC.B    '   fills with a word-size (2 bytes) data pattern. If an entire word-size data pattern is not entered,',CR,LF
00005D37= 20 20 20 74 68 65 ...    317                  DC.B    '   the pattern is right justified and leading zeros are inserted.',CR,LF,LF
00005D7B                           318                  
00005D7B                           319                  *DC.B    'OPTIONS',CR,LF
00005D7B                           320                  *DC.B    '   none',CR,LF,LF
00005D7B                           321                  
00005D7B                           322                  *DC.B    'NOTES',CR,LF
00005D7B                           323                  *DC.B    '   none',CR,LF,LF
00005D7B                           324                  
00005D7B                           325                  *DC.B    'FILES',CR,LF
00005D7B                           326                  *DC.B    '   none',CR,LF,LF
00005D7B                           327                  
00005D7B                           328                  *DC.B    'ENVIRONMENT',CR,LF
00005D7B                           329                  *DC.B    '   none',CR,LF,LF
00005D7B                           330                  
00005D7B                           331                  *DC.B    'DIAGNOSTICS',CR,LF
00005D7B                           332                  *DC.B    '   none',CR,LF,LF
00005D7B                           333                  
00005D7B                           334                  *DC.B    'BUGS',CR,LF
00005D7B                           335                  *DC.B    '   none known atm',CR,LF,LF
00005D7B                           336                  
00005D7B= 41 55 54 48 4F 52 ...    337                  DC.B    'AUTHOR',CR,LF
00005D83= 20 20 20 44 61 6E ...    338                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005D98                           339                  
00005D98                           340                  *DC.B    'HISTORY',CR,LF
00005D98                           341                  *DC.B    '   none',CR,LF,LF
00005D98                           342                  
00005D98= 53 45 45 20 41 4C ...    343                  DC.B    'SEE ALSO',CR,LF
00005DA2= 20 20 20 48 45 4C ...    344                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00005E0A                           345                  
00005E0A= 44 61 6E 69 65 6C ...    346                  DC.B    'Daniel H. Meves                    27 April 2016                        BF(1)',CR,LF,LF,0
00005E5B                           347                  
00005E5B= 0D 0A 42 4D 4F 56 ...    348  BMOVMANPAGE     DC.B    CR,LF,'BMOV(1)                       MC68000/SANPER-1 ELU                       BMOV(1)',CR,LF,LF
00005EB0                           349                  
00005EB0= 4E 41 4D 45 0D 0A        350                  DC.B    'NAME',CR,LF
00005EB6= 20 20 20 42 4D 4F ...    351                  DC.B    '   BMOV - Block Move.',CR,LF,LF
00005ECE                           352                  
00005ECE= 53 59 4E 4F 50 53 ...    353                  DC.B    'SYNOPSYS',CR,LF
00005ED8= 20 20 20 42 4D 4F ...    354                  DC.B    '   BMOV <address1> <address2> <address3>',CR,LF,LF
00005F03                           355                  
00005F03= 44 45 53 43 52 49 ...    356                  DC.B    'DESCRIPTION',CR,LF
00005F10= 20 20 20 54 68 65 ...    357                  DC.B    '   The Block Move (BMOV) command is used to move (duplicate) blocks of memory from one area to another.',CR,LF,LF
00005F7A                           358                  
00005F7A                           359                  *DC.B    'OPTIONS',CR,LF
00005F7A                           360                  *DC.B    '   none',CR,LF,LF
00005F7A                           361                  
00005F7A                           362                  *DC.B    'NOTES',CR,LF
00005F7A                           363                  *DC.B    '   none',CR,LF,LF
00005F7A                           364                  
00005F7A                           365                  *DC.B    'FILES',CR,LF
00005F7A                           366                  *DC.B    '   none',CR,LF,LF
00005F7A                           367                  
00005F7A                           368                  *DC.B    'ENVIRONMENT',CR,LF
00005F7A                           369                  *DC.B    '   none',CR,LF,LF
00005F7A                           370                  
00005F7A                           371                  *DC.B    'DIAGNOSTICS',CR,LF
00005F7A                           372                  *DC.B    '   none',CR,LF,LF
00005F7A                           373                  
00005F7A                           374                  *DC.B    'BUGS',CR,LF
00005F7A                           375                  *DC.B    '   none known atm',CR,LF,LF
00005F7A                           376                  
00005F7A= 41 55 54 48 4F 52 ...    377                  DC.B    'AUTHOR',CR,LF
00005F82= 20 20 20 44 61 6E ...    378                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005F97                           379                  
00005F97                           380                  *DC.B    'HISTORY',CR,LF
00005F97                           381                  *DC.B    '   none',CR,LF,LF
00005F97                           382                  
00005F97= 53 45 45 20 41 4C ...    383                  DC.B    'SEE ALSO',CR,LF
00005FA1= 20 20 20 48 45 4C ...    384                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00006007                           385                  
00006007= 44 61 6E 69 65 6C ...    386                  DC.B    'Daniel H. Meves                    27 April 2016                        BMOV(1)',CR,LF,LF,0
0000605A                           387                  
0000605A= 0D 0A 42 54 53 54 ...    388  BTSTMANPAGE     DC.B    CR,LF,'BTST(1)                       MC68000/SANPER-1 ELU                       BTST(1)',CR,LF,LF
000060AF                           389                  
000060AF= 4E 41 4D 45 0D 0A        390                  DC.B    'NAME',CR,LF
000060B5= 20 20 20 42 54 53 ...    391                  DC.B    '   BTST - Block Test.',CR,LF,LF
000060CD                           392                  
000060CD= 53 59 4E 4F 50 53 ...    393                  DC.B    'SYNOPSYS',CR,LF
000060D7= 20 20 20 42 54 53 ...    394                  DC.B    '   BTST <address1> <address2>',CR,LF,LF
000060F7                           395                  
000060F7= 44 45 53 43 52 49 ...    396                  DC.B    'DESCRIPTION',CR,LF
00006104= 20 20 20 54 68 65 ...    397                  DC.B    '   The Block Test (BT) command is a destructive test of a block of memory beginning at <address1>',CR,LF
00006167= 20 20 20 74 68 72 ...    398                  DC.B    '   through <address2>. If this test runs to completion without detecting errors, and display a',CR,LF
000061C7= 20 20 20 6D 65 73 ...    399                  DC.B    '   message that no error was detected. If memory problems are found, a message is displayed',CR,LF
00006224= 20 20 20 69 6E 64 ...    400                  DC.B    '   indicating the address, the data stored, and the data read of the failing memory.',CR,LF,LF
0000627B                           401                  
0000627B                           402                  *DC.B    'OPTIONS',CR,LF
0000627B                           403                  *DC.B    '   none',CR,LF,LF
0000627B                           404                  
0000627B                           405                  *DC.B    'NOTES',CR,LF
0000627B                           406                  *DC.B    '   none',CR,LF,LF
0000627B                           407                  
0000627B                           408                  *DC.B    'FILES',CR,LF
0000627B                           409                  *DC.B    '   none',CR,LF,LF
0000627B                           410                  
0000627B                           411                  *DC.B    'ENVIRONMENT',CR,LF
0000627B                           412                  *DC.B    '   none',CR,LF,LF
0000627B                           413                  
0000627B                           414                  *DC.B    'DIAGNOSTICS',CR,LF
0000627B                           415                  *DC.B    '   none',CR,LF,LF
0000627B                           416                  
0000627B                           417                  *DC.B    'BUGS',CR,LF
0000627B                           418                  *DC.B    '   none known atm',CR,LF,LF
0000627B                           419                  
0000627B= 41 55 54 48 4F 52 ...    420                  DC.B    'AUTHOR',CR,LF
00006283= 20 20 20 44 61 6E ...    421                  DC.B    '   Daniel H. Meves',CR,LF,LF
00006298                           422                  
00006298                           423                  *DC.B    'HISTORY',CR,LF
00006298                           424                  *DC.B    '   none',CR,LF,LF
00006298                           425                  
00006298= 53 45 45 20 41 4C ...    426                  DC.B    'SEE ALSO',CR,LF
000062A2= 20 20 20 48 45 4C ...    427                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00006308                           428                  
00006308= 44 61 6E 69 65 6C ...    429                  DC.B    'Daniel H. Meves                    27 April 2016                        BTST(1)',CR,LF,LF,0
0000635B                           430  
0000635B= 0D 0A 42 53 43 48 ...    431  BSCHMANPAGE     DC.B    CR,LF,'BSCH(1)                       MC68000/SANPER-1 ELU                       BSCH(1)',CR,LF,LF
000063B0                           432                  
000063B0= 4E 41 4D 45 0D 0A        433                  DC.B    'NAME',CR,LF
000063B6= 20 20 20 42 53 43 ...    434                  DC.B    '   BSCH - Block Search.',CR,LF,LF
000063D0                           435                  
000063D0= 53 59 4E 4F 50 53 ...    436                  DC.B    'SYNOPSYS',CR,LF
000063DA= 20 20 20 42 53 43 ...    437                  DC.B    '   BSCH <address1> <address2> "StringLiteral"',CR,LF,LF
0000640A                           438                  
0000640A= 44 45 53 43 52 49 ...    439                  DC.B    'DESCRIPTION',CR,LF
00006417= 20 20 20 54 68 65 ...    440                  DC.B    '   The BSCH (Block Search) command is used to search a literal string in a memory block starting',CR,LF
00006479= 20 20 20 61 74 20 ...    441                  DC.B    '   at <address1> through <address2> both inclusive. In BSCH command, if search finds matching data,',CR,LF 
000064DE= 20 20 20 74 68 65 ...    442                  DC.B    '   the data and address(es) must be displayed.',CR,LF,LF
0000650F                           443                  
0000650F                           444                  *DC.B    'OPTIONS',CR,LF
0000650F                           445                  *DC.B    '   none',CR,LF,LF
0000650F                           446                  
0000650F                           447                  *DC.B    'NOTES',CR,LF
0000650F                           448                  *DC.B    '   none',CR,LF,LF
0000650F                           449                  
0000650F                           450                  *DC.B    'FILES',CR,LF
0000650F                           451                  *DC.B    '   none',CR,LF,LF
0000650F                           452                  
0000650F                           453                  *DC.B    'ENVIRONMENT',CR,LF
0000650F                           454                  *DC.B    '   none',CR,LF,LF
0000650F                           455                  
0000650F                           456                  *DC.B    'DIAGNOSTICS',CR,LF
0000650F                           457                  *DC.B    '   none',CR,LF,LF
0000650F                           458                  
0000650F                           459                  *DC.B    'BUGS',CR,LF
0000650F                           460                  *DC.B    '   none known atm',CR,LF,LF
0000650F                           461                  
0000650F= 41 55 54 48 4F 52 ...    462                  DC.B    'AUTHOR',CR,LF
00006517= 20 20 20 44 61 6E ...    463                  DC.B    '   Daniel H. Meves',CR,LF,LF
0000652C                           464                  
0000652C                           465                  *DC.B    'HISTORY',CR,LF
0000652C                           466                  *DC.B    '   none',CR,LF,LF
0000652C                           467                  
0000652C= 53 45 45 20 41 4C ...    468                  DC.B    'SEE ALSO',CR,LF
00006536= 20 20 20 48 45 4C ...    469                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
0000659C                           470                  
0000659C= 44 61 6E 69 65 6C ...    471                  DC.B    'Daniel H. Meves                    27 April 2016                        BSCH(1)',CR,LF,LF,0
000065EF                           472                  
000065EF= 0D 0A 47 4F 28 31 ...    473  GOMANPAGE       DC.B    CR,LF,'GO(1)                       MC68000/SANPER-1 ELU                       GO(1)',CR,LF,LF
00006640                           474                  
00006640= 4E 41 4D 45 0D 0A        475                  DC.B    'NAME',CR,LF
00006646= 20 20 20 47 4F 20 ...    476                  DC.B    '   GO - Execute Program.',CR,LF,LF
00006661                           477                  
00006661= 53 59 4E 4F 50 53 ...    478                  DC.B    'SYNOPSYS',CR,LF
0000666B= 20 20 20 47 4F 20 ...    479                  DC.B    '   GO <address>',CR,LF,LF
0000667D                           480                  
0000667D= 44 45 53 43 52 49 ...    481                  DC.B    'DESCRIPTION',CR,LF
0000668A= 20 20 20 54 68 65 ...    482                  DC.B    '   The GO command is used to start execution from a given address.',CR,LF,LF
000066CF                           483                  
000066CF                           484                  *DC.B    'OPTIONS',CR,LF
000066CF                           485                  *DC.B    '   none',CR,LF,LF
000066CF                           486                  
000066CF                           487                  *DC.B    'NOTES',CR,LF
000066CF                           488                  *DC.B    '   none',CR,LF,LF
000066CF                           489                  
000066CF                           490                  *DC.B    'FILES',CR,LF
000066CF                           491                  *DC.B    '   none',CR,LF,LF
000066CF                           492                  
000066CF                           493                  *DC.B    'ENVIRONMENT',CR,LF
000066CF                           494                  *DC.B    '   none',CR,LF,LF
000066CF                           495                  
000066CF                           496                  *DC.B    'DIAGNOSTICS',CR,LF
000066CF                           497                  *DC.B    '   none',CR,LF,LF
000066CF                           498                  
000066CF                           499                  *DC.B    'BUGS',CR,LF
000066CF                           500                  *DC.B    '   none known atm',CR,LF,LF
000066CF                           501                  
000066CF= 41 55 54 48 4F 52 ...    502                  DC.B    'AUTHOR',CR,LF
000066D7= 20 20 20 44 61 6E ...    503                  DC.B    '   Daniel H. Meves',CR,LF,LF
000066EC                           504                  
000066EC                           505                  *DC.B    'HISTORY',CR,LF
000066EC                           506                  *DC.B    '   none',CR,LF,LF
000066EC                           507                  
000066EC= 53 45 45 20 41 4C ...    508                  DC.B    'SEE ALSO',CR,LF
000066F6= 20 20 20 48 45 4C ...    509                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
0000675E                           510                  
0000675E= 44 61 6E 69 65 6C ...    511                  DC.B    'Daniel H. Meves                    27 April 2016                        GO(1)',CR,LF,LF,0
000067AF                           512                  
000067AF= 0D 0A 44 46 28 31 ...    513  DFMANPAGE       DC.B    CR,LF,'DF(1)                       MC68000/SANPER-1 ELU                       DF(1)',CR,LF,LF
00006800                           514                  
00006800= 4E 41 4D 45 0D 0A        515                  DC.B    'NAME',CR,LF
00006806= 20 20 20 44 46 20 ...    516                  DC.B    '   DF - Display Formatted Registers.',CR,LF,LF
0000682D                           517                  
0000682D= 53 59 4E 4F 50 53 ...    518                  DC.B    'SYNOPSYS',CR,LF
00006837= 20 20 20 44 46 0D ...    519                  DC.B    '   DF',CR,LF,LF
0000683F                           520                  
0000683F= 44 45 53 43 52 49 ...    521                  DC.B    'DESCRIPTION',CR,LF
0000684C= 20 20 20 54 68 65 ...    522                  DC.B    '   The Display Formatted Registers (DF) command is used to display the MC68000 processor registers.',CR,LF 
000068B1= 20 20 20 54 68 69 ...    523                  DC.B    '   This command should display current PC, SR, US, SS and D, A registers.',CR,LF,LF
000068FD                           524                  
000068FD                           525                  *DC.B    'OPTIONS',CR,LF
000068FD                           526                  *DC.B    '   none',CR,LF,LF
000068FD                           527                  
000068FD                           528                  *DC.B    'NOTES',CR,LF
000068FD                           529                  *DC.B    '   none',CR,LF,LF
000068FD                           530                  
000068FD                           531                  *DC.B    'FILES',CR,LF
000068FD                           532                  *DC.B    '   none',CR,LF,LF
000068FD                           533                  
000068FD                           534                  *DC.B    'ENVIRONMENT',CR,LF
000068FD                           535                  *DC.B    '   none',CR,LF,LF
000068FD                           536                  
000068FD                           537                  *DC.B    'DIAGNOSTICS',CR,LF
000068FD                           538                  *DC.B    '   none',CR,LF,LF
000068FD                           539                  
000068FD                           540                  *DC.B    'BUGS',CR,LF
000068FD                           541                  *DC.B    '   none known atm',CR,LF,LF
000068FD                           542                  
000068FD= 41 55 54 48 4F 52 ...    543                  DC.B    'AUTHOR',CR,LF
00006905= 20 20 20 44 61 6E ...    544                  DC.B    '   Daniel H. Meves',CR,LF,LF
0000691A                           545                  
0000691A                           546                  *DC.B    'HISTORY',CR,LF
0000691A                           547                  *DC.B    '   none',CR,LF,LF
0000691A                           548                  
0000691A= 53 45 45 20 41 4C ...    549                  DC.B    'SEE ALSO',CR,LF
00006924= 20 20 20 48 45 4C ...    550                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), EXIT(1), MAN(1)',CR,LF,LF
0000698C                           551                  
0000698C= 44 61 6E 69 65 6C ...    552                  DC.B    'Daniel H. Meves                    27 April 2016                        DF(1)',CR,LF,LF,0
000069DD                           553                  
000069DD= 0D 0A 45 58 49 54 ...    554  EXITMANPAGE     DC.B    CR,LF,'EXIT(1)                       MC68000/SANPER-1 ELU                       EXIT(1)',CR,LF,LF
00006A32                           555                  
00006A32= 4E 41 4D 45 0D 0A        556                  DC.B    'NAME',CR,LF
00006A38= 20 20 20 45 58 49 ...    557                  DC.B    '   EXIT - Exit Monitor Program.',CR,LF,LF
00006A5A                           558                  
00006A5A= 53 59 4E 4F 50 53 ...    559                  DC.B    'SYNOPSYS',CR,LF
00006A64= 20 20 20 45 58 49 ...    560                  DC.B    '   EXIT',CR,LF,LF
00006A6E                           561                  
00006A6E= 44 45 53 43 52 49 ...    562                  DC.B    'DESCRIPTION',CR,LF
00006A7B= 20 20 20 54 68 65 ...    563                  DC.B    '   The EXIT command terminates/exits your Monitor program.',CR,LF,LF
00006AB8                           564                  
00006AB8                           565                  *DC.B    'OPTIONS',CR,LF
00006AB8                           566                  *DC.B    '   none',CR,LF,LF
00006AB8                           567                  
00006AB8                           568                  *DC.B    'NOTES',CR,LF
00006AB8                           569                  *DC.B    '   none',CR,LF,LF
00006AB8                           570                  
00006AB8                           571                  *DC.B    'FILES',CR,LF
00006AB8                           572                  *DC.B    '   none',CR,LF,LF
00006AB8                           573                  
00006AB8                           574                  *DC.B    'ENVIRONMENT',CR,LF
00006AB8                           575                  *DC.B    '   none',CR,LF,LF
00006AB8                           576                  
00006AB8                           577                  *DC.B    'DIAGNOSTICS',CR,LF
00006AB8                           578                  *DC.B    '   none',CR,LF,LF
00006AB8                           579                  
00006AB8                           580                  *DC.B    'BUGS',CR,LF
00006AB8                           581                  *DC.B    '   none known atm',CR,LF,LF
00006AB8                           582                  
00006AB8= 41 55 54 48 4F 52 ...    583                  DC.B    'AUTHOR',CR,LF
00006AC0= 20 20 20 44 61 6E ...    584                  DC.B    '   Daniel H. Meves',CR,LF,LF
00006AD5                           585                  
00006AD5                           586                  *DC.B    'HISTORY',CR,LF
00006AD5                           587                  *DC.B    '   none',CR,LF,LF
00006AD5                           588                  
00006AD5= 53 45 45 20 41 4C ...    589                  DC.B    'SEE ALSO',CR,LF
00006ADF= 20 20 20 48 45 4C ...    590                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), MAN(1)',CR,LF,LF
00006B45                           591                  
00006B45= 44 61 6E 69 65 6C ...    592                  DC.B    'Daniel H. Meves                    27 April 2016                        EXIT(1)',CR,LF,LF,0
00006B98                           593                  
00006B98= 0D 0A 4D 41 4E 28 ...    594  MANMANPAGE      DC.B    CR,LF,'MAN(1)                       MC68000/SANPER-1 ELU                       MAN(1)',CR,LF,LF
00006BEB                           595                  
00006BEB= 4E 41 4D 45 0D 0A        596                  DC.B    'NAME',CR,LF
00006BF1= 20 20 20 4D 41 4E ...    597                  DC.B    '   MAN - An interface to the on-line reference manuals.',CR,LF,LF
00006C2B                           598                  
00006C2B= 53 59 4E 4F 50 53 ...    599                  DC.B    'SYNOPSYS',CR,LF
00006C35= 20 20 20 4D 41 4E ...    600                  DC.B    '   MAN [command]',CR,LF,LF
00006C48                           601                  
00006C48= 44 45 53 43 52 49 ...    602                  DC.B    'DESCRIPTION',CR,LF
00006C55= 20 20 20 4D 41 4E ...    603                  DC.B    '   MAN is the systems manual pager.',CR,LF,LF
00006C7B                           604                  
00006C7B                           605                  *DC.B    'OPTIONS',CR,LF
00006C7B                           606                  *DC.B    '   none',CR,LF,LF
00006C7B                           607                  
00006C7B                           608                  *DC.B    'NOTES',CR,LF
00006C7B                           609                  *DC.B    '   none',CR,LF,LF
00006C7B                           610                  
00006C7B                           611                  *DC.B    'FILES',CR,LF
00006C7B                           612                  *DC.B    '   none',CR,LF,LF
00006C7B                           613                  
00006C7B                           614                  *DC.B    'ENVIRONMENT',CR,LF
00006C7B                           615                  *DC.B    '   none',CR,LF,LF
00006C7B                           616                  
00006C7B                           617                  *DC.B    'DIAGNOSTICS',CR,LF
00006C7B                           618                  *DC.B    '   none',CR,LF,LF
00006C7B                           619                  
00006C7B                           620                  *DC.B    'BUGS',CR,LF
00006C7B                           621                  *DC.B    '   none known atm',CR,LF,LF
00006C7B                           622                  
00006C7B= 41 55 54 48 4F 52 ...    623                  DC.B    'AUTHOR',CR,LF
00006C83= 20 20 20 44 61 6E ...    624                  DC.B    '   Daniel H. Meves',CR,LF,LF
00006C98                           625                  
00006C98                           626                  *DC.B    'HISTORY',CR,LF
00006C98                           627                  *DC.B    '   none',CR,LF,LF
00006C98                           628                  
00006C98= 53 45 45 20 41 4C ...    629                  DC.B    'SEE ALSO',CR,LF
00006CA2= 20 20 20 48 45 4C ...    630                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1)',CR,LF,LF
00006D09                           631                  
00006D09= 44 61 6E 69 65 6C ...    632                  DC.B    'Daniel H. Meves                    27 April 2016                        MAN(1)',CR,LF,LF,0
00006D5B                           633                  
00003000                           634      ORG     $3000
00003000= 48 45 4C 50 00           635  HELPPTR    DC.B    'HELP',0
00003005= 4D 44 53 50 00           636  MDSPPTR    DC.B    'MDSP',0
0000300A= 53 4F 52 54 57 00        637  SORTWPTR   DC.B    'SORTW',0
00003010= 4D 4D 00                 638  MMPTR      DC.B    'MM',0
00003013= 4D 53 00                 639  MSPTR      DC.B    'MS',0
00003016= 42 46 00                 640  BFPTR      DC.B    'BF',0
00003019= 42 4D 4F 56 00           641  BMOVPTR    DC.B    'BMOV',0
0000301E= 42 54 53 54 00           642  BTSTPTR    DC.B    'BTST',0
00003023= 42 53 43 48 00           643  BSCHPTR    DC.B    'BSCH',0
00003028= 47 4F 00                 644  GOPTR      DC.B    'GO',0
0000302B= 44 46 00                 645  DFPTR      DC.B    'DF',0
0000302E= 45 58 49 54 00           646  EXITPTR    DC.B    'EXIT',0
00003033= 4D 41 4E 00              647  MANPTR     DC.B    'MAN',0
00003037                           648  
00004000                           649      ORG     $4000
00004000= 00002120                 650  HELPHDLR    DC.L   HELP
00004004= 00002318                 651  MDSPHDLR    DC.L   MDSP
00004008= 000023C6                 652  SORTWHDLR   DC.L   SORTW
0000400C= 000025A4                 653  MMHDLR      DC.L   MM
00004010= 0000263E                 654  MSHDLR      DC.L   MS
00004014= 000026C0                 655  BFHDLR      DC.L   BF
00004018= 0000278A                 656  BMOVHDLR    DC.L   BMOV
0000401C= 000027F2                 657  BTSTHDLR    DC.L   BTST
00004020= 0000287C                 658  BSCHHDLR    DC.L   BSCH
00004024= 00002886                 659  GOHDLR      DC.L   GO
00004028= 00002890                 660  DFHDLR      DC.L   DF
0000402C= 0000289A                 661  EXITHDLR    DC.L   EXIT
00004030= 000020E4                 662  MANHDLR     DC.L   MANHELP
00004034                           663  
00004800                           664      ORG     $4800
00004800= 00002164                 665  HELPSTR     DC.L    HELPOUT
00004804= 00002178                 666  MDSPSTR     DC.L    MDSPOUT
00004808= 0000218C                 667  SORTWSTR    DC.L    SORTWOUT
0000480C= 000021A0                 668  MMSTR       DC.L    MMOUT
00004810= 000021B4                 669  MSSTR       DC.L    MSOUT
00004814= 000021C8                 670  BFSTR       DC.L    BFOUT
00004818= 000021DC                 671  BMOVSTR     DC.L    BMOVOUT
0000481C= 000021F0                 672  BTSTSTR     DC.L    BTSTOUT
00004820= 00002204                 673  BSCHSTR     DC.L    BSCHOUT
00004824= 00002218                 674  GOSTR       DC.L    GOOUT
00004828= 0000222C                 675  DFSTR       DC.L    DFOUT
0000482C= 00002240                 676  EXITSTR     DC.L    EXITOUT
00004830= 00002254                 677  MANSTR      DC.L    MANOUT   
00004834                           678      
00004834                           679  *-----------------------------------------------------------
00004834                           680  * Main Program
00004834                           681  *-----------------------------------------------------------
00002000                           682      ORG     $2000
00002000                           683  START:                  ; first instruction of program
00002000  43F8 1000                684                  LEA     PROMPT,A1
00002004  103C 000E                685                  MOVE.B  #14,D0
00002008  4E4F                     686                  TRAP    #15
0000200A                           687          
0000200A  45F8 1010                688                  LEA     INPUTBUFFER,A2
0000200E  744F                     689                  MOVE.L  #79,D2
00002010  421A                     690  CLRINBUF        CLR.B   (A2)+
00002012  51CA FFFC                691                  DBRA    D2,CLRINBUF
00002016                           692  
00002016  47F8 1060                693                  LEA     CMDBUFFER,A3
0000201A  764F                     694                  MOVE.L  #79,D3
0000201C  421B                     695  CLRCMDBUF       CLR.B   (A3)+
0000201E  51CB FFFC                696                  DBRA    D3,CLRCMDBUF  
00002022                           697          
00002022  43F8 1010                698                  LEA     INPUTBUFFER,A1
00002026  103C 0002                699                  MOVE.B  #2,D0
0000202A  4E4F                     700                  TRAP    #15
0000202C                           701                  
0000202C  4EB9 00002034            702                  JSR     INTERPRETER
00002032  60CC                     703                  BRA     START   
00002034                           704      
00002034                           705  *-----------------------------------------------------------
00002034                           706  *Command Interpreter
00002034                           707  *-----------------------------------------------------------
00002034  48E7 FFFF                708  INTERPRETER     MOVEM.L A0-A7/D0-D7,-(SP)
00002038                           709   
00002038  43F8 1010                710                  LEA     INPUTBUFFER,A1      ; pointer to command input
0000203C  2049                     711                  MOVEA.L A1,A0
0000203E  D3C1                     712                  ADDA.L  D1,A1               ; pointer to end of command input
00002040  4282                     713                  CLR.L   D2
00002042  4283                     714                  CLR.L   D3                  ; character counter
00002044                           715                   
00002044  49F8 3000                716                  LEA     HELPPTR,A4          ; pointer to string table
00002048  4BF8 4000                717                  LEA     HELPHDLR,A5         ; pointer to jump table
0000204C  47F8 1010                718  NEXT            LEA     INPUTBUFFER,A3
00002050  4EB9 00002080            719                  JSR     COMPARESTRING
00002056                           720                  
00002056  0C04 0001                721                  CMPI.B  #1,D4
0000205A  6700 000E                722                  BEQ     HDLRJMP
0000205E  584D                     723                  ADDA.W  #4,A5
00002060  BAFC 4034                724                  CMP.W  #$4034,A5
00002064  6700 000E                725                  BEQ     ERROR
00002068  60E2                     726                  BRA     NEXT
0000206A                           727                  
0000206A  2C55                     728  HDLRJMP         MOVE.L  (A5),A6
0000206C  4E96                     729                  JSR     (A6)
0000206E                           730                     
0000206E  4CDF FFFF                731                  MOVEM.L (SP)+,A0-A7/D0-D7
00002072  4E75                     732                  RTS
00002074                           733                  
00002074  43F8 114C                734  ERROR           LEA     ERRORMSG,A1
00002078  103C 000E                735                  MOVE.B  #14,D0
0000207C  4E4F                     736                  TRAP    #15
0000207E  6080                     737                  BRA     START
00002080                           738  
00002080                           739  *-----------------------------------------------------------
00002080                           740  * Compare Strings
00002080                           741  * INPUT: (A3) = STRING 1, (A4) = STRING 2
00002080                           742  * OUTPUT: D4=1 IF STRINGS MATCH, ELSE D4=0
00002080                           743  *-----------------------------------------------------------
00002080  48E7 F7E7                744  COMPARESTRING   MOVEM.L A0-A2/A5-A7/D0-D3/D5-D7,-(SP)
00002084  4284                     745                  CLR.L   D4
00002086                           746                  
00002086  0C13 0000                747                  CMP.B   #NULL,(A3)
0000208A  6700 FF74                748                  BEQ     START
0000208E                           749                  
0000208E  0C13 0020                750  COMPARELOOP     CMPI.B  #SP,(A3)
00002092  6700 0026                751                  BEQ     COMPARELIST
00002096                           752                  
00002096  0C13 000D                753                  CMPI.B  #CR,(A3)
0000209A  6700 001E                754                  BEQ     COMPARELIST
0000209E                           755                  
0000209E  0C13 0000                756                  CMPI.B  #NULL,(A3)
000020A2  6700 0016                757                  BEQ     COMPARELIST
000020A6                           758                  
000020A6  B90B                     759                  CMPM.B  (A3)+,(A4)+
000020A8  67E4                     760                  BEQ     COMPARELOOP
000020AA                           761                  
000020AA  4EB9 000020D4            762                  JSR     NULLJMP
000020B0  183C 0000                763                  MOVE.B  #0,D4
000020B4  4CDF E7EF                764                  MOVEM.L (SP)+,A0-A2/A5-A7/D0-D3/D5-D7
000020B8  4E75                     765                  RTS     
000020BA                           766                  
000020BA  0C1C 0000                767  COMPARELIST     CMPI.B  #NULL,(A4)+
000020BE  6700 000A                768                  BEQ     MATCH
000020C2                           769                  
000020C2  183C 0000                770                  MOVE.B  #0,D4
000020C6  6000 0006                771                  BRA     RETURN
000020CA                           772                  
000020CA  183C 0001                773  MATCH           MOVE.B  #1,D4
000020CE                           774                  
000020CE  4CDF E7EF                775  RETURN          MOVEM.L (SP)+,A0-A2/A5-A7/D0-D3/D5-D7
000020D2  4E75                     776                  RTS
000020D4                           777  
000020D4  48E7 FFF7                778  NULLJMP         MOVEM.L A0-A3/A5-A7/D0-D7,-(SP)
000020D8  0C1C 0000                779  NULLLOOP        CMPI.B  #NULL,(A4)+
000020DC  66FA                     780                  BNE     NULLLOOP
000020DE  4CDF EFFF                781                  MOVEM.L (SP)+,A0-A3/A5-A7/D0-D7
000020E2  4E75                     782                  RTS
000020E4                           783                  
000020E4                           784  *-----------------------------------------------------------
000020E4                           785  * HELP (Help) - The Help command must display all available
000020E4                           786  * commands and usage descriptions.
000020E4                           787  *
000020E4                           788  *
000020E4                           789  *-----------------------------------------------------------
000020E4  48E7 FFFF                790  MANHELP         MOVEM.L A0-A7/D0-D7,-(SP)
000020E8                           791  
000020E8  49F8 3000                792                  LEA     HELPPTR,A4          ; pointer to string table
000020EC  4BF8 4800                793                  LEA     HELPSTR,A5          ; pointer to jump table
000020F0  47F8 1010                794  NEXTPAGEMAN     LEA     INPUTBUFFER,A3
000020F4  584B                     795                  ADDA.W  #4,A3
000020F6  0C1B 0000                796                  CMPI.B  #NULL,(A3)+
000020FA  6600 000A                797                  BNE     CMPSTR1
000020FE  0C13 0000                798                  CMPI.B  #NULL,(A3)
00002102  6700 0164                799                  BEQ     HELPONLY
00002106  534B                     800  CMPSTR1         SUBA.W  #1,A3
00002108  4EB8 2080                801                  JSR     COMPARESTRING
0000210C                           802                  
0000210C  0C04 0001                803                  CMPI.B  #1,D4
00002110  6700 004A                804                  BEQ     MANPAGEJMP
00002114  584D                     805                  ADDA.W  #4,A5
00002116  BAFC 4834                806                  CMP.W  #$4834,A5
0000211A  6700 014C                807                  BEQ     HELPONLY
0000211E  60D0                     808                  BRA     NEXTPAGEMAN
00002120                           809  
00002120  48E7 FFFF                810  HELP            MOVEM.L A0-A7/D0-D7,-(SP)
00002124                           811  
00002124  49F8 3000                812                  LEA     HELPPTR,A4          ; pointer to string table
00002128  4BF8 4800                813                  LEA     HELPSTR,A5          ; pointer to jump table
0000212C  47F8 1010                814  NEXTPAGE        LEA     INPUTBUFFER,A3
00002130  5A4B                     815                  ADDA.W  #5,A3
00002132  0C1B 0000                816                  CMPI.B  #NULL,(A3)+
00002136  6600 000A                817                  BNE     CMPSTR2
0000213A  0C13 0000                818                  CMPI.B  #NULL,(A3)
0000213E  6700 0128                819                  BEQ     HELPONLY
00002142  534B                     820  CMPSTR2         SUBA.W  #1,A3
00002144  4EB8 2080                821                  JSR     COMPARESTRING
00002148                           822                  
00002148  0C04 0001                823  CHECK           CMPI.B  #1,D4
0000214C  6700 000E                824                  BEQ     MANPAGEJMP
00002150  584D                     825                  ADDA.W  #4,A5
00002152  BAFC 4834                826                  CMP.W  #$4834,A5
00002156  6700 0110                827                  BEQ     HELPONLY
0000215A  60D0                     828                  BRA     NEXTPAGE
0000215C                           829                  
0000215C  2C55                     830  MANPAGEJMP      MOVE.L  (A5),A6
0000215E  4E96                     831                  JSR     (A6)
00002160  6000 0110                832                  BRA     ENDHELP
00002164                           833  
00002164  48E7 FFFF                834  HELPOUT         MOVEM.L A0-A7/D0-D7,-(SP)
00002168  43F8 5000                835                  LEA     HELPMANPAGE,A1
0000216C  103C 000E                836                  MOVE.B  #14,D0
00002170  4E4F                     837                  TRAP    #15
00002172  4CDF FFFF                838                  MOVEM.L (SP)+,A0-A7/D0-D7
00002176  4E75                     839                  RTS
00002178                           840                  
00002178  48E7 FFFF                841  MDSPOUT         MOVEM.L A0-A7/D0-D7,-(SP)
0000217C  43F8 51C0                842                  LEA     MDSPMANPAGE,A1
00002180  103C 000E                843                  MOVE.B  #14,D0
00002184  4E4F                     844                  TRAP    #15
00002186  4CDF FFFF                845                  MOVEM.L (SP)+,A0-A7/D0-D7
0000218A  4E75                     846                  RTS
0000218C                           847                  
0000218C  48E7 FFFF                848  SORTWOUT        MOVEM.L A0-A7/D0-D7,-(SP)
00002190  43F8 543C                849                  LEA     SORTWMANPAGE,A1
00002194  103C 000E                850                  MOVE.B  #14,D0
00002198  4E4F                     851                  TRAP    #15
0000219A  4CDF FFFF                852                  MOVEM.L (SP)+,A0-A7/D0-D7
0000219E  4E75                     853                  RTS
000021A0                           854                  
000021A0  48E7 FFFF                855  MMOUT           MOVEM.L A0-A7/D0-D7,-(SP)
000021A4  43F8 5704                856                  LEA     MMMANPAGE,A1
000021A8  103C 000E                857                  MOVE.B  #14,D0
000021AC  4E4F                     858                  TRAP    #15
000021AE  4CDF FFFF                859                  MOVEM.L (SP)+,A0-A7/D0-D7
000021B2  4E75                     860                  RTS
000021B4                           861                  
000021B4  48E7 FFFF                862  MSOUT           MOVEM.L A0-A7/D0-D7,-(SP)
000021B8  43F8 5952                863                  LEA     MSMANPAGE,A1
000021BC  103C 000E                864                  MOVE.B  #14,D0
000021C0  4E4F                     865                  TRAP    #15
000021C2  4CDF FFFF                866                  MOVEM.L (SP)+,A0-A7/D0-D7
000021C6  4E75                     867                  RTS
000021C8                           868                  
000021C8  48E7 FFFF                869  BFOUT           MOVEM.L A0-A7/D0-D7,-(SP)
000021CC  43F8 5B6E                870                  LEA     BFMANPAGE,A1
000021D0  103C 000E                871                  MOVE.B  #14,D0
000021D4  4E4F                     872                  TRAP    #15
000021D6  4CDF FFFF                873                  MOVEM.L (SP)+,A0-A7/D0-D7
000021DA  4E75                     874                  RTS
000021DC                           875                  
000021DC  48E7 FFFF                876  BMOVOUT         MOVEM.L A0-A7/D0-D7,-(SP)
000021E0  43F8 5E5B                877                  LEA     BMOVMANPAGE,A1
000021E4  103C 000E                878                  MOVE.B  #14,D0
000021E8  4E4F                     879                  TRAP    #15
000021EA  4CDF FFFF                880                  MOVEM.L (SP)+,A0-A7/D0-D7
000021EE  4E75                     881                  RTS
000021F0                           882                  
000021F0  48E7 FFFF                883  BTSTOUT         MOVEM.L A0-A7/D0-D7,-(SP)
000021F4  43F8 605A                884                  LEA     BTSTMANPAGE,A1
000021F8  103C 000E                885                  MOVE.B  #14,D0
000021FC  4E4F                     886                  TRAP    #15
000021FE  4CDF FFFF                887                  MOVEM.L (SP)+,A0-A7/D0-D7
00002202  4E75                     888                  RTS
00002204                           889                  
00002204  48E7 FFFF                890  BSCHOUT         MOVEM.L A0-A7/D0-D7,-(SP)
00002208  43F8 635B                891                  LEA     BSCHMANPAGE,A1
0000220C  103C 000E                892                  MOVE.B  #14,D0
00002210  4E4F                     893                  TRAP    #15
00002212  4CDF FFFF                894                  MOVEM.L (SP)+,A0-A7/D0-D7
00002216  4E75                     895                  RTS
00002218                           896                  
00002218  48E7 FFFF                897  GOOUT           MOVEM.L A0-A7/D0-D7,-(SP)
0000221C  43F8 65EF                898                  LEA     GOMANPAGE,A1
00002220  103C 000E                899                  MOVE.B  #14,D0
00002224  4E4F                     900                  TRAP    #15
00002226  4CDF FFFF                901                  MOVEM.L (SP)+,A0-A7/D0-D7
0000222A  4E75                     902                  RTS
0000222C                           903                  
0000222C  48E7 FFFF                904  DFOUT           MOVEM.L A0-A7/D0-D7,-(SP)
00002230  43F8 67AF                905                  LEA     DFMANPAGE,A1
00002234  103C 000E                906                  MOVE.B  #14,D0
00002238  4E4F                     907                  TRAP    #15
0000223A  4CDF FFFF                908                  MOVEM.L (SP)+,A0-A7/D0-D7
0000223E  4E75                     909                  RTS
00002240                           910                  
00002240  48E7 FFFF                911  EXITOUT         MOVEM.L A0-A7/D0-D7,-(SP)
00002244  43F8 69DD                912                  LEA     EXITMANPAGE,A1
00002248  103C 000E                913                  MOVE.B  #14,D0
0000224C  4E4F                     914                  TRAP    #15
0000224E  4CDF FFFF                915                  MOVEM.L (SP)+,A0-A7/D0-D7
00002252  4E75                     916                  RTS
00002254                           917                  
00002254  48E7 FFFF                918  MANOUT          MOVEM.L A0-A7/D0-D7,-(SP)
00002258  43F8 6B98                919                  LEA     MANMANPAGE,A1
0000225C  103C 000E                920                  MOVE.B  #14,D0
00002260  4E4F                     921                  TRAP    #15
00002262  4CDF FFFF                922                  MOVEM.L (SP)+,A0-A7/D0-D7
00002266  4E75                     923                  RTS
00002268                           924                  
00002268  43F8 127D                925  HELPONLY        LEA     HELPMSG,A1
0000226C  103C 000E                926                  MOVE.B  #14,D0
00002270  4E4F                     927                  TRAP    #15
00002272                           928                  
00002272  4CDF FFFF                929  ENDHELP         MOVEM.L (SP)+,A0-A7/D0-D7
00002276  4E75                     930                  RTS
00002278                           931                  
00002278                           932  *-----------------------------------------------------------
00002278                           933  * Check for Dollarsign and Convert Argument to Hex
00002278                           934  * A0 = ptr to command buffer, incremented by INDEX
00002278                           935  * D3 = output               A4 = ptr to output
00002278                           936  * D2 = 1 - INVALID ADDRESS, 0 - VALID ADDRESS
00002278                           937  * D4 = 0 - HEX VALUE, 1 - NON HEX VALUE
00002278                           938  * D5 - LENGTH OF STRING
00002278                           939  *-----------------------------------------------------------
00002278  48E7 C3F7                940  CHKDOLLAR   MOVEM.L A0-A3/A5-A7/D0-D1/D6-D7,-(SP)
0000227C  4282                     941              CLR.L   D2
0000227E  4283                     942              CLR.L   D3
00002280                           943              
00002280  0C10 0024                944              CMPI.B  #HEX,(A0)
00002284  6700 0006                945              BEQ     DOLLARSIGN
00002288  6000 0004                946              BRA     ARGPTR
0000228C  5248                     947  DOLLARSIGN  ADDA.W  #1,A0         
0000228E  2A48                     948  ARGPTR      MOVEA.L A0,A5
00002290                           949  
00002290  5203                     950  CMPNULL     ADDI.B  #1,D3
00002292  0C18 0000                951              CMPI.B  #NULL,(A0)+
00002296  6700 0004                952              BEQ     ENDPTR
0000229A  60F4                     953              BRA     CMPNULL
0000229C  5303                     954  ENDPTR      SUBI.B  #1,D3
0000229E  5348                     955              SUBA.W  #1,A0
000022A0  2C48                     956              MOVEA.L A0,A6
000022A2  0C03 0008                957              CMPI.B  #8,D3
000022A6  6F00 0018                958              BLE     SAFE
000022AA  7401                     959              MOVE.L  #1,D2
000022AC  4EB9 000028EC            960              JSR     ASCII2HEX
000022B2  43F8 1161                961              LEA     ADDRERROR,A1
000022B6  103C 000E                962              MOVE.B  #14,D0
000022BA  4E4F                     963              TRAP    #15
000022BC  6000 000A                964              BRA     INVALIDADDR
000022C0                           965                   
000022C0  7400                     966  SAFE        MOVE.L  #0,D2
000022C2  4EB9 000028EC            967              JSR     ASCII2HEX
000022C8                           968  
000022C8  4CDF EFC3                969  INVALIDADDR MOVEM.L (SP)+,A0-A3/A5-A7/D0-D1/D6-D7
000022CC  4E75                     970              RTS
000022CE                           971  
000022CE                           972  *-----------------------------------------------------------
000022CE                           973  * MDSP Print Loop
000022CE                           974  * A2 = ptr to beginning memory A3 = ptr to ending memory
000022CE                           975  *-----------------------------------------------------------
000022CE  48E7 FFFF                976  MDSPPRINT   MOVEM.L A0-A7/D0-D7,-(SP)
000022D2                           977  
000022D2  2A8A                     978  INCREMENT   MOVE.L  A2,(A5)
000022D4  584E                     979              ADDA.W  #4,A6
000022D6  4EB9 0000295A            980              JSR     HEX2ASCII
000022DC  224C                     981              MOVEA.L A4,A1
000022DE  323C 0008                982              MOVE.W  #8,D1  
000022E2  103C 0001                983              MOVE.B  #1,D0
000022E6  4E4F                     984              TRAP    #15
000022E8  43F8 1279                985              LEA     SPACE,A1
000022EC  103C 000E                986              MOVE.B  #14,D0
000022F0  4E4F                     987              TRAP    #15
000022F2  1A92                     988              MOVE.B  (A2),(A5)
000022F4  4DF8 1138                989              LEA     BUFFER,A6
000022F8  524E                     990              ADDA.W  #1,A6
000022FA  4EB9 0000295A            991              JSR     HEX2ASCII
00002300  224C                     992              MOVEA.L A4,A1
00002302  323C 0002                993              MOVE.W  #2,D1  
00002306  103C 0000                994              MOVE.B  #0,D0
0000230A  4E4F                     995              TRAP    #15
0000230C  524A                     996              ADDA.W  #1,A2
0000230E  B7CA                     997              CMP.L   A2,A3
00002310  66C0                     998              BNE     INCREMENT
00002312                           999              
00002312  4CDF FFFF               1000              MOVEM.L (SP)+,A0-A7/D0-D7
00002316  4E75                    1001              RTS
00002318                          1002  
00002318                          1003  
00002318                          1004  *-----------------------------------------------------------
00002318                          1005  * MDSP (Memory Display) - The MDSP (Memory Display) command
00002318                          1006  * outputs the address and memory contents from <address1> to
00002318                          1007  * <address2>. The MDSP (Memory Display) command ALSO outputs
00002318                          1008  * the address and memory contents from <address1> to <address1 + 16bytes>
00002318                          1009  *-----------------------------------------------------------
00002318  48E7 FFFF               1010  MDSP        MOVEM.L A0-A7/D0-D7,-(SP)
0000231C                          1011              
0000231C  4283                    1012              CLR.L   D3
0000231E  4EB9 000028AA           1013              JSR     ARGV
00002324  41F8 1060               1014              LEA     CMDBUFFER,A0
00002328  D0FC 0014               1015              ADDA.W  #INDEX,A0
0000232C                          1016              
0000232C  4EB8 2278               1017              JSR     CHKDOLLAR
00002330                          1018              
00002330  21D4 1100               1019              MOVE.L  (A4),$1100
00002334                          1020              
00002334  0C02 0002               1021              CMPI.B  #2,D2
00002338  6700 000A               1022              BEQ     ARG1
0000233C                          1023              
0000233C  0C02 0003               1024              CMPI.B  #3,D2
00002340  6700 001E               1025              BEQ     ARG2
00002344                          1026              
00002344  41F8 1110               1027  ARG1        LEA     ASCIIBUFFER,A0
00002348  2450                    1028              MOVEA.L (A0),A2
0000234A  4BF8 1138               1029              LEA     BUFFER,A5
0000234E  4DF8 1138               1030              LEA     BUFFER,A6
00002352  264A                    1031              MOVEA.L A2,A3
00002354  D6FC 0010               1032              ADDA.W  #16,A3
00002358                          1033              
00002358  4EB8 22CE               1034              JSR     MDSPPRINT
0000235C                          1035              
0000235C  6000 002E               1036              BRA     MDSPDONE
00002360                          1037           
00002360  41F8 1060               1038  ARG2        LEA     CMDBUFFER,A0
00002364  103C 0002               1039              MOVE.B  #2,D0
00002368  123C 0014               1040              MOVE.B  #INDEX,D1
0000236C  C2C0                    1041              MULU    D0,D1
0000236E  D0C1                    1042              ADDA.W  D1,A0
00002370                          1043              
00002370  4EB8 2278               1044              JSR     CHKDOLLAR
00002374                          1045              
00002374  41F8 1100               1046              LEA     $1100,A0
00002378  43F8 1110               1047              LEA     ASCIIBUFFER,A1
0000237C  2450                    1048              MOVEA.L (A0),A2
0000237E  2651                    1049              MOVEA.L (A1),A3
00002380  4BF8 1138               1050              LEA     BUFFER,A5
00002384  4DF8 1138               1051              LEA     BUFFER,A6
00002388                          1052              
00002388  4EB8 22CE               1053              JSR     MDSPPRINT
0000238C                          1054              
0000238C  4CDF FFFF               1055  MDSPDONE    MOVEM.L (SP)+,A0-A7/D0-D7
00002390  4E75                    1056              RTS
00002392                          1057  
00002392                          1058  *-----------------------------------------------------------
00002392                          1059  * Bubble Sort
00002392                          1060  * A0 - ptr to beginning memory A1 = ptr to ending memory
00002392                          1061  * D1 = 1 - Ascending, 0 - Descending 
00002392                          1062  *-----------------------------------------------------------
00002392  48E7 FFFF               1063  BUBBLESORT  MOVEM.L A0-A7/D0-D7,-(SP)
00002396                          1064              
00002396  2448                    1065              MOVE.L  A0,A2
00002398  204A                    1066  BUBBLELOOP  MOVE.L  A2,A0
0000239A                          1067  
0000239A  0C01 0001               1068  BUBBLECMP   CMPI.B  #1,D1
0000239E  6700 000A               1069              BEQ     DESCEND
000023A2  B148                    1070              CMP.W   (A0)+,(A0)+
000023A4  6212                    1071              BHI.S   BUBBLESWAP
000023A6  6000 0006               1072              BRA     SORT
000023AA                          1073        
000023AA  B148                    1074  DESCEND     CMP.W   (A0)+,(A0)+
000023AC  650A                    1075              BLO.S   BUBBLESWAP
000023AE                          1076              
000023AE  5588                    1077  SORT        SUBQ.L  #2,A0
000023B0  B3C8                    1078              CMP.L   A0,A1
000023B2  66E6                    1079              BNE     BUBBLECMP
000023B4  6000 000A               1080              BRA     BUBBLEDN
000023B8  2020                    1081  BUBBLESWAP  MOVE.L  -(A0),D0
000023BA  4840                    1082              SWAP.W  D0
000023BC  2080                    1083              MOVE.L  D0,(A0)
000023BE  60D8                    1084              BRA     BUBBLELOOP
000023C0                          1085  
000023C0  4CDF FFFF               1086  BUBBLEDN    MOVEM.L (SP)+,A0-A7/D0-D7
000023C4  4E75                    1087              RTS
000023C6                          1088  
000023C6                          1089  *-----------------------------------------------------------
000023C6                          1090  * SORTW (Sort) - The SORT command sorts a block of memory. The starting
000023C6                          1091  * address <address1> and the ending address <address2> of the memory block
000023C6                          1092  * are specified in the command. The order (A or D) specifies whether the list is 
000023C6                          1093  * sorted in Ascending or Descending order. (The size of the data to be sorted is a word)
000023C6                          1094  *-----------------------------------------------------------
000023C6  48E7 FFFF               1095  SORTW       MOVEM.L A0-A7/D0-D7,-(SP)
000023CA                          1096  
000023CA  4EB9 000028AA           1097              JSR     ARGV
000023D0  41F8 1060               1098              LEA     CMDBUFFER,A0
000023D4  D0FC 0014               1099              ADDA.W  #INDEX,A0
000023D8                          1100              
000023D8  4EB8 2278               1101              JSR     CHKDOLLAR
000023DC  B43C 0001               1102              CMP.B   #1,D2
000023E0  6700 005E               1103              BEQ     SORTWDONE
000023E4  2254                    1104              MOVEA.L (A4),A1
000023E6                          1105              
000023E6  41F8 1060               1106              LEA     CMDBUFFER,A0
000023EA  103C 0002               1107              MOVE.B  #2,D0
000023EE  123C 0014               1108              MOVE.B  #INDEX,D1
000023F2  C2C0                    1109              MULU    D0,D1
000023F4  D0C1                    1110              ADDA.W  D1,A0
000023F6                          1111              
000023F6  4EB8 2278               1112              JSR     CHKDOLLAR
000023FA  B43C 0001               1113              CMP.B   #1,D2
000023FE  6700 0040               1114              BEQ     SORTWDONE
00002402  2049                    1115              MOVEA.L A1,A0
00002404  2254                    1116              MOVEA.L (A4),A1
00002406                          1117              
00002406  45F8 1060               1118              LEA     CMDBUFFER,A2
0000240A  103C 0003               1119              MOVE.B  #3,D0
0000240E  123C 0014               1120              MOVE.B  #INDEX,D1
00002412  C2C0                    1121              MULU    D0,D1
00002414  D4C1                    1122              ADDA.W  D1,A2
00002416                          1123              
00002416  0C12 0041               1124              CMP.B   #'A',(A2)
0000241A  6700 0018               1125              BEQ     ASCENDING
0000241E                          1126              
0000241E  0C12 0044               1127              CMP.B   #'D',(A2)
00002422  6700 0016               1128              BEQ     DESCENDING
00002426                          1129              
00002426  43F8 114C               1130              LEA     ERRORMSG,A1
0000242A  103C 000E               1131              MOVE.B  #14,D0
0000242E  4E4F                    1132              TRAP    #15
00002430  6000 000E               1133              BRA     SORTWDONE
00002434                          1134              
00002434  7201                    1135  ASCENDING   MOVE.L  #1,D1
00002436  6000 0004               1136              BRA     BSORT
0000243A                          1137              
0000243A  7200                    1138  DESCENDING  MOVE.L  #0,D1
0000243C                          1139              
0000243C  4EB8 2392               1140  BSORT       JSR     BUBBLESORT
00002440                          1141          
00002440  4CDF FFFF               1142  SORTWDONE   MOVEM.L (SP)+,A0-A7/D0-D7
00002444  4E75                    1143              RTS
00002446                          1144  
00002446                          1145  *-----------------------------------------------------------
00002446                          1146  * MM Print Loop
00002446                          1147  * A2 = ptr to beginning memory A3 = ptr to ending memory
00002446                          1148  * D2 = SIZE OF MEMORY OUTPUT D4 = LENGTH OF OUTPUT
00002446                          1149  *-----------------------------------------------------------
00002446  48E7 FFFF               1150  MMPRINT     MOVEM.L A0-A7/D0-D7,-(SP)
0000244A                          1151  
0000244A  2A8A                    1152  INCREMENT2  MOVE.L  A2,(A5)
0000244C  584E                    1153              ADDA.W  #4,A6
0000244E  4EB9 0000295A           1154              JSR     HEX2ASCII
00002454                          1155              
00002454  224C                    1156              MOVEA.L A4,A1
00002456  123C 0008               1157              MOVE.B  #8,D1
0000245A  103C 0001               1158              MOVE.B  #1,D0
0000245E  4E4F                    1159              TRAP    #15
00002460                          1160              
00002460  43F8 1279               1161              LEA     SPACE,A1
00002464  103C 000E               1162              MOVE.B  #14,D0
00002468  4E4F                    1163              TRAP    #15
0000246A                          1164              
0000246A  B43C 0001               1165              CMP.B   #1,D2
0000246E  6700 0012               1166              BEQ     BYTEPRINT
00002472                          1167              
00002472  B43C 0002               1168              CMP.B   #2,D2
00002476  6700 0066               1169              BEQ     WORDPRINT
0000247A                          1170              
0000247A  B43C 0004               1171              CMP.B   #4,D2
0000247E  6700 00BA               1172              BEQ     LONGPRINT
00002482                          1173              
00002482  1A92                    1174  BYTEPRINT   MOVE.B  (A2),(A5)
00002484  4DF8 1138               1175              LEA     BUFFER,A6
00002488  DCC2                    1176              ADDA.W  D2,A6
0000248A  4EB9 0000295A           1177              JSR     HEX2ASCII
00002490  224C                    1178              MOVEA.L A4,A1
00002492  2204                    1179              MOVE.L  D4,D1  
00002494  103C 0001               1180              MOVE.B  #1,D0
00002498  4E4F                    1181              TRAP    #15
0000249A                          1182              
0000249A  43F8 1279               1183              LEA     SPACE,A1
0000249E  103C 000E               1184              MOVE.B  #14,D0
000024A2  4E4F                    1185              TRAP    #15
000024A4                          1186              
000024A4  43F8 1138               1187              LEA     BUFFER,A1
000024A8  103C 0002               1188              MOVE.B  #2,D0
000024AC  4E4F                    1189              TRAP    #15
000024AE                          1190              
000024AE  0C11 002E               1191              CMPI.B  #'.',(A1)
000024B2  6700 00EA               1192              BEQ     MMPRINTDN
000024B6                          1193              
000024B6  B23C 0000               1194              CMP.B   #0,D1
000024BA  6700 001C               1195              BEQ     BYTECONT
000024BE                          1196  
000024BE  B204                    1197              CMP.B   D4,D1
000024C0  6600 00D2               1198              BNE     MMERROR
000024C4                          1199              
000024C4  4BF8 1138               1200              LEA     BUFFER,A5
000024C8  4DF8 1138               1201              LEA     BUFFER,A6
000024CC  DCC4                    1202              ADDA.W  D4,A6
000024CE  4EB9 000028EC           1203              JSR     ASCII2HEX
000024D4  564C                    1204              ADDA.W  #3,A4
000024D6  1494                    1205              MOVE.B  (A4),(A2)
000024D8                          1206              
000024D8  D4C2                    1207  BYTECONT    ADDA.W  D2,A2
000024DA  6000 FF6E               1208              BRA     INCREMENT2
000024DE                          1209              
000024DE  3A92                    1210  WORDPRINT   MOVE.W  (A2),(A5)
000024E0  4DF8 1138               1211              LEA     BUFFER,A6
000024E4  DCC2                    1212              ADDA.W  D2,A6
000024E6  4EB9 0000295A           1213              JSR     HEX2ASCII
000024EC  224C                    1214              MOVEA.L A4,A1
000024EE  2204                    1215              MOVE.L  D4,D1  
000024F0  103C 0001               1216              MOVE.B  #1,D0
000024F4  4E4F                    1217              TRAP    #15
000024F6                          1218              
000024F6  43F8 1279               1219              LEA     SPACE,A1
000024FA  103C 000E               1220              MOVE.B  #14,D0
000024FE  4E4F                    1221              TRAP    #15
00002500                          1222              
00002500  43F8 1138               1223              LEA     BUFFER,A1
00002504  103C 0002               1224              MOVE.B  #2,D0
00002508  4E4F                    1225              TRAP    #15
0000250A                          1226              
0000250A  0C11 002E               1227              CMPI.B  #'.',(A1)
0000250E  6700 008E               1228              BEQ     MMPRINTDN
00002512                          1229  
00002512  B23C 0000               1230              CMP.B   #0,D1
00002516  6700 001C               1231              BEQ     WORDCONT    
0000251A                          1232  
0000251A  B204                    1233              CMP.B   D4,D1
0000251C  6600 0076               1234              BNE     MMERROR
00002520                          1235              
00002520  4BF8 1138               1236              LEA     BUFFER,A5
00002524  4DF8 1138               1237              LEA     BUFFER,A6
00002528  DCC4                    1238              ADDA.W  D4,A6
0000252A  4EB9 000028EC           1239              JSR     ASCII2HEX
00002530  544C                    1240              ADDA.W  #2,A4
00002532  3494                    1241              MOVE.W (A4),(A2)
00002534                          1242              
00002534  D4C2                    1243  WORDCONT    ADDA.W  D2,A2
00002536  6000 FF12               1244              BRA     INCREMENT2
0000253A                          1245              
0000253A  2A92                    1246  LONGPRINT   MOVE.L  (A2),(A5)
0000253C  4DF8 1138               1247              LEA     BUFFER,A6
00002540  DCC2                    1248              ADDA.W  D2,A6
00002542  4EB9 0000295A           1249              JSR     HEX2ASCII
00002548  224C                    1250              MOVEA.L A4,A1
0000254A  2204                    1251              MOVE.L  D4,D1  
0000254C  103C 0001               1252              MOVE.B  #1,D0
00002550  4E4F                    1253              TRAP    #15
00002552                          1254              
00002552  43F8 1279               1255              LEA     SPACE,A1
00002556  103C 000E               1256              MOVE.B  #14,D0
0000255A  4E4F                    1257              TRAP    #15
0000255C                          1258              
0000255C  43F8 1138               1259              LEA     BUFFER,A1
00002560  103C 0002               1260              MOVE.B  #2,D0
00002564  4E4F                    1261              TRAP    #15
00002566                          1262              
00002566  0C11 002E               1263              CMPI.B  #'.',(A1)
0000256A  6700 0032               1264              BEQ     MMPRINTDN
0000256E                          1265              
0000256E  B23C 0000               1266              CMP.B   #0,D1
00002572  6700 001A               1267              BEQ     LONGCONT
00002576                          1268          
00002576  B204                    1269              CMP.B   D4,D1
00002578  6600 001A               1270              BNE     MMERROR
0000257C                          1271              
0000257C  4BF8 1138               1272              LEA     BUFFER,A5
00002580  4DF8 1138               1273              LEA     BUFFER,A6
00002584  DCC4                    1274              ADDA.W  D4,A6
00002586  4EB9 000028EC           1275              JSR     ASCII2HEX
0000258C  2494                    1276              MOVE.L  (A4),(A2)
0000258E                          1277              
0000258E  D4C2                    1278  LONGCONT    ADDA.W  D2,A2
00002590  6000 FEB8               1279              BRA     INCREMENT2
00002594                          1280  
00002594  43F8 114C               1281  MMERROR     LEA     ERRORMSG,A1
00002598  103C 000E               1282              MOVE.B  #14,D0
0000259C  4E4F                    1283              TRAP    #15    
0000259E                          1284              
0000259E  4CDF FFFF               1285  MMPRINTDN   MOVEM.L (SP)+,A0-A7/D0-D7
000025A2  4E75                    1286              RTS
000025A4                          1287  
000025A4                          1288  
000025A4                          1289  *-----------------------------------------------------------
000025A4                          1290  * MM (Memory Modify) - MM (Memory Modify) command is used to display memory and,
000025A4                          1291  * as required, modify data or enter new data. The size (bye, word, long word) controls
000025A4                          1292  * the number of bytes displayed for each address.
000025A4                          1293  *
000025A4                          1294  *-----------------------------------------------------------
000025A4  48E7 FFFF               1295  MM          MOVEM.L A0-A7/D0-D7,-(SP)
000025A8                          1296  
000025A8  4EB9 000028AA           1297              JSR     ARGV
000025AE  41F8 1060               1298              LEA     CMDBUFFER,A0
000025B2  D0FC 0014               1299              ADDA.W  #INDEX,A0
000025B6                          1300              
000025B6  4EB8 2278               1301              JSR     CHKDOLLAR
000025BA  B43C 0001               1302              CMP.B   #1,D2
000025BE  6700 0078               1303              BEQ     MMDONE
000025C2  2254                    1304              MOVEA.L (A4),A1
000025C4                          1305              
000025C4  45F8 1060               1306              LEA     CMDBUFFER,A2
000025C8  103C 0002               1307              MOVE.B  #2,D0
000025CC  123C 0014               1308              MOVE.B  #INDEX,D1
000025D0  C2C0                    1309              MULU    D0,D1
000025D2  D4C1                    1310              ADDA.W  D1,A2
000025D4                          1311              
000025D4  0C12 0042               1312              CMP.B   #'B',(A2)
000025D8  6700 0020               1313              BEQ     BYTE
000025DC                          1314              
000025DC  0C12 0057               1315              CMP.B   #'W',(A2)
000025E0  6700 002E               1316              BEQ     WORD
000025E4                          1317              
000025E4  0C12 004C               1318              CMP.B   #'L',(A2)
000025E8  6700 003C               1319              BEQ     LONG
000025EC                          1320              
000025EC  43F8 114C               1321              LEA     ERRORMSG,A1
000025F0  103C 000E               1322              MOVE.B  #14,D0
000025F4  4E4F                    1323              TRAP    #15
000025F6  6000 0040               1324              BRA     MMDONE
000025FA                          1325              
000025FA  7401                    1326  BYTE        MOVE.L  #1,D2
000025FC  7802                    1327              MOVE.L  #2,D4
000025FE  2449                    1328              MOVEA.L A1,A2
00002600  4BF8 1138               1329              LEA     BUFFER,A5
00002604  4DF8 1138               1330              LEA     BUFFER,A6
00002608  4EB8 2446               1331              JSR     MMPRINT
0000260C  6000 002A               1332              BRA     MMDONE
00002610                          1333              
00002610  7402                    1334  WORD        MOVE.L  #2,D2
00002612  7804                    1335              MOVE.L  #4,D4
00002614  2449                    1336              MOVEA.L A1,A2
00002616  4BF8 1138               1337              LEA     BUFFER,A5
0000261A  4DF8 1138               1338              LEA     BUFFER,A6
0000261E  4EB8 2446               1339              JSR     MMPRINT
00002622  6000 0014               1340              BRA     MMDONE
00002626                          1341              
00002626  7404                    1342  LONG        MOVE.L  #4,D2
00002628  7808                    1343              MOVE.L  #8,D4
0000262A  2449                    1344              MOVEA.L A1,A2
0000262C  4BF8 1138               1345              LEA     BUFFER,A5
00002630  4DF8 1138               1346              LEA     BUFFER,A6
00002634  4EB8 2446               1347              JSR     MMPRINT
00002638                          1348  
00002638  4CDF FFFF               1349  MMDONE      MOVEM.L (SP)+,A0-A7/D0-D7
0000263C  4E75                    1350              RTS
0000263E                          1351  
0000263E                          1352  *-----------------------------------------------------------
0000263E                          1353  * MS (Memory Set) - The Memory Set (MS) command alters memory by setting data into
0000263E                          1354  * the address specified. The data can take the form of ASCII string or hexadecimal
0000263E                          1355  * data.
0000263E                          1356  *
0000263E                          1357  *-----------------------------------------------------------
0000263E  48E7 FFFF               1358  MS          MOVEM.L A0-A7/D0-D7,-(SP)
00002642                          1359  
00002642  4EB9 000028AA           1360              JSR     ARGV
00002648  41F8 1060               1361              LEA     CMDBUFFER,A0
0000264C  D0FC 0014               1362              ADDA.W  #INDEX,A0
00002650                          1363              
00002650  4EB8 2278               1364              JSR     CHKDOLLAR
00002654  B83C 0001               1365              CMP.B   #1,D4
00002658  6700 0056               1366              BEQ     MSERROR
0000265C  B43C 0001               1367              CMP.B   #1,D2
00002660  6700 0058               1368              BEQ     MSDONE
00002664  2254                    1369              MOVEA.L (A4),A1
00002666                          1370              
00002666  41F8 1060               1371              LEA     CMDBUFFER,A0
0000266A  103C 0002               1372              MOVE.B  #2,D0
0000266E  123C 0014               1373              MOVE.B  #INDEX,D1
00002672  C2C0                    1374              MULU    D0,D1
00002674  D0C1                    1375              ADDA.W  D1,A0
00002676                          1376              
00002676  4EB8 2278               1377              JSR     CHKDOLLAR
0000267A  B83C 0001               1378              CMP.B   #1,D4
0000267E  6700 0016               1379              BEQ     ASCIIDATA
00002682  B43C 0001               1380              CMP.B   #1,D2
00002686  6700 0032               1381              BEQ     MSDONE
0000268A  2049                    1382              MOVEA.L A1,A0
0000268C  0C1C 0000               1383  INCPTR      CMP.B   #NULL,(A4)+
00002690  67FA                    1384              BEQ     INCPTR
00002692  534C                    1385              SUBA.W  #1,A4
00002694  2294                    1386              MOVE.L  (A4),(A1)
00002696                          1387              
00002696  43F8 11A5               1388  ASCIIDATA   LEA     STOREDATA,A1
0000269A  103C 000E               1389              MOVE.B  #14,D0
0000269E  4E4F                    1390              TRAP    #15
000026A0                          1391  
000026A0  0C10 0000               1392  DATALOOP    CMP.B   #NULL,(A0)
000026A4  6700 0014               1393              BEQ     MSDONE
000026A8  12D8                    1394              MOVE.B  (A0)+,(A1)+
000026AA  60F4                    1395              BRA     DATALOOP
000026AC                          1396              
000026AC  6000 000C               1397              BRA     MSDONE
000026B0                          1398              
000026B0  43F8 114C               1399  MSERROR     LEA     ERRORMSG,A1
000026B4  103C 000E               1400              MOVE.B  #14,D0
000026B8  4E4F                    1401              TRAP    #15
000026BA                          1402          
000026BA  4CDF FFFF               1403  MSDONE      MOVEM.L (SP)+,A0-A7/D0-D7
000026BE  4E75                    1404              RTS
000026C0                          1405  
000026C0                          1406  *-----------------------------------------------------------
000026C0                          1407  * BF (Block Fill) - The Block Fill (BF) command fills memory starting with the word
000026C0                          1408  * boundary <address1> through <address2>. Both <address1> and <address2> must be even
000026C0                          1409  * addresses. This command only fills with a word-size (2 bytes) data pattern. If an entire
000026C0                          1410  * word-size data pattern is not entered, the pattern is right justified and leading zeros are inserted.
000026C0                          1411  *-----------------------------------------------------------
000026C0  48E7 FFFF               1412  BF          MOVEM.L A0-A7/D0-D7,-(SP)
000026C4                          1413              
000026C4  4286                    1414              CLR.L   D6
000026C6  4EB9 000028AA           1415              JSR     ARGV
000026CC  41F8 1060               1416              LEA     CMDBUFFER,A0
000026D0  D0FC 0014               1417              ADDA.W  #INDEX,A0
000026D4                          1418              
000026D4  4EB8 2278               1419              JSR     CHKDOLLAR
000026D8  B43C 0001               1420              CMP.B   #1,D2
000026DC  6700 00A6               1421              BEQ     BFDONE
000026E0  2254                    1422              MOVEA.L (A4),A1
000026E2                          1423              
000026E2  2409                    1424              MOVE.L  A1,D2
000026E4  84FC 0002               1425              DIVU    #2,D2
000026E8  4842                    1426              SWAP    D2
000026EA  B47C 0000               1427              CMP.W   #0,D2
000026EE  6600 007A               1428              BNE     ODDADDR1
000026F2                          1429              
000026F2  41F8 1060               1430  CHKADDR2    LEA     CMDBUFFER,A0
000026F6  103C 0002               1431              MOVE.B  #2,D0
000026FA  123C 0014               1432              MOVE.B  #INDEX,D1
000026FE  C2C0                    1433              MULU    D0,D1
00002700  D0C1                    1434              ADDA.W  D1,A0
00002702                          1435              
00002702  4EB8 2278               1436              JSR     CHKDOLLAR
00002706  B43C 0001               1437              CMP.B   #1,D2
0000270A  6700 0078               1438              BEQ     BFDONE
0000270E  2454                    1439              MOVEA.L (A4),A2
00002710                          1440              
00002710  240A                    1441              MOVE.L  A2,D2
00002712  84FC 0002               1442              DIVU    #2,D2
00002716  4842                    1443              SWAP    D2
00002718  B47C 0000               1444              CMP.W   #0,D2
0000271C  6600 005C               1445              BNE     ODDADDR2
00002720                          1446              
00002720  BC3C 0001               1447              CMP.B   #1,D6
00002724  6700 005E               1448              BEQ     BFDONE
00002728                          1449              
00002728  41F8 1060               1450              LEA     CMDBUFFER,A0
0000272C  103C 0003               1451              MOVE.B  #3,D0
00002730  123C 0014               1452              MOVE.B  #INDEX,D1
00002734  C2C0                    1453              MULU    D0,D1
00002736  D0C1                    1454              ADDA.W  D1,A0
00002738                          1455              
00002738  4EB8 2278               1456              JSR     CHKDOLLAR
0000273C  B43C 0001               1457              CMP.B   #1,D2
00002740  6700 0042               1458              BEQ     BFDONE
00002744  2654                    1459              MOVEA.L (A4),A3
00002746                          1460              
00002746  BA3C 0004               1461              CMP.B   #4,D5
0000274A  6700 0006               1462              BEQ     FILLLOOP
0000274E  6E00 000C               1463              BGT     DATALONG
00002752                          1464          
00002752  32CB                    1465  FILLLOOP    MOVE.W  A3,(A1)+
00002754  B5C9                    1466              CMP.L   A1,A2
00002756  66FA                    1467              BNE     FILLLOOP
00002758  6000 002A               1468              BRA     BFDONE
0000275C                          1469              
0000275C  43F8 1206               1470  DATALONG    LEA     DATALONGMSG,A1
00002760  103C 000E               1471              MOVE.B  #14,D0
00002764  4E4F                    1472              TRAP    #15
00002766  6000 001C               1473              BRA     BFDONE
0000276A                          1474  
0000276A  7C01                    1475  ODDADDR1    MOVE.L  #1,D6
0000276C  43F8 11BE               1476              LEA     ODDADDRMSG1,A1
00002770  103C 000E               1477              MOVE.B  #14,D0
00002774  4E4F                    1478              TRAP    #15
00002776  6000 FF7A               1479              BRA     CHKADDR2
0000277A                          1480              
0000277A  43F8 11E2               1481  ODDADDR2    LEA     ODDADDRMSG2,A1
0000277E  103C 000E               1482              MOVE.B  #14,D0
00002782  4E4F                    1483              TRAP    #15           
00002784                          1484                  
00002784  4CDF FFFF               1485  BFDONE      MOVEM.L (SP)+,A0-A7/D0-D7
00002788  4E75                    1486              RTS
0000278A                          1487  
0000278A                          1488  *-----------------------------------------------------------
0000278A                          1489  * BMOV (Block Move) - The Block Move (BMOV) command is used to move (duplicate) blocks
0000278A                          1490  * of memory from one area to another.
0000278A                          1491  *
0000278A                          1492  *
0000278A                          1493  *-----------------------------------------------------------
0000278A  48E7 FFFF               1494  BMOV        MOVEM.L A0-A7/D0-D7,-(SP)
0000278E                          1495  
0000278E  4EB9 000028AA           1496              JSR     ARGV
00002794  41F8 1060               1497              LEA     CMDBUFFER,A0
00002798  D0FC 0014               1498              ADDA.W  #INDEX,A0
0000279C                          1499              
0000279C  4EB8 2278               1500              JSR     CHKDOLLAR
000027A0  B43C 0001               1501              CMP.B   #1,D2
000027A4  6700 0046               1502              BEQ     BMOVDONE
000027A8  2254                    1503              MOVEA.L (A4),A1
000027AA                          1504              
000027AA  41F8 1060               1505              LEA     CMDBUFFER,A0
000027AE  103C 0002               1506              MOVE.B  #2,D0
000027B2  123C 0014               1507              MOVE.B  #INDEX,D1
000027B6  C2C0                    1508              MULU    D0,D1
000027B8  D0C1                    1509              ADDA.W  D1,A0
000027BA                          1510              
000027BA  4EB8 2278               1511              JSR     CHKDOLLAR
000027BE  B43C 0001               1512              CMP.B   #1,D2
000027C2  6700 0028               1513              BEQ     BMOVDONE
000027C6  2454                    1514              MOVEA.L (A4),A2
000027C8                          1515              
000027C8  41F8 1060               1516              LEA     CMDBUFFER,A0
000027CC  103C 0003               1517              MOVE.B  #3,D0
000027D0  123C 0014               1518              MOVE.B  #INDEX,D1
000027D4  C2C0                    1519              MULU    D0,D1
000027D6  D0C1                    1520              ADDA.W  D1,A0
000027D8                          1521              
000027D8  4EB8 2278               1522              JSR     CHKDOLLAR
000027DC  B43C 0001               1523              CMP.B   #1,D2
000027E0  6700 000A               1524              BEQ     BMOVDONE
000027E4  2654                    1525              MOVEA.L (A4),A3
000027E6                          1526              
000027E6  16D9                    1527  BMOVLOOP    MOVE.B  (A1)+,(A3)+
000027E8  B5C9                    1528              CMP.L   A1,A2
000027EA  66FA                    1529              BNE     BMOVLOOP
000027EC                          1530          
000027EC  4CDF FFFF               1531  BMOVDONE    MOVEM.L (SP)+,A0-A7/D0-D7
000027F0  4E75                    1532              RTS
000027F2                          1533  
000027F2                          1534  *-----------------------------------------------------------
000027F2                          1535  * BTST (Block Test) - The Block Test (BT) command is a destructive test of a block of memory
000027F2                          1536  * beginning at <address1> through <address2>. If this test runs to completion without detecting
000027F2                          1537  * errors, and display a message that no error was detected. If memory problems are found, a message
000027F2                          1538  * is displayed indicating the address, the data stored, and the data read of the failing memory.
000027F2                          1539  *-----------------------------------------------------------
000027F2  48E7 FFFF               1540  BTST        MOVEM.L A0-A7/D0-D7,-(SP)
000027F6                          1541          
000027F6  4EB9 000028AA           1542              JSR     ARGV
000027FC  41F8 1060               1543              LEA     CMDBUFFER,A0
00002800  D0FC 0014               1544              ADDA.W  #INDEX,A0
00002804                          1545              
00002804  4EB8 2278               1546              JSR     CHKDOLLAR
00002808  B43C 0001               1547              CMP.B   #1,D2
0000280C  67DE                    1548              BEQ     BMOVDONE
0000280E  2254                    1549              MOVEA.L (A4),A1
00002810  2654                    1550              MOVEA.L (A4),A3
00002812                          1551              
00002812  41F8 1060               1552              LEA     CMDBUFFER,A0
00002816  103C 0002               1553              MOVE.B  #2,D0
0000281A  123C 0014               1554              MOVE.B  #INDEX,D1
0000281E  C2C0                    1555              MULU    D0,D1
00002820  D0C1                    1556              ADDA.W  D1,A0
00002822                          1557              
00002822  4EB8 2278               1558              JSR     CHKDOLLAR
00002826  B43C 0001               1559              CMP.B   #1,D2
0000282A  67C0                    1560              BEQ     BMOVDONE
0000282C  2454                    1561              MOVEA.L (A4),A2
0000282E                          1562              
0000282E  12FC 00AA               1563  BTSTLOOP    MOVE.B  #TESTVAL1,(A1)+
00002832  B5C9                    1564              CMP.L   A1,A2
00002834  66F8                    1565              BNE     BTSTLOOP
00002836                          1566              
00002836  0C1B 00AA               1567  MEMCHKLP    CMP.B   #TESTVAL1,(A3)+
0000283A  6600 0014               1568              BNE     ERRORDETECT
0000283E  B5CB                    1569              CMP.L   A3,A2
00002840  66F4                    1570              BNE     MEMCHKLP
00002842  43F8 125D               1571              LEA     MEMSUCCESS,A1
00002846  103C 000E               1572              MOVE.B  #14,D0
0000284A  4E4F                    1573              TRAP    #15
0000284C  6000 0028               1574              BRA     BTSTDONE
00002850                          1575              
00002850  43F8 1243               1576  ERRORDETECT LEA     MEMERROR,A1
00002854  103C 000E               1577              MOVE.B  #14,D0
00002858  4E4F                    1578              TRAP    #15
0000285A  534B                    1579              SUBA.W  #1,A3
0000285C  4BF8 1138               1580              LEA     BUFFER,A5
00002860  4DF8 1138               1581              LEA     BUFFER,A6
00002864  2A8B                    1582              MOVE.L  A3,(A5)
00002866  584E                    1583              ADDA.W  #4,A6
00002868  4EB9 0000295A           1584              JSR     HEX2ASCII
0000286E  224C                    1585              MOVEA.L A4,A1
00002870  103C 000D               1586              MOVE.B  #13,D0
00002874  4E4F                    1587              TRAP    #15
00002876                          1588              
00002876                          1589          
00002876  4CDF FFFF               1590  BTSTDONE    MOVEM.L (SP)+,A0-A7/D0-D7
0000287A  4E75                    1591              RTS
0000287C                          1592  
0000287C                          1593  *-----------------------------------------------------------
0000287C                          1594  * BSCH (Block Search) - The BSCH (Block Search) command is used to search a literal string in a 
0000287C                          1595  * memory block starting at <address1> through <address2> both inclusive. In BSCH command, if search
0000287C                          1596  * finds matching data, the data and address(es) must be displayed.
0000287C                          1597  *
0000287C                          1598  *-----------------------------------------------------------
0000287C  48E7 FFFF               1599  BSCH    MOVEM.L A0-A7/D0-D7,-(SP)
00002880                          1600          
00002880  4CDF FFFF               1601          MOVEM.L (SP)+,A0-A7/D0-D7
00002884  4E75                    1602          RTS
00002886                          1603  
00002886                          1604  *-----------------------------------------------------------
00002886                          1605  * GO (Execute Program) - The GO command is used to start execution from a given address.
00002886                          1606  *
00002886                          1607  *
00002886                          1608  *
00002886                          1609  *-----------------------------------------------------------
00002886  48E7 FFFF               1610  GO      MOVEM.L A0-A7/D0-D7,-(SP)
0000288A                          1611          
0000288A  4CDF FFFF               1612          MOVEM.L (SP)+,A0-A7/D0-D7
0000288E  4E75                    1613          RTS
00002890                          1614  
00002890                          1615  *-----------------------------------------------------------
00002890                          1616  * DF (Display Formatted Registers) - The Display Formatted Registers (DF) command is used
00002890                          1617  * to display the MC68000 processor registers. This command should display current PC, SR, US,
00002890                          1618  * SS and D, A registers. Note that since your program will be using D and A registers, those 
00002890                          1619  * changed values should not be shown to the user. Thus, you must save all D and A register
00002890                          1620  * values before any of your subroutines.
00002890                          1621  *-----------------------------------------------------------
00002890  48E7 FFFF               1622  DF      MOVEM.L A0-A7/D0-D7,-(SP)
00002894                          1623          
00002894  4CDF FFFF               1624          MOVEM.L (SP)+,A0-A7/D0-D7
00002898  4E75                    1625          RTS
0000289A                          1626  
0000289A                          1627  *-----------------------------------------------------------
0000289A                          1628  * EXIT (Exit Monitor Program) - The EXIT command terminates/exits your Monitor program.
0000289A                          1629  *
0000289A                          1630  *
0000289A                          1631  *
0000289A                          1632  *-----------------------------------------------------------
0000289A  48E7 FFFF               1633  EXIT    MOVEM.L A0-A7/D0-D7,-(SP)
0000289E                          1634  
0000289E  103C 0009               1635          MOVE.B  #9,D0
000028A2  4E4F                    1636          TRAP    #15
000028A4                          1637          
000028A4  4CDF FFFF               1638          MOVEM.L (SP)+,A0-A7/D0-D7
000028A8  4E75                    1639          RTS
000028AA                          1640          
000028AA                          1641  *-----------------------------------------------------------
000028AA                          1642  * ARGV Command Line Parsing Subroutine
000028AA                          1643  * Stores Commands separated by INDEX (12) in memory starting at CMDBUFFER
000028AA                          1644  * D2 = # of Arguments
000028AA                          1645  *-----------------------------------------------------------
000028AA                          1646  
000028AA  48E7 DFFF               1647  ARGV        MOVEM.L A0-A7/D0-D1/D3-D7,-(SP)
000028AE                          1648  
000028AE  41F8 1010               1649              LEA     INPUTBUFFER,A0
000028B2  43F8 1060               1650              LEA     CMDBUFFER,A1
000028B6  45F8 1060               1651              LEA     CMDBUFFER,A2
000028BA  4282                    1652              CLR.L   D2
000028BC  12D0                    1653  CHECKLOOP   MOVE.B  (A0),(A1)+
000028BE  0C10 0020               1654              CMPI.B  #SP,(A0)
000028C2  6700 000C               1655              BEQ     SPFOUND
000028C6  0C18 0000               1656              CMPI.B  #NULL,(A0)+
000028CA  6700 0018               1657              BEQ     NULLFOUND
000028CE  60EC                    1658              BRA     CHECKLOOP
000028D0                          1659                       
000028D0  5349                    1660  SPFOUND     SUBA.W  #1,A1
000028D2  12BC 0000               1661              MOVE.B  #NULL,(A1)
000028D6  5249                    1662              ADDA.W  #1,A1
000028D8  5248                    1663              ADDA.W  #1,A0
000028DA  5202                    1664              ADDI.B  #1,D2
000028DC  D4FC 0014               1665              ADDA.W  #INDEX,A2
000028E0  224A                    1666              MOVEA.L A2,A1
000028E2  60D8                    1667              BRA     CHECKLOOP
000028E4                          1668      
000028E4  5202                    1669  NULLFOUND   ADDI.B  #1,D2
000028E6  4CDF FFFB               1670              MOVEM.L (SP)+,A0-A7/D0-D1/D3-D7
000028EA  4E75                    1671              RTS
000028EC                          1672          
000028EC                          1673  *-----------------------------------------------------------
000028EC                          1674  *ASCII TO HEX CONVERSION SUBROUTINE
000028EC                          1675  * A5 = ptr to beginning address A6 = ptr to ending address
000028EC                          1676  * D3 = output D4 = 0 - HEX VALUE, 1 - NON HEX VALUE 
000028EC                          1677  * D5 - LENGTH OF STRING  A4 = ptr to output
000028EC                          1678  *-----------------------------------------------------------
000028EC  48E7 E3F7               1679  ASCII2HEX   MOVEM.L A0-A3/A5-A7/D0-D2/D6-D7,-(SP)
000028F0                          1680              
000028F0  287C 00001110           1681              MOVEA.L #ASCIIBUFFER,A4
000028F6  4283                    1682              CLR.L   D3
000028F8  4285                    1683              CLR.L   D5            
000028FA  4282                    1684  ASCIILOOP   CLR.L   D2      
000028FC  BDCD                    1685              CMP.L   A5,A6
000028FE  6700 004E               1686              BEQ     ASCIIDONE
00002902  5205                    1687              ADD.B   #1,D5
00002904  141D                    1688              MOVE.B  (A5)+,D2
00002906  0C02 0030               1689              CMPI.B  #'0',D2
0000290A  6D00 0032               1690              BLT     ASCIIRANGE
0000290E  0C02 0046               1691              CMPI.B  #'F',D2
00002912  6E00 002A               1692              BGT     ASCIIRANGE
00002916  0C02 0039               1693              CMPI.B  #'9',D2
0000291A  6F00 0018               1694              BLE     ASCIINUMBER
0000291E  0C02 0041               1695              CMPI.B  #'A',D2
00002922  6C00 0006               1696              BGE     ASCIILETTER
00002926  6000 0016               1697              BRA     ASCIIRANGE
0000292A  0402 0037               1698  ASCIILETTER SUBI.B  #$37,D2
0000292E  8602                    1699              OR.B    D2,D3
00002930  E99B                    1700              ROL.L   #4,D3
00002932  60C6                    1701              BRA     ASCIILOOP
00002934  0402 0030               1702  ASCIINUMBER SUBI.B  #$30,D2
00002938  8602                    1703              OR.B    D2,D3
0000293A  E99B                    1704              ROL.L   #4,D3
0000293C  60BC                    1705              BRA     ASCIILOOP
0000293E  7801                    1706  ASCIIRANGE  MOVE.L  #1,D4
00002940  43F8 1174               1707              LEA     ASCIIERROR,A1
00002944  103C 000E               1708              MOVE.B  #14,D0
00002948  4E4F                    1709              TRAP    #15
0000294A  6000 0008               1710              BRA     ASCIIFIN       
0000294E  7800                    1711  ASCIIDONE   MOVE.L  #0,D4
00002950  E89B                    1712              ROR.L   #4,D3
00002952  2883                    1713              MOVE.L  D3,(A4)
00002954                          1714              
00002954  4CDF EFC7               1715  ASCIIFIN    MOVEM.L (SP)+,A0-A3/A5-A7/D0-D2/D6-D7
00002958  4E75                    1716              RTS
0000295A                          1717  
0000295A                          1718  *-----------------------------------------------------------
0000295A                          1719  *HEX TO ASCII CONVERSION SUBROUTINE
0000295A                          1720  * A5 = ptr to beginning address A6 = ptr to ending address
0000295A                          1721  * D3 = output                   A4 = ptr to output
0000295A                          1722  *-----------------------------------------------------------
0000295A  48E7 EFF7               1723  HEX2ASCII   MOVEM.L A0-A3/A5-A7/D0-D2/D4-D7,-(SP)
0000295E                          1724  
0000295E  4282                    1725              CLR.L   D2
00002960  4283                    1726              CLR.L   D3
00002962  49F8 1124               1727              LEA     HEXBUFFER,A4
00002966  18BC 0000               1728              MOVE.B  #NULL,(A4)
0000296A  4284                    1729  NEXTHEX     CLR.L   D4
0000296C  183C 0001               1730              MOVE.B  #1,D4
00002970  BDCD                    1731              CMP.L   A5,A6
00002972  6700 0058               1732              BEQ     HEXDONE
00002976  1426                    1733              MOVE.B  -(A6),D2
00002978  1602                    1734              MOVE.B  D2,D3
0000297A  1403                    1735  HEXLOOP     MOVE.B  D3,D2
0000297C  C4BC 0000000F           1736              AND.L   #$0000000F,D2
00002982  0C02 0000               1737              CMPI.B  #$0,D2
00002986  6D00 003A               1738              BLT     HEXRANGE
0000298A  0C02 000F               1739              CMPI.B  #$F,D2
0000298E  6E00 0032               1740              BGT     HEXRANGE
00002992  0C02 0009               1741              CMPI.B  #$9,D2
00002996  6F00 001C               1742              BLE     HEXNUMBER
0000299A  0C02 000A               1743              CMPI.B  #$A,D2
0000299E  6C00 0006               1744              BGE     HEXLETTER
000029A2  6000 001E               1745              BRA     HEXRANGE
000029A6  0602 0037               1746  HEXLETTER   ADDI.B  #$37,D2
000029AA  1902                    1747              MOVE.B  D2,-(A4)
000029AC  E89B                    1748              ROR.L   #4,D3
000029AE  51CC FFCA               1749              DBRA    D4,HEXLOOP
000029B2  60B6                    1750              BRA     NEXTHEX
000029B4  0602 0030               1751  HEXNUMBER   ADDI.B  #$30,D2
000029B8  1902                    1752              MOVE.B  D2,-(A4)
000029BA  E89B                    1753              ROR.L   #4,D3
000029BC  51CC FFBC               1754              DBRA    D4,HEXLOOP
000029C0  60A8                    1755              BRA     NEXTHEX
000029C2  43F8 1190               1756  HEXRANGE    LEA     HEXERROR,A1
000029C6  103C 000E               1757              MOVE.B  #14,D0
000029CA  4E4F                    1758              TRAP    #15
000029CC                          1759  
000029CC  4CDF EFF7               1760  HEXDONE     MOVEM.L (SP)+,A0-A3/A5-A7/D0-D2/D4-D7
000029D0  4E75                    1761              RTS
000029D2                          1762             
000029D2                          1763  * Put program code here
000029D2                          1764  
000029D2  FFFF FFFF               1765      SIMHALT             ; halt simulator
000029D6                          1766  
000029D6                          1767  * Put variables and constants here
000029D6                          1768  
000029D6                          1769      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDRERROR           1161
ARG1                2344
ARG2                2360
ARGPTR              228E
ARGV                28AA
ASCENDING           2434
ASCII2HEX           28EC
ASCIIBUFFER         1110
ASCIIDATA           2696
ASCIIDONE           294E
ASCIIERROR          1174
ASCIIFIN            2954
ASCIILETTER         292A
ASCIILOOP           28FA
ASCIINUMBER         2934
ASCIIRANGE          293E
BF                  26C0
BFDONE              2784
BFHDLR              4014
BFMANPAGE           5B6E
BFOUT               21C8
BFPTR               3016
BFSTR               4814
BMOV                278A
BMOVDONE            27EC
BMOVHDLR            4018
BMOVLOOP            27E6
BMOVMANPAGE         5E5B
BMOVOUT             21DC
BMOVPTR             3019
BMOVSTR             4818
BS                  8
BSCH                287C
BSCHHDLR            4020
BSCHMANPAGE         635B
BSCHOUT             2204
BSCHPTR             3023
BSCHSTR             4820
BSORT               243C
BTST                27F2
BTSTDONE            2876
BTSTHDLR            401C
BTSTLOOP            282E
BTSTMANPAGE         605A
BTSTOUT             21F0
BTSTPTR             301E
BTSTSTR             481C
BUBBLECMP           239A
BUBBLEDN            23C0
BUBBLELOOP          2398
BUBBLESORT          2392
BUBBLESWAP          23B8
BUF                 900
BUFFER              1138
BYTE                25FA
BYTECONT            24D8
BYTEPRINT           2482
CHECK               2148
CHECKLOOP           28BC
CHKADDR2            26F2
CHKDOLLAR           2278
CLRCMDBUF           201C
CLRINBUF            2010
CMDBUFFER           1060
CMPNULL             2290
CMPSTR1             2106
CMPSTR2             2142
COMPARELIST         20BA
COMPARELOOP         208E
COMPARESTRING       2080
CR                  D
DATALONG            275C
DATALONGMSG         1206
DATALOOP            26A0
DESCEND             23AA
DESCENDING          243A
DF                  2890
DFHDLR              4028
DFMANPAGE           67AF
DFOUT               222C
DFPTR               302B
DFSTR               4828
DOLLARSIGN          228C
ENDHELP             2272
ENDPTR              229C
ERROR               2074
ERRORDETECT         2850
ERRORMSG            114C
EXIT                289A
EXITHDLR            402C
EXITMANPAGE         69DD
EXITOUT             2240
EXITPTR             302E
EXITSTR             482C
FF                  C
FILLLOOP            2752
GO                  2886
GOHDLR              4024
GOMANPAGE           65EF
GOOUT               2218
GOPTR               3028
GOSTR               4824
HASH                23
HDLRJMP             206A
HELP                2120
HELPHDLR            4000
HELPMANPAGE         5000
HELPMSG             127D
HELPONLY            2268
HELPOUT             2164
HELPPTR             3000
HELPSTR             4800
HEX                 24
HEX2ASCII           295A
HEXBUFFER           1124
HEXDONE             29CC
HEXERROR            1190
HEXLETTER           29A6
HEXLOOP             297A
HEXNUMBER           29B4
HEXRANGE            29C2
HT                  9
INCPTR              268C
INCREMENT           22D2
INCREMENT2          244A
INDEX               14
INPUTBUFFER         1010
INTERPRETER         2034
INVALIDADDR         22C8
LF                  A
LONG                2626
LONGCONT            258E
LONGPRINT           253A
MANHDLR             4030
MANHELP             20E4
MANMANPAGE          6B98
MANOUT              2254
MANPAGEJMP          215C
MANPTR              3033
MANSTR              4830
MATCH               20CA
MDSP                2318
MDSPDONE            238C
MDSPHDLR            4004
MDSPMANPAGE         51C0
MDSPOUT             2178
MDSPPRINT           22CE
MDSPPTR             3005
MDSPSTR             4804
MEMCHKLP            2836
MEMERROR            1243
MEMSUCCESS          125D
MM                  25A4
MMDONE              2638
MMERROR             2594
MMHDLR              400C
MMMANPAGE           5704
MMOUT               21A0
MMPRINT             2446
MMPRINTDN           259E
MMPTR               3010
MMSTR               480C
MS                  263E
MSDONE              26BA
MSERROR             26B0
MSHDLR              4010
MSMANPAGE           5952
MSOUT               21B4
MSPTR               3013
MSSTR               4810
NEXT                204C
NEXTHEX             296A
NEXTPAGE            212C
NEXTPAGEMAN         20F0
NULL                0
NULLFOUND           28E4
NULLJMP             20D4
NULLLOOP            20D8
ODDADDR1            276A
ODDADDR2            277A
ODDADDRMSG1         11BE
ODDADDRMSG2         11E2
OUT1CR              E3
OUTPUT              F3
PORTIN1             F1
PROMPT              1000
RETURN              20CE
SAFE                22C0
SORT                23AE
SORTW               23C6
SORTWDONE           2440
SORTWHDLR           4008
SORTWMANPAGE        543C
SORTWOUT            218C
SORTWPTR            300A
SORTWSTR            4808
SP                  20
SPACE               1279
SPFOUND             28D0
START               2000
STOREDATA           11A5
TESTVAL1            AA
TESTVAL2            55
TUTOR               E4
VT                  B
WORD                2610
WORDCONT            2534
WORDPRINT           24DE
