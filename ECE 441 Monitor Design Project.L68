00002000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 4/9/2016 4:20:36 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : ECE 441 Monitor Design Project
00000000                             3  * Written by : Daniel H. Meves
00000000                             4  * Date       : 03/21/2016 - 04/27/2016
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  *---------------------------
00000000                             9  **********CONSTANTS*********
00000000  =00000900                 10  BUF     EQU     $900
00000000  =000000E4                 11  TUTOR   EQU     228
00000000  =000000E3                 12  OUT1CR  EQU     227
00000000  =000000F1                 13  PORTIN1 EQU     241
00000000  =000000F3                 14  OUTPUT  EQU     243
00000000  =00000014                 15  INDEX   EQU     20
00000000  =000000AA                 16  TESTVAL1    EQU     $AA
00000000  =00000055                 17  TESTVAL2    EQU     $55
00000000                            18   
00000000  =00000008                 19  BS  EQU  $08   ; Backspace
00000000  =00000009                 20  HT  EQU  $09   ; Tab (horizontal 5 characters)
00000000  =0000000A                 21  LF  EQU  $0A   ; New line (line feed)
00000000  =0000000B                 22  VT  EQU  $0B   ; Vertical tab (4 lines)
00000000  =0000000C                 23  FF  EQU  $0C   ; Form Feed (Always end printing with a Form Feed.)
00000000  =0000000D                 24  CR  EQU  $0D   ; Carriage Return
00000000  =00000020                 25  SP  EQU  $20   ; Space
00000000  =00000024                 26  HEX EQU  $24
00000000  =00000023                 27  HASH    EQU     $23
00000000  =00000000                 28  NULL    EQU     $00
00000000                            29  *---------------------------
00001000                            30      ORG    $1000
00001000                            31      
00001000= 4D 4F 4E 49 54 4F ...     32  PROMPT      DC.B    'MONITOR441>',0
00001010                            33      ORG     $1010
00001010                            34  INPUTBUFFER     DS.B    80
00001060                            35      ORG     $1060
00001060                            36  CMDBUFFER       DS.B    80
00001110                            37      ORG     $1110
00001110                            38  ASCIIBUFFER     DS.B    20
00001124                            39  HEXBUFFER       DS.B    20
00001138                            40  BUFFER          DS.B    20
0000114C= 41 4E 20 45 52 52 ...     41  ERRORMSG        DC.B    'AN ERROR OCCURRED!',CR,LF,0
00001161= 49 4E 56 41 4C 49 ...     42  ADDRERROR       DC.B    'INVALID ADDRESS!',CR,LF,0
00001174= 4E 4F 54 20 41 4E ...     43  ASCIIERROR      DC.B    'NOT AN HEXADECIMAL VALUE!',CR,LF,0
00001190= 4E 4F 54 20 41 20 ...     44  HEXERROR        DC.B    'NOT A ASCII VALUE!',CR,LF,0
000011A5= 53 54 4F 52 49 4E ...     45  STOREDATA       DC.B    'STORING DATA AS ASCII.',CR,LF,0
000011BE= 41 44 44 52 45 53 ...     46  ODDADDRMSG1     DC.B    'ADDRESS 1 IS NOT AN EVEN ADDRESS!',CR,LF,0
000011E2= 41 44 44 52 45 53 ...     47  ODDADDRMSG2     DC.B    'ADDRESS 2 IS NOT AN EVEN ADDRESS!',CR,LF,0
00001206= 44 41 54 41 20 45 ...     48  DATALONGMSG     DC.B    'DATA ENTERED TOO LARGE, PLEASE ENTER WORD SIZE OR SMALLER!',CR,LF,0
00001243= 4D 45 4D 4F 52 59 ...     49  MEMERROR        DC.B    'MEMORY ERROR AT ADDRESS: ',0
0000125D= 4E 4F 20 4D 45 4D ...     50  MEMSUCCESS      DC.B    'NO MEMORY ERROR DETECTED AT ADDRESS: ',0
00001283= 44 41 54 41 20 53 ...     51  DATASTORED      DC.B    'DATA STORED: ',0
00001291= 44 41 54 41 20 52 ...     52  DATAREAD        DC.B    'DATA READ: ',0
0000129D= 20 2D 20 00               53  SPACE           DC.B    ' - ',0
000012A1= 0D 0A 2A 2A 2A 2A ...     54  CMDMSG          DC.B    CR,LF,'*****ALL MONITOR441 COMMANDS*****',CR,LF,LF,0
000012C8= 0D 0A 20 20 20 48 ...     55  HELPMSG         DC.B    CR,LF,'   HELP: Displays this message',CR,LF,LF,0
000012EC                            56                  
000012EC= 0D 0A 20 20 20 4D ...     57  MDSPMSG         DC.B    CR,LF,'   MDSP: Outputs Address And Memory Contents',CR,LF
0000131C= 20 20 20 4D 44 53 ...     58                  DC.B    '   MDSP <address1> <address2> eg: MDSP $908 $90A<CR>',CR,LF,LF,0
00001354                            59                  
00001354= 0D 0A 20 20 20 53 ...     60  SORTWMSG        DC.B    CR,LF,'   SORTW: Sorts A Block Of Memory',CR,LF
00001379= 20 20 20 44 65 66 ...     61                  DC.B    '   Default: Descending Order',CR,LF
00001397= 20 20 20 3B 41 3A ...     62                  DC.B    '   ;A: Ascending Order',CR,LF
000013AF= 20 20 20 3B 44 3A ...     63                  DC.B    '   ;D: Descending Order',CR,LF
000013C8= 20 20 20 53 4F 52 ...     64                  DC.B    '   SORTW <address1> <address2> [;order] eg: SORTW $904 $90E ;A<CR>',CR,LF,LF,0
0000140E                            65                  
0000140E= 0D 0A 20 20 20 4D ...     66  MMMSG           DC.B    CR,LF,'   MM: Modifies Data In Memory',CR,LF
00001430= 20 20 20 44 65 66 ...     67                  DC.B    '   Default: Displays One Byte',CR,LF
0000144F= 20 20 20 3B 57 3A ...     68                  DC.B    '   ;W: Displays One Word',CR,LF
00001469= 20 20 20 3B 4C 3A ...     69                  DC.B    '   ;L: Displays One Long Word',CR,LF
00001488= 20 20 20 4D 4D 20 ...     70                  DC.B    '   MM <address>[;size] eg: MM $904;W<CR>',CR,LF,LF,0
000014B4                            71                  
000014B4= 0D 0A 20 20 20 4D ...     72  MSMSG           DC.B    CR,LF,'   MS - Memory Set.',CR,LF
000014CB= 20 20 20 4D 53 20 ...     73                  DC.B    '   MS <address> [data] eg: MS $904 $FFFF<CR>',CR,LF,LF,0
000014FB                            74                  
000014FB= 0D 0A 20 20 20 42 ...     75  BFMSG           DC.B    CR,LF,'   BF: Fills A Block Of Memory',CR,LF
0000151D= 20 20 20 42 46 20 ...     76                  DC.B    '   BF <address1> <address2> <word> eg: BF $904 $908 475A<CR>',CR,LF,LF,0
0000155D                            77                  
0000155D= 0D 0A 20 20 20 42 ...     78  BMOVMSG         DC.B    CR,LF,'   BMOV: Moves A Block of Memory To Another Area',CR,LF
00001591= 20 20 20 42 4D 4F ...     79                  DC.B    '   BMOV <address1> <address2> <address3> eg: BMOV $908 $90B $909<CR>',CR,LF,LF,0
000015D9                            80                  
000015D9= 0D 0A 20 20 20 42 ...     81  BTSTMSG         DC.B    CR,LF,'   BTST - Block Test.',CR,LF,LF,0
000015F4                            82                  
000015F4= 0D 0A 20 20 20 42 ...     83  BSCHMSG         DC.B    CR,LF,'   BSCH: Searches A Literal String In The Memory',CR,LF
00001628= 20 20 20 42 53 43 ...     84                  DC.B    '   BSCH <address1> <address2> "literal string" eg: BSCH $900 $910 "MATCH"<CR>',CR,LF,LF,0
00001679                            85                  
00001679= 0D 0A 20 20 20 47 ...     86  GOMSG           DC.B    CR,LF,'   GO: Starts Execution From Given Address',CR,LF
000016A7= 20 20 20 47 4F 20 ...     87                  DC.B    '   GO <address> eg: GO $900<CR>',CR,LF,LF,0
000016CA                            88                  
000016CA= 0D 0A 20 20 20 44 ...     89  DFMSG           DC.B    CR,LF,'   DF - Display Formatted Registers.',CR,LF,LF,0
000016F4                            90                  
000016F4= 0D 0A 20 20 20 45 ...     91  EXITMSG         DC.B    CR,LF,'   EXIT - Exit the monitor program eg: EXIT<CR>',CR,LF,LF,0
00001729                            92                  
00001729= 0D 0A 2A 2A 2A 2A ...     93  CMDMSG2         DC.B    CR,LF,'*****Try HELP <command> or MAN <command> to view man page.*****',CR,LF,LF,0
0000176E                            94  
0000176E                            95  *--------------------------
0000176E                            96  *MAN PAGES
0000176E                            97  *--------------------------
00005000                            98      ORG     $5000
00005000= 0D 0A 48 45 4C 50 ...     99  HELPMANPAGE     DC.B    CR,LF,'HELP(1)                       MC68000/SANPER-1 ELU                       HELP(1)',CR,LF,LF
00005055                           100                  
00005055= 4E 41 4D 45 0D 0A        101                  DC.B    'NAME',CR,LF
0000505B= 20 20 20 48 45 4C ...    102                  DC.B    '   HELP - Help.',CR,LF,LF
0000506D                           103                  
0000506D= 53 59 4E 4F 50 53 ...    104                  DC.B    'SYNOPSYS',CR,LF
00005077= 20 20 20 48 45 4C ...    105                  DC.B    '   HELP',CR,LF,LF
00005081                           106                  
00005081= 44 45 53 43 52 49 ...    107                  DC.B    'DESCRIPTION',CR,LF
0000508E= 20 20 20 54 68 65 ...    108                  DC.B    '   The Help command must display all available commands and usage descriptions.',CR,LF,LF
000050E0                           109                  
000050E0                           110                  *DC.B    'OPTIONS',CR,LF
000050E0                           111                  *DC.B    '   none',CR,LF,LF
000050E0                           112                  
000050E0                           113                  *DC.B    'NOTES',CR,LF
000050E0                           114                  *DC.B    '   none',CR,LF,LF
000050E0                           115                  
000050E0                           116                  *DC.B    'FILES',CR,LF
000050E0                           117                  *DC.B    '   none',CR,LF,LF
000050E0                           118                  
000050E0                           119                  *DC.B    'ENVIRONMENT',CR,LF
000050E0                           120                  *DC.B    '   none',CR,LF,LF
000050E0                           121                  
000050E0                           122                  *DC.B    'DIAGNOSTICS',CR,LF
000050E0                           123                  *DC.B    '   none',CR,LF,LF
000050E0                           124                  
000050E0                           125                  *DC.B    'BUGS',CR,LF
000050E0                           126                  *DC.B    '   none known atm',CR,LF,LF
000050E0                           127                  
000050E0= 41 55 54 48 4F 52 ...    128                  DC.B    'AUTHOR',CR,LF
000050E8= 20 20 20 44 61 6E ...    129                  DC.B    '   Daniel H. Meves',CR,LF,LF
000050FD                           130                  
000050FD                           131                  *DC.B    'HISTORY',CR,LF
000050FD                           132                  *DC.B    '   none',CR,LF,LF
000050FD                           133                  
000050FD= 53 45 45 20 41 4C ...    134                  DC.B    'SEE ALSO',CR,LF
00005107= 20 20 20 4D 44 53 ...    135                  DC.B    '   MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
0000516D                           136                  
0000516D= 44 61 6E 69 65 6C ...    137                  DC.B    'Daniel H. Meves                    27 April 2016                        HELP(1)',CR,LF,LF,0
000051C0                           138                  
000051C0= 0D 0A 4D 44 53 50 ...    139  MDSPMANPAGE     DC.B    CR,LF,'MDSP(1)                       MC68000/SANPER-1 ELU                       MDSP(1)',CR,LF,LF
00005215                           140                  
00005215= 4E 41 4D 45 0D 0A        141                  DC.B    'NAME',CR,LF
0000521B= 20 20 20 4D 44 53 ...    142                  DC.B    '   MDSP - Memory Display.',CR,LF,LF
00005237                           143                  
00005237= 53 59 4E 4F 50 53 ...    144                  DC.B    'SYNOPSYS',CR,LF
00005241= 20 20 20 4D 44 53 ...    145                  DC.B    '   MDSP <address1> <address2>',CR,LF,LF
00005261                           146                  
00005261= 44 45 53 43 52 49 ...    147                  DC.B    'DESCRIPTION',CR,LF
0000526E= 20 20 20 54 68 65 ...    148                  DC.B    '   The MDSP (Memory Display) command outputs the address and memory contents from',CR,LF
000052C1= 20 20 20 3C 61 64 ...    149                  DC.B    '   <address1> to <address2>. The MDSP (Memory Display) command ALSO outputs the',CR,LF
00005312= 20 20 20 61 64 64 ...    150                  DC.B    '   address and memory contents from <address1> to <address1 + 16bytes>.',CR,LF,LF
0000535C                           151                  
0000535C                           152                  *DC.B    'OPTIONS',CR,LF
0000535C                           153                  *DC.B    '   none',CR,LF,LF
0000535C                           154                  
0000535C                           155                  *DC.B    'NOTES',CR,LF
0000535C                           156                  *DC.B    '   none',CR,LF,LF
0000535C                           157                  
0000535C                           158                  *DC.B    'FILES',CR,LF
0000535C                           159                  *DC.B    '   none',CR,LF,LF
0000535C                           160                  
0000535C                           161                  *DC.B    'ENVIRONMENT',CR,LF
0000535C                           162                  *DC.B    '   none',CR,LF,LF
0000535C                           163                  
0000535C                           164                  *DC.B    'DIAGNOSTICS',CR,LF
0000535C                           165                  *DC.B    '   none',CR,LF,LF
0000535C                           166                  
0000535C                           167                  *DC.B    'BUGS',CR,LF
0000535C                           168                  *DC.B    '   none known atm',CR,LF,LF
0000535C                           169                  
0000535C= 41 55 54 48 4F 52 ...    170                  DC.B    'AUTHOR',CR,LF
00005364= 20 20 20 44 61 6E ...    171                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005379                           172                  
00005379                           173                  *DC.B    'HISTORY',CR,LF
00005379                           174                  *DC.B    '   none',CR,LF,LF
00005379                           175                  
00005379= 53 45 45 20 41 4C ...    176                  DC.B    'SEE ALSO',CR,LF
00005383= 20 20 20 48 45 4C ...    177                  DC.B    '   HELP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
000053E9                           178                  
000053E9= 44 61 6E 69 65 6C ...    179                  DC.B    'Daniel H. Meves                    27 April 2016                        MDSP(1)',CR,LF,LF,0
0000543C                           180                  
0000543C= 0D 0A 53 4F 52 54 ...    181  SORTWMANPAGE    DC.B    CR,LF,'SORTW(1)                       MC68000/SANPER-1 ELU                       SORTW(1)',CR,LF,LF
00005493                           182                  
00005493= 4E 41 4D 45 0D 0A        183                  DC.B    'NAME',CR,LF
00005499= 20 20 20 53 4F 52 ...    184                  DC.B    '   SORTW - Sort.',CR,LF,LF
000054AC                           185                  
000054AC= 53 59 4E 4F 50 53 ...    186                  DC.B    'SYNOPSYS',CR,LF
000054B6= 20 20 20 53 4F 52 ...    187                  DC.B    '   SORTW <address1> <address2> [;order]',CR,LF,LF
000054E0                           188                  
000054E0= 44 45 53 43 52 49 ...    189                  DC.B    'DESCRIPTION',CR,LF
000054ED= 20 20 20 54 68 65 ...    190                  DC.B    '   The SORT command sorts a block of memory. The starting address <address1> and the',CR,LF
00005543= 20 20 20 65 6E 64 ...    191                  DC.B    '   ending address <address2> of the memory block are specified in the command. The order',CR,LF
0000559D= 20 20 20 28 41 20 ...    192                  DC.B    '   (A or D) specifies whether the list is sorted in Ascending or Descending order. (The size of',CR,LF
000055FE= 20 20 20 74 68 65 ...    193                  DC.B    '   the data to be sorted is a word)',CR,LF,LF
00005624                           194                  
00005624                           195                  *DC.B    'OPTIONS',CR,LF
00005624                           196                  *DC.B    '   none',CR,LF,LF
00005624                           197                  
00005624                           198                  *DC.B    'NOTES',CR,LF
00005624                           199                  *DC.B    '   none',CR,LF,LF
00005624                           200                  
00005624                           201                  *DC.B    'FILES',CR,LF
00005624                           202                  *DC.B    '   none',CR,LF,LF
00005624                           203                  
00005624                           204                  *DC.B    'ENVIRONMENT',CR,LF
00005624                           205                  *DC.B    '   none',CR,LF,LF
00005624                           206                  
00005624                           207                  *DC.B    'DIAGNOSTICS',CR,LF
00005624                           208                  *DC.B    '   none',CR,LF,LF
00005624                           209                  
00005624                           210                  *DC.B    'BUGS',CR,LF
00005624                           211                  *DC.B    '   none known atm',CR,LF,LF
00005624                           212                  
00005624= 41 55 54 48 4F 52 ...    213                  DC.B    'AUTHOR',CR,LF
0000562C= 20 20 20 44 61 6E ...    214                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005641                           215                  
00005641                           216                  *DC.B    'HISTORY',CR,LF
00005641                           217                  *DC.B    '   none',CR,LF,LF
00005641                           218                  
00005641= 53 45 45 20 41 4C ...    219                  DC.B    'SEE ALSO',CR,LF
0000564B= 20 20 20 48 45 4C ...    220                  DC.B    '   HELP(1), MDSP(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
000056B0                           221                  
000056B0= 44 61 6E 69 65 6C ...    222                  DC.B    'Daniel H. Meves                    27 April 2016                        SORTW(1)',CR,LF,LF,0
00005704                           223                  
00005704= 0D 0A 4D 4D 28 31 ...    224  MMMANPAGE       DC.B    CR,LF,'MM(1)                       MC68000/SANPER-1 ELU                       MM(1)',CR,LF,LF
00005755                           225                  
00005755= 4E 41 4D 45 0D 0A        226                  DC.B    'NAME',CR,LF
0000575B= 20 20 20 4D 4D 20 ...    227                  DC.B    '   MM - Memory Modify.',CR,LF,LF
00005774                           228                  
00005774= 53 59 4E 4F 50 53 ...    229                  DC.B    'SYNOPSYS',CR,LF
0000577E= 20 20 20 4D 4D 20 ...    230                  DC.B    '   MM <address> [;size]',CR,LF,LF
00005798                           231                  
00005798= 44 45 53 43 52 49 ...    232                  DC.B    'DESCRIPTION',CR,LF
000057A5= 20 20 20 4D 4D 20 ...    233                  DC.B    '   MM (Memory Modify) command is used to display memory and, as required, modify data',CR,LF
000057FC= 20 20 20 6F 72 20 ...    234                  DC.B    '   or enter new data. The size (byte, word, long word) controls the number of bytes displayed',CR,LF
0000585B= 20 20 20 66 6F 72 ...    235                  DC.B    '   for each address.',CR,LF,LF
00005872                           236                  
00005872                           237                  *DC.B    'OPTIONS',CR,LF
00005872                           238                  *DC.B    '   none',CR,LF,LF
00005872                           239                  
00005872                           240                  *DC.B    'NOTES',CR,LF
00005872                           241                  *DC.B    '   none',CR,LF,LF
00005872                           242                  
00005872                           243                  *DC.B    'FILES',CR,LF
00005872                           244                  *DC.B    '   none',CR,LF,LF
00005872                           245                  
00005872                           246                  *DC.B    'ENVIRONMENT',CR,LF
00005872                           247                  *DC.B    '   none',CR,LF,LF
00005872                           248                  
00005872                           249                  *DC.B    'DIAGNOSTICS',CR,LF
00005872                           250                  *DC.B    '   none',CR,LF,LF
00005872                           251                  
00005872                           252                  *DC.B    'BUGS',CR,LF
00005872                           253                  *DC.B    '   none known atm',CR,LF,LF
00005872                           254                  
00005872= 41 55 54 48 4F 52 ...    255                  DC.B    'AUTHOR',CR,LF
0000587A= 20 20 20 44 61 6E ...    256                  DC.B    '   Daniel H. Meves',CR,LF,LF
0000588F                           257                  
0000588F                           258                  *DC.B    'HISTORY',CR,LF
0000588F                           259                  *DC.B    '   none',CR,LF,LF
0000588F                           260                  
0000588F= 53 45 45 20 41 4C ...    261                  DC.B    'SEE ALSO',CR,LF
00005899= 20 20 20 48 45 4C ...    262                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00005901                           263                  
00005901= 44 61 6E 69 65 6C ...    264                  DC.B    'Daniel H. Meves                    27 April 2016                        MM(1)',CR,LF,LF,0
00005952                           265                  
00005952= 0D 0A 4D 53 28 31 ...    266  MSMANPAGE       DC.B    CR,LF,'MS(1)                       MC68000/SANPER-1 ELU                       MS(1)',CR,LF,LF
000059A3                           267                  
000059A3= 4E 41 4D 45 0D 0A        268                  DC.B    'NAME',CR,LF
000059A9= 20 20 20 4D 53 20 ...    269                  DC.B    '   MS - Memory Set.',CR,LF,LF
000059BF                           270                  
000059BF= 53 59 4E 4F 50 53 ...    271                  DC.B    'SYNOPSYS',CR,LF
000059C9= 20 20 20 4D 53 20 ...    272                  DC.B    '   MS <address> [data]',CR,LF,LF
000059E2                           273                  
000059E2= 44 45 53 43 52 49 ...    274                  DC.B    'DESCRIPTION',CR,LF
000059EF= 20 20 20 54 68 65 ...    275                  DC.B    '   The Memory Set (MS) command alters memory by setting data into the address specified. The',CR,LF
00005A4D= 20 20 20 64 61 74 ...    276                  DC.B    '   data can take the form of ASCII string or hexadecimal data.',CR,LF,LF
00005A8E                           277                  
00005A8E                           278                  *DC.B    'OPTIONS',CR,LF
00005A8E                           279                  *DC.B    '   none',CR,LF,LF
00005A8E                           280                  
00005A8E                           281                  *DC.B    'NOTES',CR,LF
00005A8E                           282                  *DC.B    '   none',CR,LF,LF
00005A8E                           283                  
00005A8E                           284                  *DC.B    'FILES',CR,LF
00005A8E                           285                  *DC.B    '   none',CR,LF,LF
00005A8E                           286                  
00005A8E                           287                  *DC.B    'ENVIRONMENT',CR,LF
00005A8E                           288                  *DC.B    '   none',CR,LF,LF
00005A8E                           289                  
00005A8E                           290                  *DC.B    'DIAGNOSTICS',CR,LF
00005A8E                           291                  *DC.B    '   none',CR,LF,LF
00005A8E                           292                  
00005A8E                           293                  *DC.B    'BUGS',CR,LF
00005A8E                           294                  *DC.B    '   none known atm',CR,LF,LF
00005A8E                           295                  
00005A8E= 41 55 54 48 4F 52 ...    296                  DC.B    'AUTHOR',CR,LF
00005A96= 20 20 20 44 61 6E ...    297                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005AAB                           298                  
00005AAB                           299                  *DC.B    'HISTORY',CR,LF
00005AAB                           300                  *DC.B    '   none',CR,LF,LF
00005AAB                           301                  
00005AAB= 53 45 45 20 41 4C ...    302                  DC.B    'SEE ALSO',CR,LF
00005AB5= 20 20 20 48 45 4C ...    303                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00005B1D                           304                  
00005B1D= 44 61 6E 69 65 6C ...    305                  DC.B    'Daniel H. Meves                    27 April 2016                        MS(1)',CR,LF,LF,0
00005B6E                           306                  
00005B6E= 0D 0A 42 46 28 31 ...    307  BFMANPAGE       DC.B    CR,LF,'BF(1)                       MC68000/SANPER-1 ELU                       BF(1)',CR,LF,LF
00005BBF                           308                  
00005BBF= 4E 41 4D 45 0D 0A        309                  DC.B    'NAME',CR,LF
00005BC5= 20 20 20 42 46 20 ...    310                  DC.B    '   BF - Block Fill.',CR,LF,LF
00005BDB                           311                  
00005BDB= 53 59 4E 4F 50 53 ...    312                  DC.B    'SYNOPSYS',CR,LF
00005BE5= 20 20 20 42 46 20 ...    313                  DC.B    '   BF <address1> <address2> <word>',CR,LF,LF
00005C0A                           314                  
00005C0A= 44 45 53 43 52 49 ...    315                  DC.B    'DESCRIPTION',CR,LF
00005C17= 20 20 20 54 68 65 ...    316                  DC.B    '   The Block Fill (BF) command fills memory starting with the word boundary <address1> through',CR,LF
00005C77= 20 20 20 3C 61 64 ...    317                  DC.B    '   <address2>. Both <address1> and <address2> must be even addresses. This command only',CR,LF
00005CD0= 20 20 20 66 69 6C ...    318                  DC.B    '   fills with a word-size (2 bytes) data pattern. If an entire word-size data pattern is not entered,',CR,LF
00005D37= 20 20 20 74 68 65 ...    319                  DC.B    '   the pattern is right justified and leading zeros are inserted.',CR,LF,LF
00005D7B                           320                  
00005D7B                           321                  *DC.B    'OPTIONS',CR,LF
00005D7B                           322                  *DC.B    '   none',CR,LF,LF
00005D7B                           323                  
00005D7B                           324                  *DC.B    'NOTES',CR,LF
00005D7B                           325                  *DC.B    '   none',CR,LF,LF
00005D7B                           326                  
00005D7B                           327                  *DC.B    'FILES',CR,LF
00005D7B                           328                  *DC.B    '   none',CR,LF,LF
00005D7B                           329                  
00005D7B                           330                  *DC.B    'ENVIRONMENT',CR,LF
00005D7B                           331                  *DC.B    '   none',CR,LF,LF
00005D7B                           332                  
00005D7B                           333                  *DC.B    'DIAGNOSTICS',CR,LF
00005D7B                           334                  *DC.B    '   none',CR,LF,LF
00005D7B                           335                  
00005D7B                           336                  *DC.B    'BUGS',CR,LF
00005D7B                           337                  *DC.B    '   none known atm',CR,LF,LF
00005D7B                           338                  
00005D7B= 41 55 54 48 4F 52 ...    339                  DC.B    'AUTHOR',CR,LF
00005D83= 20 20 20 44 61 6E ...    340                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005D98                           341                  
00005D98                           342                  *DC.B    'HISTORY',CR,LF
00005D98                           343                  *DC.B    '   none',CR,LF,LF
00005D98                           344                  
00005D98= 53 45 45 20 41 4C ...    345                  DC.B    'SEE ALSO',CR,LF
00005DA2= 20 20 20 48 45 4C ...    346                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00005E0A                           347                  
00005E0A= 44 61 6E 69 65 6C ...    348                  DC.B    'Daniel H. Meves                    27 April 2016                        BF(1)',CR,LF,LF,0
00005E5B                           349                  
00005E5B= 0D 0A 42 4D 4F 56 ...    350  BMOVMANPAGE     DC.B    CR,LF,'BMOV(1)                       MC68000/SANPER-1 ELU                       BMOV(1)',CR,LF,LF
00005EB0                           351                  
00005EB0= 4E 41 4D 45 0D 0A        352                  DC.B    'NAME',CR,LF
00005EB6= 20 20 20 42 4D 4F ...    353                  DC.B    '   BMOV - Block Move.',CR,LF,LF
00005ECE                           354                  
00005ECE= 53 59 4E 4F 50 53 ...    355                  DC.B    'SYNOPSYS',CR,LF
00005ED8= 20 20 20 42 4D 4F ...    356                  DC.B    '   BMOV <address1> <address2> <address3>',CR,LF,LF
00005F03                           357                  
00005F03= 44 45 53 43 52 49 ...    358                  DC.B    'DESCRIPTION',CR,LF
00005F10= 20 20 20 54 68 65 ...    359                  DC.B    '   The Block Move (BMOV) command is used to move (duplicate) blocks of memory from one area to another.',CR,LF,LF
00005F7A                           360                  
00005F7A                           361                  *DC.B    'OPTIONS',CR,LF
00005F7A                           362                  *DC.B    '   none',CR,LF,LF
00005F7A                           363                  
00005F7A                           364                  *DC.B    'NOTES',CR,LF
00005F7A                           365                  *DC.B    '   none',CR,LF,LF
00005F7A                           366                  
00005F7A                           367                  *DC.B    'FILES',CR,LF
00005F7A                           368                  *DC.B    '   none',CR,LF,LF
00005F7A                           369                  
00005F7A                           370                  *DC.B    'ENVIRONMENT',CR,LF
00005F7A                           371                  *DC.B    '   none',CR,LF,LF
00005F7A                           372                  
00005F7A                           373                  *DC.B    'DIAGNOSTICS',CR,LF
00005F7A                           374                  *DC.B    '   none',CR,LF,LF
00005F7A                           375                  
00005F7A                           376                  *DC.B    'BUGS',CR,LF
00005F7A                           377                  *DC.B    '   none known atm',CR,LF,LF
00005F7A                           378                  
00005F7A= 41 55 54 48 4F 52 ...    379                  DC.B    'AUTHOR',CR,LF
00005F82= 20 20 20 44 61 6E ...    380                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005F97                           381                  
00005F97                           382                  *DC.B    'HISTORY',CR,LF
00005F97                           383                  *DC.B    '   none',CR,LF,LF
00005F97                           384                  
00005F97= 53 45 45 20 41 4C ...    385                  DC.B    'SEE ALSO',CR,LF
00005FA1= 20 20 20 48 45 4C ...    386                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00006007                           387                  
00006007= 44 61 6E 69 65 6C ...    388                  DC.B    'Daniel H. Meves                    27 April 2016                        BMOV(1)',CR,LF,LF,0
0000605A                           389                  
0000605A= 0D 0A 42 54 53 54 ...    390  BTSTMANPAGE     DC.B    CR,LF,'BTST(1)                       MC68000/SANPER-1 ELU                       BTST(1)',CR,LF,LF
000060AF                           391                  
000060AF= 4E 41 4D 45 0D 0A        392                  DC.B    'NAME',CR,LF
000060B5= 20 20 20 42 54 53 ...    393                  DC.B    '   BTST - Block Test.',CR,LF,LF
000060CD                           394                  
000060CD= 53 59 4E 4F 50 53 ...    395                  DC.B    'SYNOPSYS',CR,LF
000060D7= 20 20 20 42 54 53 ...    396                  DC.B    '   BTST <address1> <address2>',CR,LF,LF
000060F7                           397                  
000060F7= 44 45 53 43 52 49 ...    398                  DC.B    'DESCRIPTION',CR,LF
00006104= 20 20 20 54 68 65 ...    399                  DC.B    '   The Block Test (BT) command is a destructive test of a block of memory beginning at <address1>',CR,LF
00006167= 20 20 20 74 68 72 ...    400                  DC.B    '   through <address2>. If this test runs to completion without detecting errors, and display a',CR,LF
000061C7= 20 20 20 6D 65 73 ...    401                  DC.B    '   message that no error was detected. If memory problems are found, a message is displayed',CR,LF
00006224= 20 20 20 69 6E 64 ...    402                  DC.B    '   indicating the address, the data stored, and the data read of the failing memory.',CR,LF,LF
0000627B                           403                  
0000627B                           404                  *DC.B    'OPTIONS',CR,LF
0000627B                           405                  *DC.B    '   none',CR,LF,LF
0000627B                           406                  
0000627B                           407                  *DC.B    'NOTES',CR,LF
0000627B                           408                  *DC.B    '   none',CR,LF,LF
0000627B                           409                  
0000627B                           410                  *DC.B    'FILES',CR,LF
0000627B                           411                  *DC.B    '   none',CR,LF,LF
0000627B                           412                  
0000627B                           413                  *DC.B    'ENVIRONMENT',CR,LF
0000627B                           414                  *DC.B    '   none',CR,LF,LF
0000627B                           415                  
0000627B                           416                  *DC.B    'DIAGNOSTICS',CR,LF
0000627B                           417                  *DC.B    '   none',CR,LF,LF
0000627B                           418                  
0000627B                           419                  *DC.B    'BUGS',CR,LF
0000627B                           420                  *DC.B    '   none known atm',CR,LF,LF
0000627B                           421                  
0000627B= 41 55 54 48 4F 52 ...    422                  DC.B    'AUTHOR',CR,LF
00006283= 20 20 20 44 61 6E ...    423                  DC.B    '   Daniel H. Meves',CR,LF,LF
00006298                           424                  
00006298                           425                  *DC.B    'HISTORY',CR,LF
00006298                           426                  *DC.B    '   none',CR,LF,LF
00006298                           427                  
00006298= 53 45 45 20 41 4C ...    428                  DC.B    'SEE ALSO',CR,LF
000062A2= 20 20 20 48 45 4C ...    429                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00006308                           430                  
00006308= 44 61 6E 69 65 6C ...    431                  DC.B    'Daniel H. Meves                    27 April 2016                        BTST(1)',CR,LF,LF,0
0000635B                           432  
0000635B= 0D 0A 42 53 43 48 ...    433  BSCHMANPAGE     DC.B    CR,LF,'BSCH(1)                       MC68000/SANPER-1 ELU                       BSCH(1)',CR,LF,LF
000063B0                           434                  
000063B0= 4E 41 4D 45 0D 0A        435                  DC.B    'NAME',CR,LF
000063B6= 20 20 20 42 53 43 ...    436                  DC.B    '   BSCH - Block Search.',CR,LF,LF
000063D0                           437                  
000063D0= 53 59 4E 4F 50 53 ...    438                  DC.B    'SYNOPSYS',CR,LF
000063DA= 20 20 20 42 53 43 ...    439                  DC.B    '   BSCH <address1> <address2> "StringLiteral"',CR,LF,LF
0000640A                           440                  
0000640A= 44 45 53 43 52 49 ...    441                  DC.B    'DESCRIPTION',CR,LF
00006417= 20 20 20 54 68 65 ...    442                  DC.B    '   The BSCH (Block Search) command is used to search a literal string in a memory block starting',CR,LF
00006479= 20 20 20 61 74 20 ...    443                  DC.B    '   at <address1> through <address2> both inclusive. In BSCH command, if search finds matching data,',CR,LF 
000064DE= 20 20 20 74 68 65 ...    444                  DC.B    '   the data and address(es) must be displayed.',CR,LF,LF
0000650F                           445                  
0000650F                           446                  *DC.B    'OPTIONS',CR,LF
0000650F                           447                  *DC.B    '   none',CR,LF,LF
0000650F                           448                  
0000650F                           449                  *DC.B    'NOTES',CR,LF
0000650F                           450                  *DC.B    '   none',CR,LF,LF
0000650F                           451                  
0000650F                           452                  *DC.B    'FILES',CR,LF
0000650F                           453                  *DC.B    '   none',CR,LF,LF
0000650F                           454                  
0000650F                           455                  *DC.B    'ENVIRONMENT',CR,LF
0000650F                           456                  *DC.B    '   none',CR,LF,LF
0000650F                           457                  
0000650F                           458                  *DC.B    'DIAGNOSTICS',CR,LF
0000650F                           459                  *DC.B    '   none',CR,LF,LF
0000650F                           460                  
0000650F                           461                  *DC.B    'BUGS',CR,LF
0000650F                           462                  *DC.B    '   none known atm',CR,LF,LF
0000650F                           463                  
0000650F= 41 55 54 48 4F 52 ...    464                  DC.B    'AUTHOR',CR,LF
00006517= 20 20 20 44 61 6E ...    465                  DC.B    '   Daniel H. Meves',CR,LF,LF
0000652C                           466                  
0000652C                           467                  *DC.B    'HISTORY',CR,LF
0000652C                           468                  *DC.B    '   none',CR,LF,LF
0000652C                           469                  
0000652C= 53 45 45 20 41 4C ...    470                  DC.B    'SEE ALSO',CR,LF
00006536= 20 20 20 48 45 4C ...    471                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
0000659C                           472                  
0000659C= 44 61 6E 69 65 6C ...    473                  DC.B    'Daniel H. Meves                    27 April 2016                        BSCH(1)',CR,LF,LF,0
000065EF                           474                  
000065EF= 0D 0A 47 4F 28 31 ...    475  GOMANPAGE       DC.B    CR,LF,'GO(1)                       MC68000/SANPER-1 ELU                       GO(1)',CR,LF,LF
00006640                           476                  
00006640= 4E 41 4D 45 0D 0A        477                  DC.B    'NAME',CR,LF
00006646= 20 20 20 47 4F 20 ...    478                  DC.B    '   GO - Execute Program.',CR,LF,LF
00006661                           479                  
00006661= 53 59 4E 4F 50 53 ...    480                  DC.B    'SYNOPSYS',CR,LF
0000666B= 20 20 20 47 4F 20 ...    481                  DC.B    '   GO <address>',CR,LF,LF
0000667D                           482                  
0000667D= 44 45 53 43 52 49 ...    483                  DC.B    'DESCRIPTION',CR,LF
0000668A= 20 20 20 54 68 65 ...    484                  DC.B    '   The GO command is used to start execution from a given address.',CR,LF,LF
000066CF                           485                  
000066CF                           486                  *DC.B    'OPTIONS',CR,LF
000066CF                           487                  *DC.B    '   none',CR,LF,LF
000066CF                           488                  
000066CF                           489                  *DC.B    'NOTES',CR,LF
000066CF                           490                  *DC.B    '   none',CR,LF,LF
000066CF                           491                  
000066CF                           492                  *DC.B    'FILES',CR,LF
000066CF                           493                  *DC.B    '   none',CR,LF,LF
000066CF                           494                  
000066CF                           495                  *DC.B    'ENVIRONMENT',CR,LF
000066CF                           496                  *DC.B    '   none',CR,LF,LF
000066CF                           497                  
000066CF                           498                  *DC.B    'DIAGNOSTICS',CR,LF
000066CF                           499                  *DC.B    '   none',CR,LF,LF
000066CF                           500                  
000066CF                           501                  *DC.B    'BUGS',CR,LF
000066CF                           502                  *DC.B    '   none known atm',CR,LF,LF
000066CF                           503                  
000066CF= 41 55 54 48 4F 52 ...    504                  DC.B    'AUTHOR',CR,LF
000066D7= 20 20 20 44 61 6E ...    505                  DC.B    '   Daniel H. Meves',CR,LF,LF
000066EC                           506                  
000066EC                           507                  *DC.B    'HISTORY',CR,LF
000066EC                           508                  *DC.B    '   none',CR,LF,LF
000066EC                           509                  
000066EC= 53 45 45 20 41 4C ...    510                  DC.B    'SEE ALSO',CR,LF
000066F6= 20 20 20 48 45 4C ...    511                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
0000675E                           512                  
0000675E= 44 61 6E 69 65 6C ...    513                  DC.B    'Daniel H. Meves                    27 April 2016                        GO(1)',CR,LF,LF,0
000067AF                           514                  
000067AF= 0D 0A 44 46 28 31 ...    515  DFMANPAGE       DC.B    CR,LF,'DF(1)                       MC68000/SANPER-1 ELU                       DF(1)',CR,LF,LF
00006800                           516                  
00006800= 4E 41 4D 45 0D 0A        517                  DC.B    'NAME',CR,LF
00006806= 20 20 20 44 46 20 ...    518                  DC.B    '   DF - Display Formatted Registers.',CR,LF,LF
0000682D                           519                  
0000682D= 53 59 4E 4F 50 53 ...    520                  DC.B    'SYNOPSYS',CR,LF
00006837= 20 20 20 44 46 0D ...    521                  DC.B    '   DF',CR,LF,LF
0000683F                           522                  
0000683F= 44 45 53 43 52 49 ...    523                  DC.B    'DESCRIPTION',CR,LF
0000684C= 20 20 20 54 68 65 ...    524                  DC.B    '   The Display Formatted Registers (DF) command is used to display the MC68000 processor registers.',CR,LF 
000068B1= 20 20 20 54 68 69 ...    525                  DC.B    '   This command should display current PC, SR, US, SS and D, A registers.',CR,LF,LF
000068FD                           526                  
000068FD                           527                  *DC.B    'OPTIONS',CR,LF
000068FD                           528                  *DC.B    '   none',CR,LF,LF
000068FD                           529                  
000068FD                           530                  *DC.B    'NOTES',CR,LF
000068FD                           531                  *DC.B    '   none',CR,LF,LF
000068FD                           532                  
000068FD                           533                  *DC.B    'FILES',CR,LF
000068FD                           534                  *DC.B    '   none',CR,LF,LF
000068FD                           535                  
000068FD                           536                  *DC.B    'ENVIRONMENT',CR,LF
000068FD                           537                  *DC.B    '   none',CR,LF,LF
000068FD                           538                  
000068FD                           539                  *DC.B    'DIAGNOSTICS',CR,LF
000068FD                           540                  *DC.B    '   none',CR,LF,LF
000068FD                           541                  
000068FD                           542                  *DC.B    'BUGS',CR,LF
000068FD                           543                  *DC.B    '   none known atm',CR,LF,LF
000068FD                           544                  
000068FD= 41 55 54 48 4F 52 ...    545                  DC.B    'AUTHOR',CR,LF
00006905= 20 20 20 44 61 6E ...    546                  DC.B    '   Daniel H. Meves',CR,LF,LF
0000691A                           547                  
0000691A                           548                  *DC.B    'HISTORY',CR,LF
0000691A                           549                  *DC.B    '   none',CR,LF,LF
0000691A                           550                  
0000691A= 53 45 45 20 41 4C ...    551                  DC.B    'SEE ALSO',CR,LF
00006924= 20 20 20 48 45 4C ...    552                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), EXIT(1), MAN(1)',CR,LF,LF
0000698C                           553                  
0000698C= 44 61 6E 69 65 6C ...    554                  DC.B    'Daniel H. Meves                    27 April 2016                        DF(1)',CR,LF,LF,0
000069DD                           555                  
000069DD= 0D 0A 45 58 49 54 ...    556  EXITMANPAGE     DC.B    CR,LF,'EXIT(1)                       MC68000/SANPER-1 ELU                       EXIT(1)',CR,LF,LF
00006A32                           557                  
00006A32= 4E 41 4D 45 0D 0A        558                  DC.B    'NAME',CR,LF
00006A38= 20 20 20 45 58 49 ...    559                  DC.B    '   EXIT - Exit Monitor Program.',CR,LF,LF
00006A5A                           560                  
00006A5A= 53 59 4E 4F 50 53 ...    561                  DC.B    'SYNOPSYS',CR,LF
00006A64= 20 20 20 45 58 49 ...    562                  DC.B    '   EXIT',CR,LF,LF
00006A6E                           563                  
00006A6E= 44 45 53 43 52 49 ...    564                  DC.B    'DESCRIPTION',CR,LF
00006A7B= 20 20 20 54 68 65 ...    565                  DC.B    '   The EXIT command terminates/exits your Monitor program.',CR,LF,LF
00006AB8                           566                  
00006AB8                           567                  *DC.B    'OPTIONS',CR,LF
00006AB8                           568                  *DC.B    '   none',CR,LF,LF
00006AB8                           569                  
00006AB8                           570                  *DC.B    'NOTES',CR,LF
00006AB8                           571                  *DC.B    '   none',CR,LF,LF
00006AB8                           572                  
00006AB8                           573                  *DC.B    'FILES',CR,LF
00006AB8                           574                  *DC.B    '   none',CR,LF,LF
00006AB8                           575                  
00006AB8                           576                  *DC.B    'ENVIRONMENT',CR,LF
00006AB8                           577                  *DC.B    '   none',CR,LF,LF
00006AB8                           578                  
00006AB8                           579                  *DC.B    'DIAGNOSTICS',CR,LF
00006AB8                           580                  *DC.B    '   none',CR,LF,LF
00006AB8                           581                  
00006AB8                           582                  *DC.B    'BUGS',CR,LF
00006AB8                           583                  *DC.B    '   none known atm',CR,LF,LF
00006AB8                           584                  
00006AB8= 41 55 54 48 4F 52 ...    585                  DC.B    'AUTHOR',CR,LF
00006AC0= 20 20 20 44 61 6E ...    586                  DC.B    '   Daniel H. Meves',CR,LF,LF
00006AD5                           587                  
00006AD5                           588                  *DC.B    'HISTORY',CR,LF
00006AD5                           589                  *DC.B    '   none',CR,LF,LF
00006AD5                           590                  
00006AD5= 53 45 45 20 41 4C ...    591                  DC.B    'SEE ALSO',CR,LF
00006ADF= 20 20 20 48 45 4C ...    592                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), MAN(1)',CR,LF,LF
00006B45                           593                  
00006B45= 44 61 6E 69 65 6C ...    594                  DC.B    'Daniel H. Meves                    27 April 2016                        EXIT(1)',CR,LF,LF,0
00006B98                           595                  
00006B98= 0D 0A 4D 41 4E 28 ...    596  MANMANPAGE      DC.B    CR,LF,'MAN(1)                       MC68000/SANPER-1 ELU                       MAN(1)',CR,LF,LF
00006BEB                           597                  
00006BEB= 4E 41 4D 45 0D 0A        598                  DC.B    'NAME',CR,LF
00006BF1= 20 20 20 4D 41 4E ...    599                  DC.B    '   MAN - An interface to the on-line reference manuals.',CR,LF,LF
00006C2B                           600                  
00006C2B= 53 59 4E 4F 50 53 ...    601                  DC.B    'SYNOPSYS',CR,LF
00006C35= 20 20 20 4D 41 4E ...    602                  DC.B    '   MAN [command]',CR,LF,LF
00006C48                           603                  
00006C48= 44 45 53 43 52 49 ...    604                  DC.B    'DESCRIPTION',CR,LF
00006C55= 20 20 20 4D 41 4E ...    605                  DC.B    '   MAN is the systems manual pager.',CR,LF,LF
00006C7B                           606                  
00006C7B                           607                  *DC.B    'OPTIONS',CR,LF
00006C7B                           608                  *DC.B    '   none',CR,LF,LF
00006C7B                           609                  
00006C7B                           610                  *DC.B    'NOTES',CR,LF
00006C7B                           611                  *DC.B    '   none',CR,LF,LF
00006C7B                           612                  
00006C7B                           613                  *DC.B    'FILES',CR,LF
00006C7B                           614                  *DC.B    '   none',CR,LF,LF
00006C7B                           615                  
00006C7B                           616                  *DC.B    'ENVIRONMENT',CR,LF
00006C7B                           617                  *DC.B    '   none',CR,LF,LF
00006C7B                           618                  
00006C7B                           619                  *DC.B    'DIAGNOSTICS',CR,LF
00006C7B                           620                  *DC.B    '   none',CR,LF,LF
00006C7B                           621                  
00006C7B                           622                  *DC.B    'BUGS',CR,LF
00006C7B                           623                  *DC.B    '   none known atm',CR,LF,LF
00006C7B                           624                  
00006C7B= 41 55 54 48 4F 52 ...    625                  DC.B    'AUTHOR',CR,LF
00006C83= 20 20 20 44 61 6E ...    626                  DC.B    '   Daniel H. Meves',CR,LF,LF
00006C98                           627                  
00006C98                           628                  *DC.B    'HISTORY',CR,LF
00006C98                           629                  *DC.B    '   none',CR,LF,LF
00006C98                           630                  
00006C98= 53 45 45 20 41 4C ...    631                  DC.B    'SEE ALSO',CR,LF
00006CA2= 20 20 20 48 45 4C ...    632                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1)',CR,LF,LF
00006D09                           633                  
00006D09= 44 61 6E 69 65 6C ...    634                  DC.B    'Daniel H. Meves                    27 April 2016                        MAN(1)',CR,LF,LF,0
00006D5B                           635                  
00003000                           636      ORG     $3000
00003000= 48 45 4C 50 00           637  HELPPTR    DC.B    'HELP',0
00003005= 4D 44 53 50 00           638  MDSPPTR    DC.B    'MDSP',0
0000300A= 53 4F 52 54 57 00        639  SORTWPTR   DC.B    'SORTW',0
00003010= 4D 4D 00                 640  MMPTR      DC.B    'MM',0
00003013= 4D 53 00                 641  MSPTR      DC.B    'MS',0
00003016= 42 46 00                 642  BFPTR      DC.B    'BF',0
00003019= 42 4D 4F 56 00           643  BMOVPTR    DC.B    'BMOV',0
0000301E= 42 54 53 54 00           644  BTSTPTR    DC.B    'BTST',0
00003023= 42 53 43 48 00           645  BSCHPTR    DC.B    'BSCH',0
00003028= 47 4F 00                 646  GOPTR      DC.B    'GO',0
0000302B= 44 46 00                 647  DFPTR      DC.B    'DF',0
0000302E= 45 58 49 54 00           648  EXITPTR    DC.B    'EXIT',0
00003033= 4D 41 4E 00              649  MANPTR     DC.B    'MAN',0
00003037                           650  
00004000                           651      ORG     $4000
00004000= 00002120                 652  HELPHDLR    DC.L   HELP
00004004= 0000239A                 653  MDSPHDLR    DC.L   MDSP
00004008= 0000247A                 654  SORTWHDLR   DC.L   SORTW
0000400C= 00002688                 655  MMHDLR      DC.L   MM
00004010= 00002752                 656  MSHDLR      DC.L   MS
00004014= 00002808                 657  BFHDLR      DC.L   BF
00004018= 00002902                 658  BMOVHDLR    DC.L   BMOV
0000401C= 0000299A                 659  BTSTHDLR    DC.L   BTST
00004020= 00002AC0                 660  BSCHHDLR    DC.L   BSCH
00004024= 00002AFA                 661  GOHDLR      DC.L   GO
00004028= 00002B34                 662  DFHDLR      DC.L   DF
0000402C= 00002B3E                 663  EXITHDLR    DC.L   EXIT
00004030= 000020E4                 664  MANHDLR     DC.L   MANHELP
00004034                           665  
00004800                           666      ORG     $4800
00004800= 00002164                 667  HELPSTR     DC.L    HELPOUT
00004804= 00002178                 668  MDSPSTR     DC.L    MDSPOUT
00004808= 0000218C                 669  SORTWSTR    DC.L    SORTWOUT
0000480C= 000021A0                 670  MMSTR       DC.L    MMOUT
00004810= 000021B4                 671  MSSTR       DC.L    MSOUT
00004814= 000021C8                 672  BFSTR       DC.L    BFOUT
00004818= 000021DC                 673  BMOVSTR     DC.L    BMOVOUT
0000481C= 000021F0                 674  BTSTSTR     DC.L    BTSTOUT
00004820= 00002204                 675  BSCHSTR     DC.L    BSCHOUT
00004824= 00002218                 676  GOSTR       DC.L    GOOUT
00004828= 0000222C                 677  DFSTR       DC.L    DFOUT
0000482C= 00002240                 678  EXITSTR     DC.L    EXITOUT
00004830= 00002254                 679  MANSTR      DC.L    MANOUT   
00004834                           680      
00004834                           681  *-----------------------------------------------------------
00004834                           682  * Main Program
00004834                           683  *-----------------------------------------------------------
00002000                           684      ORG     $2000
00002000                           685  START:                  ; first instruction of program
00002000  43F8 1000                686                  LEA     PROMPT,A1
00002004  103C 000E                687                  MOVE.B  #14,D0
00002008  4E4F                     688                  TRAP    #15
0000200A                           689          
0000200A  45F8 1010                690                  LEA     INPUTBUFFER,A2
0000200E  744F                     691                  MOVE.L  #79,D2
00002010  421A                     692  CLRINBUF        CLR.B   (A2)+
00002012  51CA FFFC                693                  DBRA    D2,CLRINBUF
00002016                           694  
00002016  47F8 1060                695                  LEA     CMDBUFFER,A3
0000201A  764F                     696                  MOVE.L  #79,D3
0000201C  421B                     697  CLRCMDBUF       CLR.B   (A3)+
0000201E  51CB FFFC                698                  DBRA    D3,CLRCMDBUF  
00002022                           699          
00002022  43F8 1010                700                  LEA     INPUTBUFFER,A1
00002026  103C 0002                701                  MOVE.B  #2,D0
0000202A  4E4F                     702                  TRAP    #15
0000202C                           703                  
0000202C  4EB9 00002034            704                  JSR     INTERPRETER
00002032  60CC                     705                  BRA     START   
00002034                           706      
00002034                           707  *-----------------------------------------------------------
00002034                           708  *Command Interpreter
00002034                           709  *-----------------------------------------------------------
00002034  48E7 FFFF                710  INTERPRETER     MOVEM.L A0-A7/D0-D7,-(SP)
00002038                           711   
00002038  43F8 1010                712                  LEA     INPUTBUFFER,A1      ; pointer to command input
0000203C  2049                     713                  MOVEA.L A1,A0
0000203E  D3C1                     714                  ADDA.L  D1,A1               ; pointer to end of command input
00002040  4282                     715                  CLR.L   D2
00002042  4283                     716                  CLR.L   D3                  ; character counter
00002044                           717                   
00002044  49F8 3000                718                  LEA     HELPPTR,A4          ; pointer to string table
00002048  4BF8 4000                719                  LEA     HELPHDLR,A5         ; pointer to jump table
0000204C  47F8 1010                720  NEXT            LEA     INPUTBUFFER,A3
00002050  4EB9 00002080            721                  JSR     COMPARESTRING
00002056                           722                  
00002056  0C04 0001                723                  CMPI.B  #1,D4
0000205A  6700 000E                724                  BEQ     HDLRJMP
0000205E  584D                     725                  ADDA.W  #4,A5
00002060  BAFC 4034                726                  CMP.W  #$4034,A5
00002064  6700 000E                727                  BEQ     ERROR
00002068  60E2                     728                  BRA     NEXT
0000206A                           729                  
0000206A  2C55                     730  HDLRJMP         MOVE.L  (A5),A6
0000206C  4E96                     731                  JSR     (A6)
0000206E                           732                     
0000206E  4CDF FFFF                733                  MOVEM.L (SP)+,A0-A7/D0-D7
00002072  4E75                     734                  RTS
00002074                           735                  
00002074  43F8 114C                736  ERROR           LEA     ERRORMSG,A1
00002078  103C 000E                737                  MOVE.B  #14,D0
0000207C  4E4F                     738                  TRAP    #15
0000207E  6080                     739                  BRA     START
00002080                           740  
00002080                           741  *-----------------------------------------------------------
00002080                           742  * Compare Strings
00002080                           743  * INPUT: (A3) = STRING 1, (A4) = STRING 2
00002080                           744  * OUTPUT: D4=1 IF STRINGS MATCH, ELSE D4=0
00002080                           745  *-----------------------------------------------------------
00002080  48E7 F7E7                746  COMPARESTRING   MOVEM.L A0-A2/A5-A7/D0-D3/D5-D7,-(SP)
00002084  4284                     747                  CLR.L   D4
00002086                           748                  
00002086  0C13 0000                749                  CMP.B   #NULL,(A3)
0000208A  6700 FF74                750                  BEQ     START
0000208E                           751                  
0000208E  0C13 0020                752  COMPARELOOP     CMPI.B  #SP,(A3)
00002092  6700 0026                753                  BEQ     COMPARELIST
00002096                           754                  
00002096  0C13 000D                755                  CMPI.B  #CR,(A3)
0000209A  6700 001E                756                  BEQ     COMPARELIST
0000209E                           757                  
0000209E  0C13 0000                758                  CMPI.B  #NULL,(A3)
000020A2  6700 0016                759                  BEQ     COMPARELIST
000020A6                           760                  
000020A6  B90B                     761                  CMPM.B  (A3)+,(A4)+
000020A8  67E4                     762                  BEQ     COMPARELOOP
000020AA                           763                  
000020AA  4EB9 000020D4            764                  JSR     NULLJMP
000020B0  183C 0000                765                  MOVE.B  #0,D4
000020B4  4CDF E7EF                766                  MOVEM.L (SP)+,A0-A2/A5-A7/D0-D3/D5-D7
000020B8  4E75                     767                  RTS     
000020BA                           768                  
000020BA  0C1C 0000                769  COMPARELIST     CMPI.B  #NULL,(A4)+
000020BE  6700 000A                770                  BEQ     MATCH
000020C2                           771                  
000020C2  183C 0000                772                  MOVE.B  #0,D4
000020C6  6000 0006                773                  BRA     RETURN
000020CA                           774                  
000020CA  183C 0001                775  MATCH           MOVE.B  #1,D4
000020CE                           776                  
000020CE  4CDF E7EF                777  RETURN          MOVEM.L (SP)+,A0-A2/A5-A7/D0-D3/D5-D7
000020D2  4E75                     778                  RTS
000020D4                           779  
000020D4  48E7 FFF7                780  NULLJMP         MOVEM.L A0-A3/A5-A7/D0-D7,-(SP)
000020D8  0C1C 0000                781  NULLLOOP        CMPI.B  #NULL,(A4)+
000020DC  66FA                     782                  BNE     NULLLOOP
000020DE  4CDF EFFF                783                  MOVEM.L (SP)+,A0-A3/A5-A7/D0-D7
000020E2  4E75                     784                  RTS
000020E4                           785                  
000020E4                           786  *-----------------------------------------------------------
000020E4                           787  * HELP (Help) - The Help command must display all available
000020E4                           788  * commands and usage descriptions.
000020E4                           789  *
000020E4                           790  *
000020E4                           791  *-----------------------------------------------------------
000020E4  48E7 FFFF                792  MANHELP         MOVEM.L A0-A7/D0-D7,-(SP)
000020E8                           793  
000020E8  49F8 3000                794                  LEA     HELPPTR,A4          ; pointer to string table
000020EC  4BF8 4800                795                  LEA     HELPSTR,A5          ; pointer to jump table
000020F0  47F8 1010                796  NEXTPAGEMAN     LEA     INPUTBUFFER,A3
000020F4  584B                     797                  ADDA.W  #4,A3
000020F6  0C1B 0000                798                  CMPI.B  #NULL,(A3)+
000020FA  6600 000A                799                  BNE     CMPSTR1
000020FE  0C13 0000                800                  CMPI.B  #NULL,(A3)
00002102  6700 0164                801                  BEQ     HELPONLY
00002106  534B                     802  CMPSTR1         SUBA.W  #1,A3
00002108  4EB8 2080                803                  JSR     COMPARESTRING
0000210C                           804                  
0000210C  0C04 0001                805                  CMPI.B  #1,D4
00002110  6700 004A                806                  BEQ     MANPAGEJMP
00002114  584D                     807                  ADDA.W  #4,A5
00002116  BAFC 4834                808                  CMP.W  #$4834,A5
0000211A  6700 014C                809                  BEQ     HELPONLY
0000211E  60D0                     810                  BRA     NEXTPAGEMAN
00002120                           811  
00002120  48E7 FFFF                812  HELP            MOVEM.L A0-A7/D0-D7,-(SP)
00002124                           813  
00002124  49F8 3000                814                  LEA     HELPPTR,A4          ; pointer to string table
00002128  4BF8 4800                815                  LEA     HELPSTR,A5          ; pointer to jump table
0000212C  47F8 1010                816  NEXTPAGE        LEA     INPUTBUFFER,A3
00002130  5A4B                     817                  ADDA.W  #5,A3
00002132  0C1B 0000                818                  CMPI.B  #NULL,(A3)+
00002136  6600 000A                819                  BNE     CMPSTR2
0000213A  0C13 0000                820                  CMPI.B  #NULL,(A3)
0000213E  6700 0128                821                  BEQ     HELPONLY
00002142  534B                     822  CMPSTR2         SUBA.W  #1,A3
00002144  4EB8 2080                823                  JSR     COMPARESTRING
00002148                           824                  
00002148  0C04 0001                825  CHECK           CMPI.B  #1,D4
0000214C  6700 000E                826                  BEQ     MANPAGEJMP
00002150  584D                     827                  ADDA.W  #4,A5
00002152  BAFC 4834                828                  CMP.W  #$4834,A5
00002156  6700 0110                829                  BEQ     HELPONLY
0000215A  60D0                     830                  BRA     NEXTPAGE
0000215C                           831                  
0000215C  2C55                     832  MANPAGEJMP      MOVE.L  (A5),A6
0000215E  4E96                     833                  JSR     (A6)
00002160  6000 0192                834                  BRA     ENDHELP
00002164                           835  
00002164  48E7 FFFF                836  HELPOUT         MOVEM.L A0-A7/D0-D7,-(SP)
00002168  43F8 5000                837                  LEA     HELPMANPAGE,A1
0000216C  103C 000E                838                  MOVE.B  #14,D0
00002170  4E4F                     839                  TRAP    #15
00002172  4CDF FFFF                840                  MOVEM.L (SP)+,A0-A7/D0-D7
00002176  4E75                     841                  RTS
00002178                           842                  
00002178  48E7 FFFF                843  MDSPOUT         MOVEM.L A0-A7/D0-D7,-(SP)
0000217C  43F8 51C0                844                  LEA     MDSPMANPAGE,A1
00002180  103C 000E                845                  MOVE.B  #14,D0
00002184  4E4F                     846                  TRAP    #15
00002186  4CDF FFFF                847                  MOVEM.L (SP)+,A0-A7/D0-D7
0000218A  4E75                     848                  RTS
0000218C                           849                  
0000218C  48E7 FFFF                850  SORTWOUT        MOVEM.L A0-A7/D0-D7,-(SP)
00002190  43F8 543C                851                  LEA     SORTWMANPAGE,A1
00002194  103C 000E                852                  MOVE.B  #14,D0
00002198  4E4F                     853                  TRAP    #15
0000219A  4CDF FFFF                854                  MOVEM.L (SP)+,A0-A7/D0-D7
0000219E  4E75                     855                  RTS
000021A0                           856                  
000021A0  48E7 FFFF                857  MMOUT           MOVEM.L A0-A7/D0-D7,-(SP)
000021A4  43F8 5704                858                  LEA     MMMANPAGE,A1
000021A8  103C 000E                859                  MOVE.B  #14,D0
000021AC  4E4F                     860                  TRAP    #15
000021AE  4CDF FFFF                861                  MOVEM.L (SP)+,A0-A7/D0-D7
000021B2  4E75                     862                  RTS
000021B4                           863                  
000021B4  48E7 FFFF                864  MSOUT           MOVEM.L A0-A7/D0-D7,-(SP)
000021B8  43F8 5952                865                  LEA     MSMANPAGE,A1
000021BC  103C 000E                866                  MOVE.B  #14,D0
000021C0  4E4F                     867                  TRAP    #15
000021C2  4CDF FFFF                868                  MOVEM.L (SP)+,A0-A7/D0-D7
000021C6  4E75                     869                  RTS
000021C8                           870                  
000021C8  48E7 FFFF                871  BFOUT           MOVEM.L A0-A7/D0-D7,-(SP)
000021CC  43F8 5B6E                872                  LEA     BFMANPAGE,A1
000021D0  103C 000E                873                  MOVE.B  #14,D0
000021D4  4E4F                     874                  TRAP    #15
000021D6  4CDF FFFF                875                  MOVEM.L (SP)+,A0-A7/D0-D7
000021DA  4E75                     876                  RTS
000021DC                           877                  
000021DC  48E7 FFFF                878  BMOVOUT         MOVEM.L A0-A7/D0-D7,-(SP)
000021E0  43F8 5E5B                879                  LEA     BMOVMANPAGE,A1
000021E4  103C 000E                880                  MOVE.B  #14,D0
000021E8  4E4F                     881                  TRAP    #15
000021EA  4CDF FFFF                882                  MOVEM.L (SP)+,A0-A7/D0-D7
000021EE  4E75                     883                  RTS
000021F0                           884                  
000021F0  48E7 FFFF                885  BTSTOUT         MOVEM.L A0-A7/D0-D7,-(SP)
000021F4  43F8 605A                886                  LEA     BTSTMANPAGE,A1
000021F8  103C 000E                887                  MOVE.B  #14,D0
000021FC  4E4F                     888                  TRAP    #15
000021FE  4CDF FFFF                889                  MOVEM.L (SP)+,A0-A7/D0-D7
00002202  4E75                     890                  RTS
00002204                           891                  
00002204  48E7 FFFF                892  BSCHOUT         MOVEM.L A0-A7/D0-D7,-(SP)
00002208  43F8 635B                893                  LEA     BSCHMANPAGE,A1
0000220C  103C 000E                894                  MOVE.B  #14,D0
00002210  4E4F                     895                  TRAP    #15
00002212  4CDF FFFF                896                  MOVEM.L (SP)+,A0-A7/D0-D7
00002216  4E75                     897                  RTS
00002218                           898                  
00002218  48E7 FFFF                899  GOOUT           MOVEM.L A0-A7/D0-D7,-(SP)
0000221C  43F8 65EF                900                  LEA     GOMANPAGE,A1
00002220  103C 000E                901                  MOVE.B  #14,D0
00002224  4E4F                     902                  TRAP    #15
00002226  4CDF FFFF                903                  MOVEM.L (SP)+,A0-A7/D0-D7
0000222A  4E75                     904                  RTS
0000222C                           905                  
0000222C  48E7 FFFF                906  DFOUT           MOVEM.L A0-A7/D0-D7,-(SP)
00002230  43F8 67AF                907                  LEA     DFMANPAGE,A1
00002234  103C 000E                908                  MOVE.B  #14,D0
00002238  4E4F                     909                  TRAP    #15
0000223A  4CDF FFFF                910                  MOVEM.L (SP)+,A0-A7/D0-D7
0000223E  4E75                     911                  RTS
00002240                           912                  
00002240  48E7 FFFF                913  EXITOUT         MOVEM.L A0-A7/D0-D7,-(SP)
00002244  43F8 69DD                914                  LEA     EXITMANPAGE,A1
00002248  103C 000E                915                  MOVE.B  #14,D0
0000224C  4E4F                     916                  TRAP    #15
0000224E  4CDF FFFF                917                  MOVEM.L (SP)+,A0-A7/D0-D7
00002252  4E75                     918                  RTS
00002254                           919                  
00002254  48E7 FFFF                920  MANOUT          MOVEM.L A0-A7/D0-D7,-(SP)
00002258  43F8 6B98                921                  LEA     MANMANPAGE,A1
0000225C  103C 000E                922                  MOVE.B  #14,D0
00002260  4E4F                     923                  TRAP    #15
00002262  4CDF FFFF                924                  MOVEM.L (SP)+,A0-A7/D0-D7
00002266  4E75                     925                  RTS
00002268                           926                  
00002268  43F8 12A1                927  HELPONLY        LEA     CMDMSG,A1
0000226C  103C 000E                928                  MOVE.B  #14,D0
00002270  4E4F                     929                  TRAP    #15
00002272                           930  
00002272  43F8 12C8                931                  LEA     HELPMSG,A1
00002276  103C 000E                932                  MOVE.B  #14,D0
0000227A  4E4F                     933                  TRAP    #15
0000227C                           934                  
0000227C  43F8 12EC                935                  LEA     MDSPMSG,A1
00002280  103C 000E                936                  MOVE.B  #14,D0
00002284  4E4F                     937                  TRAP    #15
00002286                           938                  
00002286  43F8 1354                939                  LEA     SORTWMSG,A1
0000228A  103C 000E                940                  MOVE.B  #14,D0
0000228E  4E4F                     941                  TRAP    #15
00002290                           942                  
00002290  43F8 140E                943                  LEA     MMMSG,A1
00002294  103C 000E                944                  MOVE.B  #14,D0
00002298  4E4F                     945                  TRAP    #15
0000229A                           946                  
0000229A  43F8 14B4                947                  LEA     MSMSG,A1
0000229E  103C 000E                948                  MOVE.B  #14,D0
000022A2  4E4F                     949                  TRAP    #15
000022A4                           950                  
000022A4  43F8 14FB                951                  LEA     BFMSG,A1
000022A8  103C 000E                952                  MOVE.B  #14,D0
000022AC  4E4F                     953                  TRAP    #15
000022AE                           954                  
000022AE  43F8 155D                955                  LEA     BMOVMSG,A1
000022B2  103C 000E                956                  MOVE.B  #14,D0
000022B6  4E4F                     957                  TRAP    #15
000022B8                           958                  
000022B8  43F8 15D9                959                  LEA     BTSTMSG,A1
000022BC  103C 000E                960                  MOVE.B  #14,D0
000022C0  4E4F                     961                  TRAP    #15
000022C2                           962                  
000022C2  43F8 15F4                963                  LEA     BSCHMSG,A1
000022C6  103C 000E                964                  MOVE.B  #14,D0
000022CA  4E4F                     965                  TRAP    #15
000022CC                           966                  
000022CC  43F8 1679                967                  LEA     GOMSG,A1
000022D0  103C 000E                968                  MOVE.B  #14,D0
000022D4  4E4F                     969                  TRAP    #15
000022D6                           970                  
000022D6  43F8 16CA                971                  LEA     DFMSG,A1
000022DA  103C 000E                972                  MOVE.B  #14,D0
000022DE  4E4F                     973                  TRAP    #15
000022E0                           974                  
000022E0  43F8 16F4                975                  LEA     EXITMSG,A1
000022E4  103C 000E                976                  MOVE.B  #14,D0
000022E8  4E4F                     977                  TRAP    #15
000022EA                           978                  
000022EA  43F8 1729                979                  LEA     CMDMSG2,A1
000022EE  103C 000E                980                  MOVE.B  #14,D0
000022F2  4E4F                     981                  TRAP    #15
000022F4                           982                  
000022F4  4CDF FFFF                983  ENDHELP         MOVEM.L (SP)+,A0-A7/D0-D7
000022F8  4E75                     984                  RTS
000022FA                           985                  
000022FA                           986  *-----------------------------------------------------------
000022FA                           987  * Check for Dollarsign and Convert Argument to Hex
000022FA                           988  * A0 = ptr to command buffer, incremented by INDEX
000022FA                           989  * D3 = output               A4 = ptr to output
000022FA                           990  * D2 = 1 - INVALID ADDRESS, 0 - VALID ADDRESS
000022FA                           991  * D4 = 0 - HEX VALUE, 1 - NON HEX VALUE
000022FA                           992  * D5 - LENGTH OF STRING
000022FA                           993  *-----------------------------------------------------------
000022FA  48E7 C3F7                994  CHKDOLLAR   MOVEM.L A0-A3/A5-A7/D0-D1/D6-D7,-(SP)
000022FE  4282                     995              CLR.L   D2
00002300  4283                     996              CLR.L   D3
00002302                           997              
00002302  0C10 0024                998              CMPI.B  #HEX,(A0)
00002306  6700 0006                999              BEQ     DOLLARSIGN
0000230A  6000 0004               1000              BRA     ARGPTR
0000230E  5248                    1001  DOLLARSIGN  ADDA.W  #1,A0         
00002310  2A48                    1002  ARGPTR      MOVEA.L A0,A5
00002312                          1003  
00002312  5203                    1004  CMPNULL     ADDI.B  #1,D3
00002314  0C18 0000               1005              CMPI.B  #NULL,(A0)+
00002318  6700 0004               1006              BEQ     ENDPTR
0000231C  60F4                    1007              BRA     CMPNULL
0000231E  5303                    1008  ENDPTR      SUBI.B  #1,D3
00002320  5348                    1009              SUBA.W  #1,A0
00002322  2C48                    1010              MOVEA.L A0,A6
00002324  0C03 0008               1011              CMPI.B  #8,D3
00002328  6F00 0018               1012              BLE     SAFE
0000232C  7401                    1013              MOVE.L  #1,D2
0000232E  4EB9 00002B90           1014              JSR     ASCII2HEX
00002334  43F8 1161               1015              LEA     ADDRERROR,A1
00002338  103C 000E               1016              MOVE.B  #14,D0
0000233C  4E4F                    1017              TRAP    #15
0000233E  6000 000A               1018              BRA     INVALIDADDR
00002342                          1019                   
00002342  7400                    1020  SAFE        MOVE.L  #0,D2
00002344  4EB9 00002B90           1021              JSR     ASCII2HEX
0000234A                          1022  
0000234A  4CDF EFC3               1023  INVALIDADDR MOVEM.L (SP)+,A0-A3/A5-A7/D0-D1/D6-D7
0000234E  4E75                    1024              RTS
00002350                          1025  
00002350                          1026  *-----------------------------------------------------------
00002350                          1027  * MDSP Print Loop
00002350                          1028  * A2 = ptr to beginning memory A3 = ptr to ending memory
00002350                          1029  *-----------------------------------------------------------
00002350  48E7 FFFF               1030  MDSPPRINT   MOVEM.L A0-A7/D0-D7,-(SP)
00002354                          1031  
00002354  2A8A                    1032  INCREMENT   MOVE.L  A2,(A5)
00002356  584E                    1033              ADDA.W  #4,A6
00002358  4EB9 00002BFE           1034              JSR     HEX2ASCII
0000235E  224C                    1035              MOVEA.L A4,A1
00002360  323C 0008               1036              MOVE.W  #8,D1  
00002364  103C 0001               1037              MOVE.B  #1,D0
00002368  4E4F                    1038              TRAP    #15
0000236A  43F8 129D               1039              LEA     SPACE,A1
0000236E  103C 000E               1040              MOVE.B  #14,D0
00002372  4E4F                    1041              TRAP    #15
00002374  1A92                    1042              MOVE.B  (A2),(A5)
00002376  4DF8 1138               1043              LEA     BUFFER,A6
0000237A  524E                    1044              ADDA.W  #1,A6
0000237C  4EB9 00002BFE           1045              JSR     HEX2ASCII
00002382  224C                    1046              MOVEA.L A4,A1
00002384  323C 0002               1047              MOVE.W  #2,D1  
00002388  103C 0000               1048              MOVE.B  #0,D0
0000238C  4E4F                    1049              TRAP    #15
0000238E  524A                    1050              ADDA.W  #1,A2
00002390  B7CA                    1051              CMP.L   A2,A3
00002392  66C0                    1052              BNE     INCREMENT
00002394                          1053              
00002394  4CDF FFFF               1054              MOVEM.L (SP)+,A0-A7/D0-D7
00002398  4E75                    1055              RTS
0000239A                          1056  
0000239A                          1057  
0000239A                          1058  *-----------------------------------------------------------
0000239A                          1059  * MDSP (Memory Display) - The MDSP (Memory Display) command
0000239A                          1060  * outputs the address and memory contents from <address1> to
0000239A                          1061  * <address2>. The MDSP (Memory Display) command ALSO outputs
0000239A                          1062  * the address and memory contents from <address1> to <address1 + 16bytes>
0000239A                          1063  *-----------------------------------------------------------
0000239A  48E7 FFFF               1064  MDSP        MOVEM.L A0-A7/D0-D7,-(SP)
0000239E                          1065  
0000239E  41F8 1010               1066              LEA     INPUTBUFFER,A0
000023A2  5A48                    1067              ADDA.W  #5,A0
000023A4  5248                    1068  MDSPONLY    ADDA.W  #1,A0
000023A6  5204                    1069              ADD.B   #1,D4
000023A8  B83C 0003               1070              CMP.B   #3,D4
000023AC  6C00 0012               1071              BGE     PRTMDSP
000023B0  0C10 0020               1072              CMP.B   #SP,(A0)
000023B4  67EE                    1073              BEQ     MDSPONLY
000023B6  0C10 0000               1074              CMP.B   #NULL,(A0)
000023BA  67E8                    1075              BEQ     MDSPONLY
000023BC  6000 0010               1076              BRA     MDSPCONT
000023C0                          1077              
000023C0  43F8 12EC               1078  PRTMDSP     LEA     MDSPMSG,A1
000023C4  103C 000E               1079              MOVE.B  #14,D0
000023C8  4E4F                    1080              TRAP    #15
000023CA  6000 0074               1081              BRA     MDSPDONE
000023CE                          1082              
000023CE  4283                    1083  MDSPCONT    CLR.L   D3
000023D0  4EB9 00002B4E           1084              JSR     ARGV
000023D6  2C02                    1085              MOVE.L  D2,D6
000023D8  41F8 1060               1086              LEA     CMDBUFFER,A0
000023DC  D0FC 0014               1087              ADDA.W  #INDEX,A0
000023E0                          1088              
000023E0  4EB8 22FA               1089              JSR     CHKDOLLAR
000023E4                          1090              
000023E4  21D4 1100               1091              MOVE.L  (A4),$1100
000023E8                          1092              
000023E8  0C06 0002               1093              CMPI.B  #2,D6
000023EC  6700 000A               1094              BEQ     ARG1
000023F0                          1095              
000023F0  0C06 0003               1096              CMPI.B  #3,D6
000023F4  6700 001E               1097              BEQ     ARG2
000023F8                          1098              
000023F8  41F8 1110               1099  ARG1        LEA     ASCIIBUFFER,A0
000023FC  2450                    1100              MOVEA.L (A0),A2
000023FE  4BF8 1138               1101              LEA     BUFFER,A5
00002402  4DF8 1138               1102              LEA     BUFFER,A6
00002406  264A                    1103              MOVEA.L A2,A3
00002408  D6FC 0010               1104              ADDA.W  #16,A3
0000240C                          1105              
0000240C  4EB8 2350               1106              JSR     MDSPPRINT
00002410                          1107              
00002410  6000 002E               1108              BRA     MDSPDONE
00002414                          1109           
00002414  41F8 1060               1110  ARG2        LEA     CMDBUFFER,A0
00002418  103C 0002               1111              MOVE.B  #2,D0
0000241C  123C 0014               1112              MOVE.B  #INDEX,D1
00002420  C2C0                    1113              MULU    D0,D1
00002422  D0C1                    1114              ADDA.W  D1,A0
00002424                          1115              
00002424  4EB8 22FA               1116              JSR     CHKDOLLAR
00002428                          1117              
00002428  41F8 1100               1118              LEA     $1100,A0
0000242C  43F8 1110               1119              LEA     ASCIIBUFFER,A1
00002430  2450                    1120              MOVEA.L (A0),A2
00002432  2651                    1121              MOVEA.L (A1),A3
00002434  4BF8 1138               1122              LEA     BUFFER,A5
00002438  4DF8 1138               1123              LEA     BUFFER,A6
0000243C                          1124              
0000243C  4EB8 2350               1125              JSR     MDSPPRINT
00002440                          1126              
00002440  4CDF FFFF               1127  MDSPDONE    MOVEM.L (SP)+,A0-A7/D0-D7
00002444  4E75                    1128              RTS
00002446                          1129  
00002446                          1130  *-----------------------------------------------------------
00002446                          1131  * Bubble Sort
00002446                          1132  * A0 - ptr to beginning memory A1 = ptr to ending memory
00002446                          1133  * D1 = 1 - Ascending, 0 - Descending 
00002446                          1134  *-----------------------------------------------------------
00002446  48E7 FFFF               1135  BUBBLESORT  MOVEM.L A0-A7/D0-D7,-(SP)
0000244A                          1136              
0000244A  2448                    1137              MOVE.L  A0,A2
0000244C  204A                    1138  BUBBLELOOP  MOVE.L  A2,A0
0000244E                          1139  
0000244E  0C01 0001               1140  BUBBLECMP   CMPI.B  #1,D1
00002452  6700 000A               1141              BEQ     DESCEND
00002456  B148                    1142              CMP.W   (A0)+,(A0)+
00002458  6212                    1143              BHI.S   BUBBLESWAP
0000245A  6000 0006               1144              BRA     SORT
0000245E                          1145        
0000245E  B148                    1146  DESCEND     CMP.W   (A0)+,(A0)+
00002460  650A                    1147              BLO.S   BUBBLESWAP
00002462                          1148              
00002462  5588                    1149  SORT        SUBQ.L  #2,A0
00002464  B3C8                    1150              CMP.L   A0,A1
00002466  66E6                    1151              BNE     BUBBLECMP
00002468  6000 000A               1152              BRA     BUBBLEDN
0000246C  2020                    1153  BUBBLESWAP  MOVE.L  -(A0),D0
0000246E  4840                    1154              SWAP.W  D0
00002470  2080                    1155              MOVE.L  D0,(A0)
00002472  60D8                    1156              BRA     BUBBLELOOP
00002474                          1157  
00002474  4CDF FFFF               1158  BUBBLEDN    MOVEM.L (SP)+,A0-A7/D0-D7
00002478  4E75                    1159              RTS
0000247A                          1160  
0000247A                          1161  *-----------------------------------------------------------
0000247A                          1162  * SORTW (Sort) - The SORT command sorts a block of memory. The starting
0000247A                          1163  * address <address1> and the ending address <address2> of the memory block
0000247A                          1164  * are specified in the command. The order (A or D) specifies whether the list is 
0000247A                          1165  * sorted in Ascending or Descending order. (The size of the data to be sorted is a word)
0000247A                          1166  *-----------------------------------------------------------
0000247A  48E7 FFFF               1167  SORTW       MOVEM.L A0-A7/D0-D7,-(SP)
0000247E                          1168  
0000247E  41F8 1010               1169              LEA     INPUTBUFFER,A0
00002482  5C48                    1170              ADDA.W  #6,A0
00002484  5248                    1171  SORTWONLY   ADDA.W  #1,A0
00002486  5204                    1172              ADD.B   #1,D4
00002488  B83C 0003               1173              CMP.B   #3,D4
0000248C  6C00 0012               1174              BGE     PRTSORTW
00002490  0C10 0020               1175              CMP.B   #SP,(A0)
00002494  67EE                    1176              BEQ     SORTWONLY
00002496  0C10 0000               1177              CMP.B   #NULL,(A0)
0000249A  67E8                    1178              BEQ     SORTWONLY
0000249C  6000 0010               1179              BRA     SORTWCONT
000024A0                          1180              
000024A0  43F8 1354               1181  PRTSORTW    LEA     SORTWMSG,A1
000024A4  103C 000E               1182              MOVE.B  #14,D0
000024A8  4E4F                    1183              TRAP    #15
000024AA  6000 0078               1184              BRA     SORTWDONE
000024AE                          1185  
000024AE  4EB9 00002B4E           1186  SORTWCONT   JSR     ARGV
000024B4  41F8 1060               1187              LEA     CMDBUFFER,A0
000024B8  D0FC 0014               1188              ADDA.W  #INDEX,A0
000024BC                          1189              
000024BC  4EB8 22FA               1190              JSR     CHKDOLLAR
000024C0  B43C 0001               1191              CMP.B   #1,D2
000024C4  6700 005E               1192              BEQ     SORTWDONE
000024C8  2254                    1193              MOVEA.L (A4),A1
000024CA                          1194              
000024CA  41F8 1060               1195              LEA     CMDBUFFER,A0
000024CE  103C 0002               1196              MOVE.B  #2,D0
000024D2  123C 0014               1197              MOVE.B  #INDEX,D1
000024D6  C2C0                    1198              MULU    D0,D1
000024D8  D0C1                    1199              ADDA.W  D1,A0
000024DA                          1200              
000024DA  4EB8 22FA               1201              JSR     CHKDOLLAR
000024DE  B43C 0001               1202              CMP.B   #1,D2
000024E2  6700 0040               1203              BEQ     SORTWDONE
000024E6  2049                    1204              MOVEA.L A1,A0
000024E8  2254                    1205              MOVEA.L (A4),A1
000024EA                          1206              
000024EA  45F8 1060               1207              LEA     CMDBUFFER,A2
000024EE  103C 0003               1208              MOVE.B  #3,D0
000024F2  123C 0014               1209              MOVE.B  #INDEX,D1
000024F6  C2C0                    1210              MULU    D0,D1
000024F8  D4C1                    1211              ADDA.W  D1,A2
000024FA                          1212              
000024FA  0C12 0041               1213              CMP.B   #'A',(A2)
000024FE  6700 0018               1214              BEQ     ASCENDING
00002502                          1215              
00002502  0C12 0044               1216              CMP.B   #'D',(A2)
00002506  6700 0016               1217              BEQ     DESCENDING
0000250A                          1218              
0000250A  43F8 114C               1219              LEA     ERRORMSG,A1
0000250E  103C 000E               1220              MOVE.B  #14,D0
00002512  4E4F                    1221              TRAP    #15
00002514  6000 000E               1222              BRA     SORTWDONE
00002518                          1223              
00002518  7201                    1224  ASCENDING   MOVE.L  #1,D1
0000251A  6000 0004               1225              BRA     BSORT
0000251E                          1226              
0000251E  7200                    1227  DESCENDING  MOVE.L  #0,D1
00002520                          1228              
00002520  4EB8 2446               1229  BSORT       JSR     BUBBLESORT
00002524                          1230          
00002524  4CDF FFFF               1231  SORTWDONE   MOVEM.L (SP)+,A0-A7/D0-D7
00002528  4E75                    1232              RTS
0000252A                          1233  
0000252A                          1234  *-----------------------------------------------------------
0000252A                          1235  * MM Print Loop
0000252A                          1236  * A2 = ptr to beginning memory A3 = ptr to ending memory
0000252A                          1237  * D2 = SIZE OF MEMORY OUTPUT D4 = LENGTH OF OUTPUT
0000252A                          1238  *-----------------------------------------------------------
0000252A  48E7 FFFF               1239  MMPRINT     MOVEM.L A0-A7/D0-D7,-(SP)
0000252E                          1240  
0000252E  2A8A                    1241  INCREMENT2  MOVE.L  A2,(A5)
00002530  584E                    1242              ADDA.W  #4,A6
00002532  4EB9 00002BFE           1243              JSR     HEX2ASCII
00002538                          1244              
00002538  224C                    1245              MOVEA.L A4,A1
0000253A  123C 0008               1246              MOVE.B  #8,D1
0000253E  103C 0001               1247              MOVE.B  #1,D0
00002542  4E4F                    1248              TRAP    #15
00002544                          1249              
00002544  43F8 129D               1250              LEA     SPACE,A1
00002548  103C 000E               1251              MOVE.B  #14,D0
0000254C  4E4F                    1252              TRAP    #15
0000254E                          1253              
0000254E  B43C 0001               1254              CMP.B   #1,D2
00002552  6700 0012               1255              BEQ     BYTEPRINT
00002556                          1256              
00002556  B43C 0002               1257              CMP.B   #2,D2
0000255A  6700 0066               1258              BEQ     WORDPRINT
0000255E                          1259              
0000255E  B43C 0004               1260              CMP.B   #4,D2
00002562  6700 00BA               1261              BEQ     LONGPRINT
00002566                          1262              
00002566  1A92                    1263  BYTEPRINT   MOVE.B  (A2),(A5)
00002568  4DF8 1138               1264              LEA     BUFFER,A6
0000256C  DCC2                    1265              ADDA.W  D2,A6
0000256E  4EB9 00002BFE           1266              JSR     HEX2ASCII
00002574  224C                    1267              MOVEA.L A4,A1
00002576  2206                    1268              MOVE.L  D6,D1  
00002578  103C 0001               1269              MOVE.B  #1,D0
0000257C  4E4F                    1270              TRAP    #15
0000257E                          1271              
0000257E  43F8 129D               1272              LEA     SPACE,A1
00002582  103C 000E               1273              MOVE.B  #14,D0
00002586  4E4F                    1274              TRAP    #15
00002588                          1275              
00002588  43F8 1138               1276              LEA     BUFFER,A1
0000258C  103C 0002               1277              MOVE.B  #2,D0
00002590  4E4F                    1278              TRAP    #15
00002592                          1279              
00002592  0C11 002E               1280              CMPI.B  #'.',(A1)
00002596  6700 00EA               1281              BEQ     MMPRINTDN
0000259A                          1282              
0000259A  B23C 0000               1283              CMP.B   #0,D1
0000259E  6700 001C               1284              BEQ     BYTECONT
000025A2                          1285  
000025A2  B206                    1286              CMP.B   D6,D1
000025A4  6600 00D2               1287              BNE     MMERROR
000025A8                          1288              
000025A8  4BF8 1138               1289              LEA     BUFFER,A5
000025AC  4DF8 1138               1290              LEA     BUFFER,A6
000025B0  DCC6                    1291              ADDA.W  D6,A6
000025B2  4EB9 00002B90           1292              JSR     ASCII2HEX
000025B8  564C                    1293              ADDA.W  #3,A4
000025BA  1494                    1294              MOVE.B  (A4),(A2)
000025BC                          1295              
000025BC  D4C2                    1296  BYTECONT    ADDA.W  D2,A2
000025BE  6000 FF6E               1297              BRA     INCREMENT2
000025C2                          1298              
000025C2  3A92                    1299  WORDPRINT   MOVE.W  (A2),(A5)
000025C4  4DF8 1138               1300              LEA     BUFFER,A6
000025C8  DCC2                    1301              ADDA.W  D2,A6
000025CA  4EB9 00002BFE           1302              JSR     HEX2ASCII
000025D0  224C                    1303              MOVEA.L A4,A1
000025D2  2206                    1304              MOVE.L  D6,D1  
000025D4  103C 0001               1305              MOVE.B  #1,D0
000025D8  4E4F                    1306              TRAP    #15
000025DA                          1307              
000025DA  43F8 129D               1308              LEA     SPACE,A1
000025DE  103C 000E               1309              MOVE.B  #14,D0
000025E2  4E4F                    1310              TRAP    #15
000025E4                          1311              
000025E4  43F8 1138               1312              LEA     BUFFER,A1
000025E8  103C 0002               1313              MOVE.B  #2,D0
000025EC  4E4F                    1314              TRAP    #15
000025EE                          1315              
000025EE  0C11 002E               1316              CMPI.B  #'.',(A1)
000025F2  6700 008E               1317              BEQ     MMPRINTDN
000025F6                          1318  
000025F6  B23C 0000               1319              CMP.B   #0,D1
000025FA  6700 001C               1320              BEQ     WORDCONT    
000025FE                          1321  
000025FE  B206                    1322              CMP.B   D6,D1
00002600  6600 0076               1323              BNE     MMERROR
00002604                          1324              
00002604  4BF8 1138               1325              LEA     BUFFER,A5
00002608  4DF8 1138               1326              LEA     BUFFER,A6
0000260C  DCC6                    1327              ADDA.W  D6,A6
0000260E  4EB9 00002B90           1328              JSR     ASCII2HEX
00002614  544C                    1329              ADDA.W  #2,A4
00002616  3494                    1330              MOVE.W (A4),(A2)
00002618                          1331              
00002618  D4C2                    1332  WORDCONT    ADDA.W  D2,A2
0000261A  6000 FF12               1333              BRA     INCREMENT2
0000261E                          1334              
0000261E  2A92                    1335  LONGPRINT   MOVE.L  (A2),(A5)
00002620  4DF8 1138               1336              LEA     BUFFER,A6
00002624  DCC2                    1337              ADDA.W  D2,A6
00002626  4EB9 00002BFE           1338              JSR     HEX2ASCII
0000262C  224C                    1339              MOVEA.L A4,A1
0000262E  2206                    1340              MOVE.L  D6,D1  
00002630  103C 0001               1341              MOVE.B  #1,D0
00002634  4E4F                    1342              TRAP    #15
00002636                          1343              
00002636  43F8 129D               1344              LEA     SPACE,A1
0000263A  103C 000E               1345              MOVE.B  #14,D0
0000263E  4E4F                    1346              TRAP    #15
00002640                          1347              
00002640  43F8 1138               1348              LEA     BUFFER,A1
00002644  103C 0002               1349              MOVE.B  #2,D0
00002648  4E4F                    1350              TRAP    #15
0000264A                          1351              
0000264A  0C11 002E               1352              CMPI.B  #'.',(A1)
0000264E  6700 0032               1353              BEQ     MMPRINTDN
00002652                          1354              
00002652  B23C 0000               1355              CMP.B   #0,D1
00002656  6700 001A               1356              BEQ     LONGCONT
0000265A                          1357          
0000265A  B206                    1358              CMP.B   D6,D1
0000265C  6600 001A               1359              BNE     MMERROR
00002660                          1360              
00002660  4BF8 1138               1361              LEA     BUFFER,A5
00002664  4DF8 1138               1362              LEA     BUFFER,A6
00002668  DCC6                    1363              ADDA.W  D6,A6
0000266A  4EB9 00002B90           1364              JSR     ASCII2HEX
00002670  2494                    1365              MOVE.L  (A4),(A2)
00002672                          1366              
00002672  D4C2                    1367  LONGCONT    ADDA.W  D2,A2
00002674  6000 FEB8               1368              BRA     INCREMENT2
00002678                          1369  
00002678  43F8 114C               1370  MMERROR     LEA     ERRORMSG,A1
0000267C  103C 000E               1371              MOVE.B  #14,D0
00002680  4E4F                    1372              TRAP    #15    
00002682                          1373              
00002682  4CDF FFFF               1374  MMPRINTDN   MOVEM.L (SP)+,A0-A7/D0-D7
00002686  4E75                    1375              RTS
00002688                          1376  
00002688                          1377  
00002688                          1378  *-----------------------------------------------------------
00002688                          1379  * MM (Memory Modify) - MM (Memory Modify) command is used to display memory and,
00002688                          1380  * as required, modify data or enter new data. The size (bye, word, long word) controls
00002688                          1381  * the number of bytes displayed for each address.
00002688                          1382  *
00002688                          1383  *-----------------------------------------------------------
00002688  48E7 FFFF               1384  MM          MOVEM.L A0-A7/D0-D7,-(SP)
0000268C                          1385  
0000268C  41F8 1010               1386              LEA     INPUTBUFFER,A0
00002690  5648                    1387              ADDA.W  #3,A0
00002692  5248                    1388  MMONLY      ADDA.W  #1,A0
00002694  5204                    1389              ADD.B   #1,D4
00002696  B83C 0003               1390              CMP.B   #3,D4
0000269A  6C00 0012               1391              BGE     PRTMM
0000269E  0C10 0020               1392              CMP.B   #SP,(A0)
000026A2  67EE                    1393              BEQ     MMONLY
000026A4  0C10 0000               1394              CMP.B   #NULL,(A0)
000026A8  67E8                    1395              BEQ     MMONLY
000026AA  6000 0010               1396              BRA     MMCONT
000026AE                          1397              
000026AE  43F8 140E               1398  PRTMM       LEA     MMMSG,A1
000026B2  103C 000E               1399              MOVE.B  #14,D0
000026B6  4E4F                    1400              TRAP    #15
000026B8  6000 0092               1401              BRA     MMDONE
000026BC                          1402  
000026BC  4EB9 00002B4E           1403  MMCONT      JSR     ARGV
000026C2  41F8 1060               1404              LEA     CMDBUFFER,A0
000026C6  D0FC 0014               1405              ADDA.W  #INDEX,A0
000026CA                          1406              
000026CA  4EB8 22FA               1407              JSR     CHKDOLLAR
000026CE  B43C 0001               1408              CMP.B   #1,D2
000026D2  6700 0078               1409              BEQ     MMDONE
000026D6  2254                    1410              MOVEA.L (A4),A1
000026D8                          1411              
000026D8  45F8 1060               1412              LEA     CMDBUFFER,A2
000026DC  103C 0002               1413              MOVE.B  #2,D0
000026E0  123C 0014               1414              MOVE.B  #INDEX,D1
000026E4  C2C0                    1415              MULU    D0,D1
000026E6  D4C1                    1416              ADDA.W  D1,A2
000026E8                          1417              
000026E8  0C12 0042               1418              CMP.B   #'B',(A2)
000026EC  6700 0020               1419              BEQ     BYTE
000026F0                          1420              
000026F0  0C12 0057               1421              CMP.B   #'W',(A2)
000026F4  6700 002E               1422              BEQ     WORD
000026F8                          1423              
000026F8  0C12 004C               1424              CMP.B   #'L',(A2)
000026FC  6700 003C               1425              BEQ     LONG
00002700                          1426              
00002700  43F8 114C               1427              LEA     ERRORMSG,A1
00002704  103C 000E               1428              MOVE.B  #14,D0
00002708  4E4F                    1429              TRAP    #15
0000270A  6000 0040               1430              BRA     MMDONE
0000270E                          1431              
0000270E  7401                    1432  BYTE        MOVE.L  #1,D2
00002710  7C02                    1433              MOVE.L  #2,D6
00002712  2449                    1434              MOVEA.L A1,A2
00002714  4BF8 1138               1435              LEA     BUFFER,A5
00002718  4DF8 1138               1436              LEA     BUFFER,A6
0000271C  4EB8 252A               1437              JSR     MMPRINT
00002720  6000 002A               1438              BRA     MMDONE
00002724                          1439              
00002724  7402                    1440  WORD        MOVE.L  #2,D2
00002726  7C04                    1441              MOVE.L  #4,D6
00002728  2449                    1442              MOVEA.L A1,A2
0000272A  4BF8 1138               1443              LEA     BUFFER,A5
0000272E  4DF8 1138               1444              LEA     BUFFER,A6
00002732  4EB8 252A               1445              JSR     MMPRINT
00002736  6000 0014               1446              BRA     MMDONE
0000273A                          1447              
0000273A  7404                    1448  LONG        MOVE.L  #4,D2
0000273C  7C08                    1449              MOVE.L  #8,D6
0000273E  2449                    1450              MOVEA.L A1,A2
00002740  4BF8 1138               1451              LEA     BUFFER,A5
00002744  4DF8 1138               1452              LEA     BUFFER,A6
00002748  4EB8 252A               1453              JSR     MMPRINT
0000274C                          1454  
0000274C  4CDF FFFF               1455  MMDONE      MOVEM.L (SP)+,A0-A7/D0-D7
00002750  4E75                    1456              RTS
00002752                          1457  
00002752                          1458  *-----------------------------------------------------------
00002752                          1459  * MS (Memory Set) - The Memory Set (MS) command alters memory by setting data into
00002752                          1460  * the address specified. The data can take the form of ASCII string or hexadecimal
00002752                          1461  * data.
00002752                          1462  *
00002752                          1463  *-----------------------------------------------------------
00002752  48E7 FFFF               1464  MS          MOVEM.L A0-A7/D0-D7,-(SP)
00002756                          1465  
00002756  41F8 1010               1466              LEA     INPUTBUFFER,A0
0000275A  5648                    1467              ADDA.W  #3,A0
0000275C  5248                    1468  MSONLY      ADDA.W  #1,A0
0000275E  5204                    1469              ADD.B   #1,D4
00002760  B83C 0003               1470              CMP.B   #3,D4
00002764  6C00 0012               1471              BGE     PRTMS
00002768  0C10 0020               1472              CMP.B   #SP,(A0)
0000276C  67EE                    1473              BEQ     MSONLY
0000276E  0C10 0000               1474              CMP.B   #NULL,(A0)
00002772  67E8                    1475              BEQ     MSONLY
00002774  6000 0010               1476              BRA     MSCONT
00002778                          1477              
00002778  43F8 14B4               1478  PRTMS       LEA     MSMSG,A1
0000277C  103C 000E               1479              MOVE.B  #14,D0
00002780  4E4F                    1480              TRAP    #15
00002782  6000 007E               1481              BRA     MSDONE
00002786                          1482  
00002786  4EB9 00002B4E           1483  MSCONT      JSR     ARGV
0000278C  41F8 1060               1484              LEA     CMDBUFFER,A0
00002790  D0FC 0014               1485              ADDA.W  #INDEX,A0
00002794                          1486              
00002794  4EB8 22FA               1487              JSR     CHKDOLLAR
00002798  B83C 0001               1488              CMP.B   #1,D4
0000279C  6700 005A               1489              BEQ     MSERROR
000027A0  B43C 0001               1490              CMP.B   #1,D2
000027A4  6700 005C               1491              BEQ     MSDONE
000027A8  2454                    1492              MOVEA.L (A4),A2
000027AA                          1493              
000027AA  41F8 1060               1494              LEA     CMDBUFFER,A0
000027AE  103C 0002               1495              MOVE.B  #2,D0
000027B2  123C 0014               1496              MOVE.B  #INDEX,D1
000027B6  C2C0                    1497              MULU    D0,D1
000027B8  D0C1                    1498              ADDA.W  D1,A0
000027BA                          1499              
000027BA  4EB8 22FA               1500              JSR     CHKDOLLAR
000027BE  B83C 0001               1501              CMP.B   #1,D4
000027C2  6700 001A               1502              BEQ     ASCIIDATA
000027C6  B43C 0001               1503              CMP.B   #1,D2
000027CA  6700 0036               1504              BEQ     MSDONE
000027CE  2049                    1505              MOVEA.L A1,A0
000027D0  0C1C 0000               1506  INCPTR      CMP.B   #NULL,(A4)+
000027D4  67FA                    1507              BEQ     INCPTR
000027D6  534C                    1508              SUBA.W  #1,A4
000027D8  2494                    1509              MOVE.L  (A4),(A2)
000027DA                          1510              
000027DA  6000 0026               1511              BRA     MSDONE
000027DE                          1512              
000027DE  43F8 11A5               1513  ASCIIDATA   LEA     STOREDATA,A1
000027E2  103C 000E               1514              MOVE.B  #14,D0
000027E6  4E4F                    1515              TRAP    #15
000027E8                          1516  
000027E8  0C10 0000               1517  DATALOOP    CMP.B   #NULL,(A0)
000027EC  6700 0014               1518              BEQ     MSDONE
000027F0  14D8                    1519              MOVE.B  (A0)+,(A2)+
000027F2  60F4                    1520              BRA     DATALOOP
000027F4                          1521              
000027F4  6000 000C               1522              BRA     MSDONE
000027F8                          1523              
000027F8  43F8 114C               1524  MSERROR     LEA     ERRORMSG,A1
000027FC  103C 000E               1525              MOVE.B  #14,D0
00002800  4E4F                    1526              TRAP    #15
00002802                          1527          
00002802  4CDF FFFF               1528  MSDONE      MOVEM.L (SP)+,A0-A7/D0-D7
00002806  4E75                    1529              RTS
00002808                          1530  
00002808                          1531  *-----------------------------------------------------------
00002808                          1532  * BF (Block Fill) - The Block Fill (BF) command fills memory starting with the word
00002808                          1533  * boundary <address1> through <address2>. Both <address1> and <address2> must be even
00002808                          1534  * addresses. This command only fills with a word-size (2 bytes) data pattern. If an entire
00002808                          1535  * word-size data pattern is not entered, the pattern is right justified and leading zeros are inserted.
00002808                          1536  *-----------------------------------------------------------
00002808  48E7 FFFF               1537  BF          MOVEM.L A0-A7/D0-D7,-(SP)
0000280C                          1538              
0000280C  41F8 1010               1539              LEA     INPUTBUFFER,A0
00002810  5648                    1540              ADDA.W  #3,A0
00002812  5248                    1541  BFONLY      ADDA.W  #1,A0
00002814  5204                    1542              ADD.B   #1,D4
00002816  B83C 0003               1543              CMP.B   #3,D4
0000281A  6C00 0012               1544              BGE     PRTBF
0000281E  0C10 0020               1545              CMP.B   #SP,(A0)
00002822  67EE                    1546              BEQ     BFONLY
00002824  0C10 0000               1547              CMP.B   #NULL,(A0)
00002828  67E8                    1548              BEQ     BFONLY
0000282A  6000 0010               1549              BRA     BFCONT
0000282E                          1550              
0000282E  43F8 14FB               1551  PRTBF       LEA     BFMSG,A1
00002832  103C 000E               1552              MOVE.B  #14,D0
00002836  4E4F                    1553              TRAP    #15
00002838  6000 00C2               1554              BRA     BFDONE
0000283C                          1555  
0000283C  4286                    1556  BFCONT      CLR.L   D6
0000283E  4EB9 00002B4E           1557              JSR     ARGV
00002844  41F8 1060               1558              LEA     CMDBUFFER,A0
00002848  D0FC 0014               1559              ADDA.W  #INDEX,A0
0000284C                          1560              
0000284C  4EB8 22FA               1561              JSR     CHKDOLLAR
00002850  B43C 0001               1562              CMP.B   #1,D2
00002854  6700 00A6               1563              BEQ     BFDONE
00002858  2254                    1564              MOVEA.L (A4),A1
0000285A                          1565              
0000285A  2409                    1566              MOVE.L  A1,D2
0000285C  84FC 0002               1567              DIVU    #2,D2
00002860  4842                    1568              SWAP    D2
00002862  B47C 0000               1569              CMP.W   #0,D2
00002866  6600 007A               1570              BNE     ODDADDR1
0000286A                          1571              
0000286A  41F8 1060               1572  CHKADDR2    LEA     CMDBUFFER,A0
0000286E  103C 0002               1573              MOVE.B  #2,D0
00002872  123C 0014               1574              MOVE.B  #INDEX,D1
00002876  C2C0                    1575              MULU    D0,D1
00002878  D0C1                    1576              ADDA.W  D1,A0
0000287A                          1577              
0000287A  4EB8 22FA               1578              JSR     CHKDOLLAR
0000287E  B43C 0001               1579              CMP.B   #1,D2
00002882  6700 0078               1580              BEQ     BFDONE
00002886  2454                    1581              MOVEA.L (A4),A2
00002888                          1582              
00002888  240A                    1583              MOVE.L  A2,D2
0000288A  84FC 0002               1584              DIVU    #2,D2
0000288E  4842                    1585              SWAP    D2
00002890  B47C 0000               1586              CMP.W   #0,D2
00002894  6600 005C               1587              BNE     ODDADDR2
00002898                          1588              
00002898  BC3C 0001               1589              CMP.B   #1,D6
0000289C  6700 005E               1590              BEQ     BFDONE
000028A0                          1591              
000028A0  41F8 1060               1592              LEA     CMDBUFFER,A0
000028A4  103C 0003               1593              MOVE.B  #3,D0
000028A8  123C 0014               1594              MOVE.B  #INDEX,D1
000028AC  C2C0                    1595              MULU    D0,D1
000028AE  D0C1                    1596              ADDA.W  D1,A0
000028B0                          1597              
000028B0  4EB8 22FA               1598              JSR     CHKDOLLAR
000028B4  B43C 0001               1599              CMP.B   #1,D2
000028B8  6700 0042               1600              BEQ     BFDONE
000028BC  2654                    1601              MOVEA.L (A4),A3
000028BE                          1602              
000028BE  BA3C 0004               1603              CMP.B   #4,D5
000028C2  6700 0006               1604              BEQ     FILLLOOP
000028C6  6E00 000C               1605              BGT     DATALONG
000028CA                          1606          
000028CA  32CB                    1607  FILLLOOP    MOVE.W  A3,(A1)+
000028CC  B5C9                    1608              CMP.L   A1,A2
000028CE  66FA                    1609              BNE     FILLLOOP
000028D0  6000 002A               1610              BRA     BFDONE
000028D4                          1611              
000028D4  43F8 1206               1612  DATALONG    LEA     DATALONGMSG,A1
000028D8  103C 000E               1613              MOVE.B  #14,D0
000028DC  4E4F                    1614              TRAP    #15
000028DE  6000 001C               1615              BRA     BFDONE
000028E2                          1616  
000028E2  7C01                    1617  ODDADDR1    MOVE.L  #1,D6
000028E4  43F8 11BE               1618              LEA     ODDADDRMSG1,A1
000028E8  103C 000E               1619              MOVE.B  #14,D0
000028EC  4E4F                    1620              TRAP    #15
000028EE  6000 FF7A               1621              BRA     CHKADDR2
000028F2                          1622              
000028F2  43F8 11E2               1623  ODDADDR2    LEA     ODDADDRMSG2,A1
000028F6  103C 000E               1624              MOVE.B  #14,D0
000028FA  4E4F                    1625              TRAP    #15           
000028FC                          1626                  
000028FC  4CDF FFFF               1627  BFDONE      MOVEM.L (SP)+,A0-A7/D0-D7
00002900  4E75                    1628              RTS
00002902                          1629  
00002902                          1630  *-----------------------------------------------------------
00002902                          1631  * BMOV (Block Move) - The Block Move (BMOV) command is used to move (duplicate) blocks
00002902                          1632  * of memory from one area to another.
00002902                          1633  *
00002902                          1634  *
00002902                          1635  *-----------------------------------------------------------
00002902  48E7 FFFF               1636  BMOV        MOVEM.L A0-A7/D0-D7,-(SP)
00002906                          1637  
00002906  41F8 1010               1638              LEA     INPUTBUFFER,A0
0000290A  5A48                    1639              ADDA.W  #5,A0
0000290C  5248                    1640  BMOVONLY    ADDA.W  #1,A0
0000290E  5204                    1641              ADD.B   #1,D4
00002910  B83C 0003               1642              CMP.B   #3,D4
00002914  6C00 0012               1643              BGE     PRTBMOV
00002918  0C10 0020               1644              CMP.B   #SP,(A0)
0000291C  67EE                    1645              BEQ     BMOVONLY    
0000291E  0C10 0000               1646              CMP.B   #NULL,(A0)
00002922  67E8                    1647              BEQ     BMOVONLY
00002924  6000 0010               1648              BRA     BMOVCONT
00002928                          1649              
00002928  43F8 155D               1650  PRTBMOV     LEA     BMOVMSG,A1
0000292C  103C 000E               1651              MOVE.B  #14,D0
00002930  4E4F                    1652              TRAP    #15
00002932  6000 0060               1653              BRA     BMOVDONE
00002936                          1654  
00002936  4EB9 00002B4E           1655  BMOVCONT    JSR     ARGV
0000293C  41F8 1060               1656              LEA     CMDBUFFER,A0
00002940  D0FC 0014               1657              ADDA.W  #INDEX,A0
00002944                          1658              
00002944  4EB8 22FA               1659              JSR     CHKDOLLAR
00002948  B43C 0001               1660              CMP.B   #1,D2
0000294C  6700 0046               1661              BEQ     BMOVDONE
00002950  2254                    1662              MOVEA.L (A4),A1
00002952                          1663              
00002952  41F8 1060               1664              LEA     CMDBUFFER,A0
00002956  103C 0002               1665              MOVE.B  #2,D0
0000295A  123C 0014               1666              MOVE.B  #INDEX,D1
0000295E  C2C0                    1667              MULU    D0,D1
00002960  D0C1                    1668              ADDA.W  D1,A0
00002962                          1669              
00002962  4EB8 22FA               1670              JSR     CHKDOLLAR
00002966  B43C 0001               1671              CMP.B   #1,D2
0000296A  6700 0028               1672              BEQ     BMOVDONE
0000296E  2454                    1673              MOVEA.L (A4),A2
00002970                          1674              
00002970  41F8 1060               1675              LEA     CMDBUFFER,A0
00002974  103C 0003               1676              MOVE.B  #3,D0
00002978  123C 0014               1677              MOVE.B  #INDEX,D1
0000297C  C2C0                    1678              MULU    D0,D1
0000297E  D0C1                    1679              ADDA.W  D1,A0
00002980                          1680              
00002980  4EB8 22FA               1681              JSR     CHKDOLLAR
00002984  B43C 0001               1682              CMP.B   #1,D2
00002988  6700 000A               1683              BEQ     BMOVDONE
0000298C  2654                    1684              MOVEA.L (A4),A3
0000298E                          1685              
0000298E  16D9                    1686  BMOVLOOP    MOVE.B  (A1)+,(A3)+
00002990  B5C9                    1687              CMP.L   A1,A2
00002992  66FA                    1688              BNE     BMOVLOOP
00002994                          1689          
00002994  4CDF FFFF               1690  BMOVDONE    MOVEM.L (SP)+,A0-A7/D0-D7
00002998  4E75                    1691              RTS
0000299A                          1692  
0000299A                          1693  *-----------------------------------------------------------
0000299A                          1694  * BTST (Block Test) - The Block Test (BT) command is a destructive test of a block of memory
0000299A                          1695  * beginning at <address1> through <address2>. If this test runs to completion without detecting
0000299A                          1696  * errors, and display a message that no error was detected. If memory problems are found, a message
0000299A                          1697  * is displayed indicating the address, the data stored, and the data read of the failing memory.
0000299A                          1698  *-----------------------------------------------------------
0000299A  48E7 FFFF               1699  BTST        MOVEM.L A0-A7/D0-D7,-(SP)
0000299E                          1700          
0000299E  41F8 1010               1701              LEA     INPUTBUFFER,A0
000029A2  5A48                    1702              ADDA.W  #5,A0
000029A4  5248                    1703  BTSTONLY    ADDA.W  #1,A0
000029A6  5204                    1704              ADD.B   #1,D4
000029A8  B83C 0003               1705              CMP.B   #3,D4
000029AC  6C00 0012               1706              BGE     PRTBTST
000029B0  0C10 0020               1707              CMP.B   #SP,(A0)
000029B4  67EE                    1708              BEQ     BTSTONLY
000029B6  0C10 0000               1709              CMP.B   #NULL,(A0)
000029BA  67E8                    1710              BEQ     BTSTONLY
000029BC  6000 0010               1711              BRA     BTSTCONT
000029C0                          1712              
000029C0  43F8 15D9               1713  PRTBTST     LEA     BTSTMSG,A1
000029C4  103C 000E               1714              MOVE.B  #14,D0
000029C8  4E4F                    1715              TRAP    #15
000029CA  6000 00EE               1716              BRA     BTSTDONE
000029CE                          1717  
000029CE  4EB9 00002B4E           1718  BTSTCONT    JSR     ARGV
000029D4  41F8 1060               1719              LEA     CMDBUFFER,A0
000029D8  D0FC 0014               1720              ADDA.W  #INDEX,A0
000029DC                          1721              
000029DC  4EB8 22FA               1722              JSR     CHKDOLLAR
000029E0  B43C 0001               1723              CMP.B   #1,D2
000029E4  67AE                    1724              BEQ     BMOVDONE
000029E6  2254                    1725              MOVEA.L (A4),A1
000029E8  2654                    1726              MOVEA.L (A4),A3
000029EA                          1727              
000029EA  41F8 1060               1728              LEA     CMDBUFFER,A0
000029EE  103C 0002               1729              MOVE.B  #2,D0
000029F2  123C 0014               1730              MOVE.B  #INDEX,D1
000029F6  C2C0                    1731              MULU    D0,D1
000029F8  D0C1                    1732              ADDA.W  D1,A0
000029FA                          1733              
000029FA  4EB8 22FA               1734              JSR     CHKDOLLAR
000029FE  B43C 0001               1735              CMP.B   #1,D2
00002A02  6790                    1736              BEQ     BMOVDONE
00002A04  2454                    1737              MOVEA.L (A4),A2
00002A06                          1738              
00002A06  12FC 00AA               1739  BTSTLOOP    MOVE.B  #TESTVAL1,(A1)+
00002A0A  B5C9                    1740              CMP.L   A1,A2
00002A0C  66F8                    1741              BNE     BTSTLOOP
00002A0E                          1742              
00002A0E  0C13 00AA               1743  MEMCHKLP    CMP.B   #TESTVAL1,(A3)
00002A12  6600 0030               1744              BNE     ERRORDETECT
00002A16                          1745           
00002A16  43F8 125D               1746              LEA     MEMSUCCESS,A1
00002A1A  103C 000E               1747              MOVE.B  #14,D0
00002A1E  4E4F                    1748              TRAP    #15
00002A20  4BF8 1138               1749              LEA     BUFFER,A5
00002A24  4DF8 1138               1750              LEA     BUFFER,A6
00002A28  2A8B                    1751              MOVE.L  A3,(A5)
00002A2A  584E                    1752              ADDA.W  #4,A6
00002A2C  4EB9 00002BFE           1753              JSR     HEX2ASCII
00002A32  224C                    1754              MOVEA.L A4,A1
00002A34  103C 000D               1755              MOVE.B  #13,D0
00002A38  4E4F                    1756              TRAP    #15
00002A3A                          1757              
00002A3A  524B                    1758              ADDA.W  #1,A3
00002A3C  B5CB                    1759              CMP.L   A3,A2
00002A3E  66CE                    1760              BNE     MEMCHKLP
00002A40  6000 0078               1761              BRA     BTSTDONE
00002A44                          1762              
00002A44  43F8 1243               1763  ERRORDETECT LEA     MEMERROR,A1
00002A48  103C 000E               1764              MOVE.B  #14,D0
00002A4C  4E4F                    1765              TRAP    #15
00002A4E  4BF8 1138               1766              LEA     BUFFER,A5
00002A52  4DF8 1138               1767              LEA     BUFFER,A6
00002A56  2A8B                    1768              MOVE.L  A3,(A5)
00002A58  584E                    1769              ADDA.W  #4,A6
00002A5A  4EB9 00002BFE           1770              JSR     HEX2ASCII
00002A60  224C                    1771              MOVEA.L A4,A1
00002A62  103C 000D               1772              MOVE.B  #13,D0
00002A66  4E4F                    1773              TRAP    #15
00002A68                          1774              
00002A68  43F8 1283               1775              LEA     DATASTORED,A1
00002A6C  103C 000E               1776              MOVE.B  #14,D0
00002A70  4E4F                    1777              TRAP    #15
00002A72                          1778              
00002A72  4BF8 1138               1779              LEA     BUFFER,A5
00002A76  4DF8 1138               1780              LEA     BUFFER,A6
00002A7A  1ABC 00AA               1781              MOVE.B  #TESTVAL1,(A5)
00002A7E  524E                    1782              ADDA.W  #1,A6
00002A80  4EB9 00002BFE           1783              JSR     HEX2ASCII
00002A86  224C                    1784              MOVEA.L A4,A1
00002A88  103C 000D               1785              MOVE.B  #13,D0
00002A8C  4E4F                    1786              TRAP    #15
00002A8E                          1787              
00002A8E  43F8 1291               1788              LEA     DATAREAD,A1
00002A92  103C 000E               1789              MOVE.B  #14,D0
00002A96  4E4F                    1790              TRAP    #15
00002A98                          1791              
00002A98  4BF8 1138               1792              LEA     BUFFER,A5
00002A9C  4DF8 1138               1793              LEA     BUFFER,A6
00002AA0  1A93                    1794              MOVE.B  (A3),(A5)
00002AA2  524E                    1795              ADDA.W  #1,A6
00002AA4  4EB9 00002BFE           1796              JSR     HEX2ASCII
00002AAA  224C                    1797              MOVEA.L A4,A1
00002AAC  103C 000D               1798              MOVE.B  #13,D0
00002AB0  4E4F                    1799              TRAP    #15
00002AB2                          1800              
00002AB2  528B                    1801              ADDA.L  #1,A3
00002AB4  B5CB                    1802              CMP.L   A3,A2
00002AB6  6600 FF56               1803              BNE     MEMCHKLP
00002ABA                          1804          
00002ABA  4CDF FFFF               1805  BTSTDONE    MOVEM.L (SP)+,A0-A7/D0-D7
00002ABE  4E75                    1806              RTS
00002AC0                          1807  
00002AC0                          1808  *-----------------------------------------------------------
00002AC0                          1809  * BSCH (Block Search) - The BSCH (Block Search) command is used to search a literal string in a 
00002AC0                          1810  * memory block starting at <address1> through <address2> both inclusive. In BSCH command, if search
00002AC0                          1811  * finds matching data, the data and address(es) must be displayed.
00002AC0                          1812  *
00002AC0                          1813  *-----------------------------------------------------------
00002AC0  48E7 FFFF               1814  BSCH        MOVEM.L A0-A7/D0-D7,-(SP)
00002AC4                          1815  
00002AC4  41F8 1010               1816              LEA     INPUTBUFFER,A0
00002AC8  5A48                    1817              ADDA.W  #5,A0
00002ACA  5248                    1818  BSCHONLY    ADDA.W  #1,A0
00002ACC  5204                    1819              ADD.B   #1,D4
00002ACE  B83C 0003               1820              CMP.B   #3,D4
00002AD2  6C00 0012               1821              BGE     PRTBSCH
00002AD6  0C10 0020               1822              CMP.B   #SP,(A0)
00002ADA  67EE                    1823              BEQ     BSCHONLY
00002ADC  0C10 0000               1824              CMP.B   #NULL,(A0)
00002AE0  67E8                    1825              BEQ     BSCHONLY
00002AE2  6000 0010               1826              BRA     BSCHCONT
00002AE6                          1827              
00002AE6  43F8 15F4               1828  PRTBSCH     LEA     BSCHMSG,A1
00002AEA  103C 000E               1829              MOVE.B  #14,D0
00002AEE  4E4F                    1830              TRAP    #15
00002AF0  6000 0002               1831              BRA     BSCHDONE
00002AF4                          1832  
00002AF4                          1833  BSCHCONT
00002AF4                          1834          
00002AF4  4CDF FFFF               1835  BSCHDONE    MOVEM.L (SP)+,A0-A7/D0-D7
00002AF8  4E75                    1836              RTS
00002AFA                          1837  
00002AFA                          1838  *-----------------------------------------------------------
00002AFA                          1839  * GO (Execute Program) - The GO command is used to start execution from a given address.
00002AFA                          1840  *
00002AFA                          1841  *
00002AFA                          1842  *
00002AFA                          1843  *-----------------------------------------------------------
00002AFA  48E7 FFFF               1844  GO          MOVEM.L A0-A7/D0-D7,-(SP)
00002AFE                          1845  
00002AFE  41F8 1010               1846              LEA     INPUTBUFFER,A0
00002B02  5648                    1847              ADDA.W  #3,A0
00002B04  5248                    1848  GOONLY      ADDA.W  #1,A0
00002B06  5204                    1849              ADD.B   #1,D4
00002B08  B83C 0003               1850              CMP.B   #3,D4
00002B0C  6C00 0012               1851              BGE     PRTGO
00002B10  0C10 0020               1852              CMP.B   #SP,(A0)
00002B14  67EE                    1853              BEQ     GOONLY
00002B16  0C10 0000               1854              CMP.B   #NULL,(A0)
00002B1A  67E8                    1855              BEQ     GOONLY
00002B1C  6000 0010               1856              BRA     GOCONT
00002B20                          1857              
00002B20  43F8 1679               1858  PRTGO       LEA     GOMSG,A1
00002B24  103C 000E               1859              MOVE.B  #14,D0
00002B28  4E4F                    1860              TRAP    #15
00002B2A  6000 0002               1861              BRA     GODONE
00002B2E                          1862  
00002B2E                          1863  GOCONT
00002B2E                          1864          
00002B2E  4CDF FFFF               1865  GODONE      MOVEM.L (SP)+,A0-A7/D0-D7
00002B32  4E75                    1866              RTS
00002B34                          1867  
00002B34                          1868  *-----------------------------------------------------------
00002B34                          1869  * DF (Display Formatted Registers) - The Display Formatted Registers (DF) command is used
00002B34                          1870  * to display the MC68000 processor registers. This command should display current PC, SR, US,
00002B34                          1871  * SS and D, A registers. Note that since your program will be using D and A registers, those 
00002B34                          1872  * changed values should not be shown to the user. Thus, you must save all D and A register
00002B34                          1873  * values before any of your subroutines.
00002B34                          1874  *-----------------------------------------------------------
00002B34  48E7 FFFF               1875  DF          MOVEM.L A0-A7/D0-D7,-(SP)
00002B38                          1876  
00002B38                          1877  *            LEA     INPUTBUFFER,A0
00002B38                          1878  *            ADDA.W  #3,A0
00002B38                          1879  *DFONLY      ADDA.W  #1,A0
00002B38                          1880  *            ADD.B   #1,D4
00002B38                          1881  *            CMP.B   #3,D4
00002B38                          1882  *            BGE     PRTDF
00002B38                          1883  *            CMP.B   #SP,(A0)
00002B38                          1884  *            BEQ     MDSPONLY
00002B38                          1885  *            CMP.B   #NULL,(A0)
00002B38                          1886  *            BEQ     DFONLY
00002B38                          1887  *            BRA     DFCONT
00002B38                          1888              
00002B38                          1889  *PRTDF       LEA     DFMSG,A1
00002B38                          1890  *            MOVE.B  #14,D0
00002B38                          1891  *            TRAP    #15
00002B38                          1892  *            BRA     DFDONE
00002B38                          1893  
00002B38                          1894  *DFCONT
00002B38                          1895          
00002B38  4CDF FFFF               1896  DFDONE      MOVEM.L (SP)+,A0-A7/D0-D7
00002B3C  4E75                    1897              RTS
00002B3E                          1898  
00002B3E                          1899  *-----------------------------------------------------------
00002B3E                          1900  * EXIT (Exit Monitor Program) - The EXIT command terminates/exits your Monitor program.
00002B3E                          1901  *
00002B3E                          1902  *
00002B3E                          1903  *
00002B3E                          1904  *-----------------------------------------------------------
00002B3E  48E7 FFFF               1905  EXIT        MOVEM.L A0-A7/D0-D7,-(SP)
00002B42                          1906  
00002B42                          1907  *            LEA     INPUTBUFFER,A0
00002B42                          1908  *            ADDA.W  #5,A0
00002B42                          1909  *EXITONLY    ADDA.W  #1,A0 
00002B42                          1910  *            ADD.B   #1,D4
00002B42                          1911  *            CMP.B   #3,D4
00002B42                          1912  *            BGE     PRTEXIT
00002B42                          1913  *            CMP.B   #SP,(A0)
00002B42                          1914  *            BEQ     EXITONLY
00002B42                          1915  *            CMP.B   #NULL,(A0)
00002B42                          1916  *            BEQ     EXITONLY
00002B42                          1917  *            BRA     EXITCONT
00002B42                          1918              
00002B42                          1919  *PRTEXIT     LEA     EXITMSG,A1
00002B42                          1920  *            MOVE.B  #14,D0
00002B42                          1921  *            TRAP    #15
00002B42                          1922  *            BRA     EXITDONE
00002B42                          1923  
00002B42                          1924  *EXITCONT    
00002B42  103C 0009               1925              MOVE.B  #9,D0
00002B46  4E4F                    1926              TRAP    #15
00002B48                          1927          
00002B48  4CDF FFFF               1928  EXITDONE    MOVEM.L (SP)+,A0-A7/D0-D7
00002B4C  4E75                    1929              RTS
00002B4E                          1930          
00002B4E                          1931  *-----------------------------------------------------------
00002B4E                          1932  * ARGV Command Line Parsing Subroutine
00002B4E                          1933  * Stores Commands separated by INDEX (12) in memory starting at CMDBUFFER
00002B4E                          1934  * D2 = # of Arguments
00002B4E                          1935  *-----------------------------------------------------------
00002B4E                          1936  
00002B4E  48E7 DFFF               1937  ARGV        MOVEM.L A0-A7/D0-D1/D3-D7,-(SP)
00002B52                          1938  
00002B52  41F8 1010               1939              LEA     INPUTBUFFER,A0
00002B56  43F8 1060               1940              LEA     CMDBUFFER,A1
00002B5A  45F8 1060               1941              LEA     CMDBUFFER,A2
00002B5E  4282                    1942              CLR.L   D2
00002B60  12D0                    1943  CHECKLOOP   MOVE.B  (A0),(A1)+
00002B62  0C10 0020               1944              CMPI.B  #SP,(A0)
00002B66  6700 000C               1945              BEQ     SPFOUND
00002B6A  0C18 0000               1946              CMPI.B  #NULL,(A0)+
00002B6E  6700 0018               1947              BEQ     NULLFOUND
00002B72  60EC                    1948              BRA     CHECKLOOP
00002B74                          1949                       
00002B74  5349                    1950  SPFOUND     SUBA.W  #1,A1
00002B76  12BC 0000               1951              MOVE.B  #NULL,(A1)
00002B7A  5249                    1952              ADDA.W  #1,A1
00002B7C  5248                    1953              ADDA.W  #1,A0
00002B7E  5202                    1954              ADDI.B  #1,D2
00002B80  D4FC 0014               1955              ADDA.W  #INDEX,A2
00002B84  224A                    1956              MOVEA.L A2,A1
00002B86  60D8                    1957              BRA     CHECKLOOP
00002B88                          1958      
00002B88  5202                    1959  NULLFOUND   ADDI.B  #1,D2
00002B8A  4CDF FFFB               1960              MOVEM.L (SP)+,A0-A7/D0-D1/D3-D7
00002B8E  4E75                    1961              RTS
00002B90                          1962          
00002B90                          1963  *-----------------------------------------------------------
00002B90                          1964  *ASCII TO HEX CONVERSION SUBROUTINE
00002B90                          1965  * A5 = ptr to beginning address A6 = ptr to ending address
00002B90                          1966  * D3 = output D4 = 0 - HEX VALUE, 1 - NON HEX VALUE 
00002B90                          1967  * D5 - LENGTH OF STRING  A4 = ptr to output
00002B90                          1968  *-----------------------------------------------------------
00002B90  48E7 E3F7               1969  ASCII2HEX   MOVEM.L A0-A3/A5-A7/D0-D2/D6-D7,-(SP)
00002B94                          1970              
00002B94  287C 00001110           1971              MOVEA.L #ASCIIBUFFER,A4
00002B9A  4283                    1972              CLR.L   D3
00002B9C  4285                    1973              CLR.L   D5            
00002B9E  4282                    1974  ASCIILOOP   CLR.L   D2      
00002BA0  BDCD                    1975              CMP.L   A5,A6
00002BA2  6700 004E               1976              BEQ     ASCIIDONE
00002BA6  5205                    1977              ADD.B   #1,D5
00002BA8  141D                    1978              MOVE.B  (A5)+,D2
00002BAA  0C02 0030               1979              CMPI.B  #'0',D2
00002BAE  6D00 0032               1980              BLT     ASCIIRANGE
00002BB2  0C02 0046               1981              CMPI.B  #'F',D2
00002BB6  6E00 002A               1982              BGT     ASCIIRANGE
00002BBA  0C02 0039               1983              CMPI.B  #'9',D2
00002BBE  6F00 0018               1984              BLE     ASCIINUMBER
00002BC2  0C02 0041               1985              CMPI.B  #'A',D2
00002BC6  6C00 0006               1986              BGE     ASCIILETTER
00002BCA  6000 0016               1987              BRA     ASCIIRANGE
00002BCE  0402 0037               1988  ASCIILETTER SUBI.B  #$37,D2
00002BD2  8602                    1989              OR.B    D2,D3
00002BD4  E99B                    1990              ROL.L   #4,D3
00002BD6  60C6                    1991              BRA     ASCIILOOP
00002BD8  0402 0030               1992  ASCIINUMBER SUBI.B  #$30,D2
00002BDC  8602                    1993              OR.B    D2,D3
00002BDE  E99B                    1994              ROL.L   #4,D3
00002BE0  60BC                    1995              BRA     ASCIILOOP
00002BE2  7801                    1996  ASCIIRANGE  MOVE.L  #1,D4
00002BE4  43F8 1174               1997              LEA     ASCIIERROR,A1
00002BE8  103C 000E               1998              MOVE.B  #14,D0
00002BEC  4E4F                    1999              TRAP    #15
00002BEE  6000 0008               2000              BRA     ASCIIFIN       
00002BF2  7800                    2001  ASCIIDONE   MOVE.L  #0,D4
00002BF4  E89B                    2002              ROR.L   #4,D3
00002BF6  2883                    2003              MOVE.L  D3,(A4)
00002BF8                          2004              
00002BF8  4CDF EFC7               2005  ASCIIFIN    MOVEM.L (SP)+,A0-A3/A5-A7/D0-D2/D6-D7
00002BFC  4E75                    2006              RTS
00002BFE                          2007  
00002BFE                          2008  *-----------------------------------------------------------
00002BFE                          2009  *HEX TO ASCII CONVERSION SUBROUTINE
00002BFE                          2010  * A5 = ptr to beginning address A6 = ptr to ending address
00002BFE                          2011  * D3 = output                   A4 = ptr to output
00002BFE                          2012  *-----------------------------------------------------------
00002BFE  48E7 EFF7               2013  HEX2ASCII   MOVEM.L A0-A3/A5-A7/D0-D2/D4-D7,-(SP)
00002C02                          2014  
00002C02  4282                    2015              CLR.L   D2
00002C04  4283                    2016              CLR.L   D3
00002C06  49F8 1124               2017              LEA     HEXBUFFER,A4
00002C0A  18BC 0000               2018              MOVE.B  #NULL,(A4)
00002C0E  4284                    2019  NEXTHEX     CLR.L   D4
00002C10  183C 0001               2020              MOVE.B  #1,D4
00002C14  BDCD                    2021              CMP.L   A5,A6
00002C16  6700 0058               2022              BEQ     HEXDONE
00002C1A  1426                    2023              MOVE.B  -(A6),D2
00002C1C  1602                    2024              MOVE.B  D2,D3
00002C1E  1403                    2025  HEXLOOP     MOVE.B  D3,D2
00002C20  C4BC 0000000F           2026              AND.L   #$0000000F,D2
00002C26  0C02 0000               2027              CMPI.B  #$0,D2
00002C2A  6D00 003A               2028              BLT     HEXRANGE
00002C2E  0C02 000F               2029              CMPI.B  #$F,D2
00002C32  6E00 0032               2030              BGT     HEXRANGE
00002C36  0C02 0009               2031              CMPI.B  #$9,D2
00002C3A  6F00 001C               2032              BLE     HEXNUMBER
00002C3E  0C02 000A               2033              CMPI.B  #$A,D2
00002C42  6C00 0006               2034              BGE     HEXLETTER
00002C46  6000 001E               2035              BRA     HEXRANGE
00002C4A  0602 0037               2036  HEXLETTER   ADDI.B  #$37,D2
00002C4E  1902                    2037              MOVE.B  D2,-(A4)
00002C50  E89B                    2038              ROR.L   #4,D3
00002C52  51CC FFCA               2039              DBRA    D4,HEXLOOP
00002C56  60B6                    2040              BRA     NEXTHEX
00002C58  0602 0030               2041  HEXNUMBER   ADDI.B  #$30,D2
00002C5C  1902                    2042              MOVE.B  D2,-(A4)
00002C5E  E89B                    2043              ROR.L   #4,D3
00002C60  51CC FFBC               2044              DBRA    D4,HEXLOOP
00002C64  60A8                    2045              BRA     NEXTHEX
00002C66  43F8 1190               2046  HEXRANGE    LEA     HEXERROR,A1
00002C6A  103C 000E               2047              MOVE.B  #14,D0
00002C6E  4E4F                    2048              TRAP    #15
00002C70                          2049  
00002C70  4CDF EFF7               2050  HEXDONE     MOVEM.L (SP)+,A0-A3/A5-A7/D0-D2/D4-D7
00002C74  4E75                    2051              RTS
00002C76                          2052             
00002C76                          2053  * Put program code here
00002C76                          2054  
00002C76  FFFF FFFF               2055      SIMHALT             ; halt simulator
00002C7A                          2056  
00002C7A                          2057  * Put variables and constants here
00002C7A                          2058  
00002C7A                          2059      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDRERROR           1161
ARG1                23F8
ARG2                2414
ARGPTR              2310
ARGV                2B4E
ASCENDING           2518
ASCII2HEX           2B90
ASCIIBUFFER         1110
ASCIIDATA           27DE
ASCIIDONE           2BF2
ASCIIERROR          1174
ASCIIFIN            2BF8
ASCIILETTER         2BCE
ASCIILOOP           2B9E
ASCIINUMBER         2BD8
ASCIIRANGE          2BE2
BF                  2808
BFCONT              283C
BFDONE              28FC
BFHDLR              4014
BFMANPAGE           5B6E
BFMSG               14FB
BFONLY              2812
BFOUT               21C8
BFPTR               3016
BFSTR               4814
BMOV                2902
BMOVCONT            2936
BMOVDONE            2994
BMOVHDLR            4018
BMOVLOOP            298E
BMOVMANPAGE         5E5B
BMOVMSG             155D
BMOVONLY            290C
BMOVOUT             21DC
BMOVPTR             3019
BMOVSTR             4818
BS                  8
BSCH                2AC0
BSCHCONT            2AF4
BSCHDONE            2AF4
BSCHHDLR            4020
BSCHMANPAGE         635B
BSCHMSG             15F4
BSCHONLY            2ACA
BSCHOUT             2204
BSCHPTR             3023
BSCHSTR             4820
BSORT               2520
BTST                299A
BTSTCONT            29CE
BTSTDONE            2ABA
BTSTHDLR            401C
BTSTLOOP            2A06
BTSTMANPAGE         605A
BTSTMSG             15D9
BTSTONLY            29A4
BTSTOUT             21F0
BTSTPTR             301E
BTSTSTR             481C
BUBBLECMP           244E
BUBBLEDN            2474
BUBBLELOOP          244C
BUBBLESORT          2446
BUBBLESWAP          246C
BUF                 900
BUFFER              1138
BYTE                270E
BYTECONT            25BC
BYTEPRINT           2566
CHECK               2148
CHECKLOOP           2B60
CHKADDR2            286A
CHKDOLLAR           22FA
CLRCMDBUF           201C
CLRINBUF            2010
CMDBUFFER           1060
CMDMSG              12A1
CMDMSG2             1729
CMPNULL             2312
CMPSTR1             2106
CMPSTR2             2142
COMPARELIST         20BA
COMPARELOOP         208E
COMPARESTRING       2080
CR                  D
DATALONG            28D4
DATALONGMSG         1206
DATALOOP            27E8
DATAREAD            1291
DATASTORED          1283
DESCEND             245E
DESCENDING          251E
DF                  2B34
DFDONE              2B38
DFHDLR              4028
DFMANPAGE           67AF
DFMSG               16CA
DFOUT               222C
DFPTR               302B
DFSTR               4828
DOLLARSIGN          230E
ENDHELP             22F4
ENDPTR              231E
ERROR               2074
ERRORDETECT         2A44
ERRORMSG            114C
EXIT                2B3E
EXITDONE            2B48
EXITHDLR            402C
EXITMANPAGE         69DD
EXITMSG             16F4
EXITOUT             2240
EXITPTR             302E
EXITSTR             482C
FF                  C
FILLLOOP            28CA
GO                  2AFA
GOCONT              2B2E
GODONE              2B2E
GOHDLR              4024
GOMANPAGE           65EF
GOMSG               1679
GOONLY              2B04
GOOUT               2218
GOPTR               3028
GOSTR               4824
HASH                23
HDLRJMP             206A
HELP                2120
HELPHDLR            4000
HELPMANPAGE         5000
HELPMSG             12C8
HELPONLY            2268
HELPOUT             2164
HELPPTR             3000
HELPSTR             4800
HEX                 24
HEX2ASCII           2BFE
HEXBUFFER           1124
HEXDONE             2C70
HEXERROR            1190
HEXLETTER           2C4A
HEXLOOP             2C1E
HEXNUMBER           2C58
HEXRANGE            2C66
HT                  9
INCPTR              27D0
INCREMENT           2354
INCREMENT2          252E
INDEX               14
INPUTBUFFER         1010
INTERPRETER         2034
INVALIDADDR         234A
LF                  A
LONG                273A
LONGCONT            2672
LONGPRINT           261E
MANHDLR             4030
MANHELP             20E4
MANMANPAGE          6B98
MANOUT              2254
MANPAGEJMP          215C
MANPTR              3033
MANSTR              4830
MATCH               20CA
MDSP                239A
MDSPCONT            23CE
MDSPDONE            2440
MDSPHDLR            4004
MDSPMANPAGE         51C0
MDSPMSG             12EC
MDSPONLY            23A4
MDSPOUT             2178
MDSPPRINT           2350
MDSPPTR             3005
MDSPSTR             4804
MEMCHKLP            2A0E
MEMERROR            1243
MEMSUCCESS          125D
MM                  2688
MMCONT              26BC
MMDONE              274C
MMERROR             2678
MMHDLR              400C
MMMANPAGE           5704
MMMSG               140E
MMONLY              2692
MMOUT               21A0
MMPRINT             252A
MMPRINTDN           2682
MMPTR               3010
MMSTR               480C
MS                  2752
MSCONT              2786
MSDONE              2802
MSERROR             27F8
MSHDLR              4010
MSMANPAGE           5952
MSMSG               14B4
MSONLY              275C
MSOUT               21B4
MSPTR               3013
MSSTR               4810
NEXT                204C
NEXTHEX             2C0E
NEXTPAGE            212C
NEXTPAGEMAN         20F0
NULL                0
NULLFOUND           2B88
NULLJMP             20D4
NULLLOOP            20D8
ODDADDR1            28E2
ODDADDR2            28F2
ODDADDRMSG1         11BE
ODDADDRMSG2         11E2
OUT1CR              E3
OUTPUT              F3
PORTIN1             F1
PROMPT              1000
PRTBF               282E
PRTBMOV             2928
PRTBSCH             2AE6
PRTBTST             29C0
PRTGO               2B20
PRTMDSP             23C0
PRTMM               26AE
PRTMS               2778
PRTSORTW            24A0
RETURN              20CE
SAFE                2342
SORT                2462
SORTW               247A
SORTWCONT           24AE
SORTWDONE           2524
SORTWHDLR           4008
SORTWMANPAGE        543C
SORTWMSG            1354
SORTWONLY           2484
SORTWOUT            218C
SORTWPTR            300A
SORTWSTR            4808
SP                  20
SPACE               129D
SPFOUND             2B74
START               2000
STOREDATA           11A5
TESTVAL1            AA
TESTVAL2            55
TUTOR               E4
VT                  B
WORD                2724
WORDCONT            2618
WORDPRINT           25C2
