00002000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 4/8/2016 2:00:32 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : ECE 441 Monitor Design Project
00000000                             3  * Written by : Daniel H. Meves
00000000                             4  * Date       : 03/21/2016 - 04/27/2016
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  *---------------------------
00000000                             9  **********CONSTANTS*********
00000000  =00000900                 10  BUF     EQU     $900
00000000  =000000E4                 11  TUTOR   EQU     228
00000000  =000000E3                 12  OUT1CR  EQU     227
00000000  =000000F1                 13  PORTIN1 EQU     241
00000000  =000000F3                 14  OUTPUT  EQU     243
00000000  =0000000C                 15  INDEX   EQU     12
00000000                            16   
00000000  =00000008                 17  BS  EQU  $08   ; Backspace
00000000  =00000009                 18  HT  EQU  $09   ; Tab (horizontal 5 characters)
00000000  =0000000A                 19  LF  EQU  $0A   ; New line (line feed)
00000000  =0000000B                 20  VT  EQU  $0B   ; Vertical tab (4 lines)
00000000  =0000000C                 21  FF  EQU  $0C   ; Form Feed (Always end printing with a Form Feed.)
00000000  =0000000D                 22  CR  EQU  $0D   ; Carriage Return
00000000  =00000020                 23  SP  EQU  $20   ; Space
00000000  =00000024                 24  HEX EQU  $24
00000000  =00000023                 25  HASH    EQU     $23
00000000  =00000000                 26  NULL    EQU     $00
00000000                            27  *---------------------------
00001000                            28      ORG    $1000
00001000                            29      
00001000= 4D 4F 4E 49 54 4F ...     30  PROMPT      DC.B    'MONITOR441>',0
00001010                            31      ORG     $1010
00001010                            32  INPUTBUFFER     DS.B    80
00001060                            33      ORG     $1060
00001060                            34  CMDBUFFER       DS.B    80
00001110                            35      ORG     $1110
00001110                            36  ASCIIBUFFER     DS.B    12
0000111C                            37  HEXBUFFER       DS.B    12
00001128                            38  BUFFER          DS.B    12
00001134= 41 4E 20 45 52 52 ...     39  ERRORMSG        DC.B    'AN ERROR OCCURRED!',CR,LF,0
00001149= 49 6E 76 61 6C 69 ...     40  ADDRERROR       DC.B    'Invalid Address!',CR,LF,0
0000115C= 4E 4F 54 20 41 4E ...     41  ASCIIERROR      DC.B    'NOT AN ASCII VALUE!',CR,LF,0
00001172= 4E 4F 54 20 41 20 ...     42  HEXERROR        DC.B    'NOT A HEXADECIMAL VALUE!',CR,LF,0
0000118D= 20 2D 20 00               43  SPACE           DC.B    ' - ',0
00001191                            44  HELPMSG         *DC.B    CR,LF,'*****ALL MONITOR441 COMMANDS*****',CR,LF,LF
00001191= 20 20 20 48 45 4C ...     45                  DC.B    '   HELP: Displays this message',CR,LF,LF
000011B2                            46                  
000011B2= 20 20 20 4D 44 53 ...     47                  DC.B    '   MDSP: Outputs Address And Memory Contents',CR,LF
000011E0= 20 20 20 4D 44 53 ...     48                  DC.B    '   MDSP <address1> <address2> eg: MDSP $908 $90A<CR>',CR,LF,LF
00001217                            49                  
00001217= 20 20 20 53 4F 52 ...     50                  DC.B    '   SORTW: Sorts A Block Of Memory',CR,LF
0000123A= 20 20 20 44 65 66 ...     51                  DC.B    '   Default: Descending Order',CR,LF
00001258= 20 20 20 3B 41 3A ...     52                  DC.B    '   ;A: Ascending Order',CR,LF
00001270= 20 20 20 3B 44 3A ...     53                  DC.B    '   ;D: Descending Order',CR,LF
00001289= 20 20 20 53 4F 52 ...     54                  DC.B    '   SORTW <address1> <address2> [;order] eg: SORTW $904 $90E ;A<CR>',CR,LF,LF
000012CE                            55                  
000012CE= 20 20 20 4D 4D 3A ...     56                  DC.B    '   MM: Modifies Data In Memory',CR,LF
000012EE= 20 20 20 44 65 66 ...     57                  DC.B    '   Default: Displays One Byte',CR,LF
0000130D= 20 20 20 3B 57 3A ...     58                  DC.B    '   ;W: Displays One Word',CR,LF
00001327= 20 20 20 3B 4C 3A ...     59                  DC.B    '   ;L: Displays One Long Word',CR,LF
00001346= 20 20 20 4D 4D 20 ...     60                  DC.B    '   MM <address>[;size] eg: MM $904;W<CR>',CR,LF,LF
00001371                            61                  
00001371= 20 20 20 4D 53 20 ...     62                  DC.B    '   MS - Memory Set.',CR,LF
00001386= 20 20 20 4D 53 20 ...     63                  DC.B    '   MS <address> [data] eg: MS $904 $FFFF<CR>',CR,LF,LF
000013B5                            64                  
000013B5= 20 20 20 42 46 3A ...     65                  DC.B    '   BF: Fills A Block Of Memory',CR,LF
000013D5= 20 20 20 42 46 20 ...     66                  DC.B    '   BF <address1> <address2> <word> eg: BF $904 $908 475A<CR>',CR,LF,LF
00001414                            67                  
00001414= 20 20 20 42 4D 4F ...     68                  DC.B    '   BMOV: Moves A Block of Memory To Another Area',CR,LF
00001446= 20 20 20 42 4D 4F ...     69                  DC.B    '   BMOV <address1> <address2> <address3> eg: BMOV $908 $90B $909<CR>',CR,LF,LF
0000148D                            70                  
0000148D= 20 20 20 42 54 53 ...     71                  DC.B    '   BTST - Block Test.',CR,LF,LF
000014A5                            72                  
000014A5= 20 20 20 42 53 43 ...     73                  DC.B    '   BSCH: Searches A Literal String In The Memory',CR,LF
000014D7= 20 20 20 42 53 43 ...     74                  DC.B    '   BSCH <address1> <address2> "literal string" eg: BSCH $900 $910 "MATCH"<CR>',CR,LF,LF
00001527                            75                  
00001527= 20 20 20 47 4F 3A ...     76                  DC.B    '   GO: Starts Execution From Given Address',CR,LF
00001553= 20 20 20 47 4F 20 ...     77                  DC.B    '   GO <address> eg: GO $900<CR>',CR,LF,LF
00001575                            78                  
00001575= 20 20 20 44 46 20 ...     79                  DC.B    '   DF - Display Formatted Registers.',CR,LF,LF
0000159C                            80                  
0000159C= 20 20 20 45 58 49 ...     81                  DC.B    '   EXIT - Exit the monitor program eg: EXIT<CR>',CR,LF,LF
000015CE                            82                  
000015CE= 2A 2A 2A 2A 2A 54 ...     83                  DC.B    '*****Try HELP <command> or MAN <command> to view man page.*****',CR,LF,LF,0
00001611                            84  
00001611                            85  *--------------------------
00001611                            86  *MAN PAGES
00001611                            87  *--------------------------
00005000                            88      ORG     $5000
00005000= 0D 0A 48 45 4C 50 ...     89  HELPMANPAGE     DC.B    CR,LF,'HELP(1)                       MC68000/SANPER-1 ELU                       HELP(1)',CR,LF,LF
00005055                            90                  
00005055= 4E 41 4D 45 0D 0A         91                  DC.B    'NAME',CR,LF
0000505B= 20 20 20 48 45 4C ...     92                  DC.B    '   HELP - Help.',CR,LF,LF
0000506D                            93                  
0000506D= 53 59 4E 4F 50 53 ...     94                  DC.B    'SYNOPSYS',CR,LF
00005077= 20 20 20 48 45 4C ...     95                  DC.B    '   HELP',CR,LF,LF
00005081                            96                  
00005081= 44 45 53 43 52 49 ...     97                  DC.B    'DESCRIPTION',CR,LF
0000508E= 20 20 20 54 68 65 ...     98                  DC.B    '   The Help command must display all available commands and usage descriptions.',CR,LF,LF
000050E0                            99                  
000050E0                           100                  *DC.B    'OPTIONS',CR,LF
000050E0                           101                  *DC.B    '   none',CR,LF,LF
000050E0                           102                  
000050E0                           103                  *DC.B    'NOTES',CR,LF
000050E0                           104                  *DC.B    '   none',CR,LF,LF
000050E0                           105                  
000050E0                           106                  *DC.B    'FILES',CR,LF
000050E0                           107                  *DC.B    '   none',CR,LF,LF
000050E0                           108                  
000050E0                           109                  *DC.B    'ENVIRONMENT',CR,LF
000050E0                           110                  *DC.B    '   none',CR,LF,LF
000050E0                           111                  
000050E0                           112                  *DC.B    'DIAGNOSTICS',CR,LF
000050E0                           113                  *DC.B    '   none',CR,LF,LF
000050E0                           114                  
000050E0                           115                  *DC.B    'BUGS',CR,LF
000050E0                           116                  *DC.B    '   none known atm',CR,LF,LF
000050E0                           117                  
000050E0= 41 55 54 48 4F 52 ...    118                  DC.B    'AUTHOR',CR,LF
000050E8= 20 20 20 44 61 6E ...    119                  DC.B    '   Daniel H. Meves',CR,LF,LF
000050FD                           120                  
000050FD                           121                  *DC.B    'HISTORY',CR,LF
000050FD                           122                  *DC.B    '   none',CR,LF,LF
000050FD                           123                  
000050FD= 53 45 45 20 41 4C ...    124                  DC.B    'SEE ALSO',CR,LF
00005107= 20 20 20 4D 44 53 ...    125                  DC.B    '   MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
0000516D                           126                  
0000516D= 44 61 6E 69 65 6C ...    127                  DC.B    'Daniel H. Meves                    27 April 2016                        HELP(1)',CR,LF,LF,0
000051C0                           128                  
000051C0= 0D 0A 4D 44 53 50 ...    129  MDSPMANPAGE     DC.B    CR,LF,'MDSP(1)                       MC68000/SANPER-1 ELU                       MDSP(1)',CR,LF,LF
00005215                           130                  
00005215= 4E 41 4D 45 0D 0A        131                  DC.B    'NAME',CR,LF
0000521B= 20 20 20 4D 44 53 ...    132                  DC.B    '   MDSP - Memory Display.',CR,LF,LF
00005237                           133                  
00005237= 53 59 4E 4F 50 53 ...    134                  DC.B    'SYNOPSYS',CR,LF
00005241= 20 20 20 4D 44 53 ...    135                  DC.B    '   MDSP <address1> <address2>',CR,LF,LF
00005261                           136                  
00005261= 44 45 53 43 52 49 ...    137                  DC.B    'DESCRIPTION',CR,LF
0000526E= 20 20 20 54 68 65 ...    138                  DC.B    '   The MDSP (Memory Display) command outputs the address and memory contents from',CR,LF
000052C1= 20 20 20 3C 61 64 ...    139                  DC.B    '   <address1> to <address2>. The MDSP (Memory Display) command ALSO outputs the',CR,LF
00005312= 20 20 20 61 64 64 ...    140                  DC.B    '   address and memory contents from <address1> to <address1 + 16bytes>.',CR,LF,LF
0000535C                           141                  
0000535C                           142                  *DC.B    'OPTIONS',CR,LF
0000535C                           143                  *DC.B    '   none',CR,LF,LF
0000535C                           144                  
0000535C                           145                  *DC.B    'NOTES',CR,LF
0000535C                           146                  *DC.B    '   none',CR,LF,LF
0000535C                           147                  
0000535C                           148                  *DC.B    'FILES',CR,LF
0000535C                           149                  *DC.B    '   none',CR,LF,LF
0000535C                           150                  
0000535C                           151                  *DC.B    'ENVIRONMENT',CR,LF
0000535C                           152                  *DC.B    '   none',CR,LF,LF
0000535C                           153                  
0000535C                           154                  *DC.B    'DIAGNOSTICS',CR,LF
0000535C                           155                  *DC.B    '   none',CR,LF,LF
0000535C                           156                  
0000535C                           157                  *DC.B    'BUGS',CR,LF
0000535C                           158                  *DC.B    '   none known atm',CR,LF,LF
0000535C                           159                  
0000535C= 41 55 54 48 4F 52 ...    160                  DC.B    'AUTHOR',CR,LF
00005364= 20 20 20 44 61 6E ...    161                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005379                           162                  
00005379                           163                  *DC.B    'HISTORY',CR,LF
00005379                           164                  *DC.B    '   none',CR,LF,LF
00005379                           165                  
00005379= 53 45 45 20 41 4C ...    166                  DC.B    'SEE ALSO',CR,LF
00005383= 20 20 20 48 45 4C ...    167                  DC.B    '   HELP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
000053E9                           168                  
000053E9= 44 61 6E 69 65 6C ...    169                  DC.B    'Daniel H. Meves                    27 April 2016                        MDSP(1)',CR,LF,LF,0
0000543C                           170                  
0000543C= 0D 0A 53 4F 52 54 ...    171  SORTWMANPAGE    DC.B    CR,LF,'SORTW(1)                       MC68000/SANPER-1 ELU                       SORTW(1)',CR,LF,LF
00005493                           172                  
00005493= 4E 41 4D 45 0D 0A        173                  DC.B    'NAME',CR,LF
00005499= 20 20 20 53 4F 52 ...    174                  DC.B    '   SORTW - Sort.',CR,LF,LF
000054AC                           175                  
000054AC= 53 59 4E 4F 50 53 ...    176                  DC.B    'SYNOPSYS',CR,LF
000054B6= 20 20 20 53 4F 52 ...    177                  DC.B    '   SORTW <address1> <address2> [;order]',CR,LF,LF
000054E0                           178                  
000054E0= 44 45 53 43 52 49 ...    179                  DC.B    'DESCRIPTION',CR,LF
000054ED= 20 20 20 54 68 65 ...    180                  DC.B    '   The SORT command sorts a block of memory. The starting address <address1> and the',CR,LF
00005543= 20 20 20 65 6E 64 ...    181                  DC.B    '   ending address <address2> of the memory block are specified in the command. The order',CR,LF
0000559D= 20 20 20 28 41 20 ...    182                  DC.B    '   (A or D) specifies whether the list is sorted in Ascending or Descending order. (The size of',CR,LF
000055FE= 20 20 20 74 68 65 ...    183                  DC.B    '   the data to be sorted is a word)',CR,LF,LF
00005624                           184                  
00005624                           185                  *DC.B    'OPTIONS',CR,LF
00005624                           186                  *DC.B    '   none',CR,LF,LF
00005624                           187                  
00005624                           188                  *DC.B    'NOTES',CR,LF
00005624                           189                  *DC.B    '   none',CR,LF,LF
00005624                           190                  
00005624                           191                  *DC.B    'FILES',CR,LF
00005624                           192                  *DC.B    '   none',CR,LF,LF
00005624                           193                  
00005624                           194                  *DC.B    'ENVIRONMENT',CR,LF
00005624                           195                  *DC.B    '   none',CR,LF,LF
00005624                           196                  
00005624                           197                  *DC.B    'DIAGNOSTICS',CR,LF
00005624                           198                  *DC.B    '   none',CR,LF,LF
00005624                           199                  
00005624                           200                  *DC.B    'BUGS',CR,LF
00005624                           201                  *DC.B    '   none known atm',CR,LF,LF
00005624                           202                  
00005624= 41 55 54 48 4F 52 ...    203                  DC.B    'AUTHOR',CR,LF
0000562C= 20 20 20 44 61 6E ...    204                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005641                           205                  
00005641                           206                  *DC.B    'HISTORY',CR,LF
00005641                           207                  *DC.B    '   none',CR,LF,LF
00005641                           208                  
00005641= 53 45 45 20 41 4C ...    209                  DC.B    'SEE ALSO',CR,LF
0000564B= 20 20 20 48 45 4C ...    210                  DC.B    '   HELP(1), MDSP(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
000056B0                           211                  
000056B0= 44 61 6E 69 65 6C ...    212                  DC.B    'Daniel H. Meves                    27 April 2016                        SORTW(1)',CR,LF,LF,0
00005704                           213                  
00005704= 0D 0A 4D 4D 28 31 ...    214  MMMANPAGE       DC.B    CR,LF,'MM(1)                       MC68000/SANPER-1 ELU                       MM(1)',CR,LF,LF
00005755                           215                  
00005755= 4E 41 4D 45 0D 0A        216                  DC.B    'NAME',CR,LF
0000575B= 20 20 20 4D 4D 20 ...    217                  DC.B    '   MM - Memory Modify.',CR,LF,LF
00005774                           218                  
00005774= 53 59 4E 4F 50 53 ...    219                  DC.B    'SYNOPSYS',CR,LF
0000577E= 20 20 20 4D 4D 20 ...    220                  DC.B    '   MM <address> [;size]',CR,LF,LF
00005798                           221                  
00005798= 44 45 53 43 52 49 ...    222                  DC.B    'DESCRIPTION',CR,LF
000057A5= 20 20 20 4D 4D 20 ...    223                  DC.B    '   MM (Memory Modify) command is used to display memory and, as required, modify data',CR,LF
000057FC= 20 20 20 6F 72 20 ...    224                  DC.B    '   or enter new data. The size (byte, word, long word) controls the number of bytes displayed',CR,LF
0000585B= 20 20 20 66 6F 72 ...    225                  DC.B    '   for each address.',CR,LF,LF
00005872                           226                  
00005872                           227                  *DC.B    'OPTIONS',CR,LF
00005872                           228                  *DC.B    '   none',CR,LF,LF
00005872                           229                  
00005872                           230                  *DC.B    'NOTES',CR,LF
00005872                           231                  *DC.B    '   none',CR,LF,LF
00005872                           232                  
00005872                           233                  *DC.B    'FILES',CR,LF
00005872                           234                  *DC.B    '   none',CR,LF,LF
00005872                           235                  
00005872                           236                  *DC.B    'ENVIRONMENT',CR,LF
00005872                           237                  *DC.B    '   none',CR,LF,LF
00005872                           238                  
00005872                           239                  *DC.B    'DIAGNOSTICS',CR,LF
00005872                           240                  *DC.B    '   none',CR,LF,LF
00005872                           241                  
00005872                           242                  *DC.B    'BUGS',CR,LF
00005872                           243                  *DC.B    '   none known atm',CR,LF,LF
00005872                           244                  
00005872= 41 55 54 48 4F 52 ...    245                  DC.B    'AUTHOR',CR,LF
0000587A= 20 20 20 44 61 6E ...    246                  DC.B    '   Daniel H. Meves',CR,LF,LF
0000588F                           247                  
0000588F                           248                  *DC.B    'HISTORY',CR,LF
0000588F                           249                  *DC.B    '   none',CR,LF,LF
0000588F                           250                  
0000588F= 53 45 45 20 41 4C ...    251                  DC.B    'SEE ALSO',CR,LF
00005899= 20 20 20 48 45 4C ...    252                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00005901                           253                  
00005901= 44 61 6E 69 65 6C ...    254                  DC.B    'Daniel H. Meves                    27 April 2016                        MM(1)',CR,LF,LF,0
00005952                           255                  
00005952= 0D 0A 4D 53 28 31 ...    256  MSMANPAGE       DC.B    CR,LF,'MS(1)                       MC68000/SANPER-1 ELU                       MS(1)',CR,LF,LF
000059A3                           257                  
000059A3= 4E 41 4D 45 0D 0A        258                  DC.B    'NAME',CR,LF
000059A9= 20 20 20 4D 53 20 ...    259                  DC.B    '   MS - Memory Set.',CR,LF,LF
000059BF                           260                  
000059BF= 53 59 4E 4F 50 53 ...    261                  DC.B    'SYNOPSYS',CR,LF
000059C9= 20 20 20 4D 53 20 ...    262                  DC.B    '   MS <address> [data]',CR,LF,LF
000059E2                           263                  
000059E2= 44 45 53 43 52 49 ...    264                  DC.B    'DESCRIPTION',CR,LF
000059EF= 20 20 20 54 68 65 ...    265                  DC.B    '   The Memory Set (MS) command alters memory by setting data into the address specified. The',CR,LF
00005A4D= 20 20 20 64 61 74 ...    266                  DC.B    '   data can take the form of ASCII string or hexadecimal data.',CR,LF,LF
00005A8E                           267                  
00005A8E                           268                  *DC.B    'OPTIONS',CR,LF
00005A8E                           269                  *DC.B    '   none',CR,LF,LF
00005A8E                           270                  
00005A8E                           271                  *DC.B    'NOTES',CR,LF
00005A8E                           272                  *DC.B    '   none',CR,LF,LF
00005A8E                           273                  
00005A8E                           274                  *DC.B    'FILES',CR,LF
00005A8E                           275                  *DC.B    '   none',CR,LF,LF
00005A8E                           276                  
00005A8E                           277                  *DC.B    'ENVIRONMENT',CR,LF
00005A8E                           278                  *DC.B    '   none',CR,LF,LF
00005A8E                           279                  
00005A8E                           280                  *DC.B    'DIAGNOSTICS',CR,LF
00005A8E                           281                  *DC.B    '   none',CR,LF,LF
00005A8E                           282                  
00005A8E                           283                  *DC.B    'BUGS',CR,LF
00005A8E                           284                  *DC.B    '   none known atm',CR,LF,LF
00005A8E                           285                  
00005A8E= 41 55 54 48 4F 52 ...    286                  DC.B    'AUTHOR',CR,LF
00005A96= 20 20 20 44 61 6E ...    287                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005AAB                           288                  
00005AAB                           289                  *DC.B    'HISTORY',CR,LF
00005AAB                           290                  *DC.B    '   none',CR,LF,LF
00005AAB                           291                  
00005AAB= 53 45 45 20 41 4C ...    292                  DC.B    'SEE ALSO',CR,LF
00005AB5= 20 20 20 48 45 4C ...    293                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00005B1D                           294                  
00005B1D= 44 61 6E 69 65 6C ...    295                  DC.B    'Daniel H. Meves                    27 April 2016                        MS(1)',CR,LF,LF,0
00005B6E                           296                  
00005B6E= 0D 0A 42 46 28 31 ...    297  BFMANPAGE       DC.B    CR,LF,'BF(1)                       MC68000/SANPER-1 ELU                       BF(1)',CR,LF,LF
00005BBF                           298                  
00005BBF= 4E 41 4D 45 0D 0A        299                  DC.B    'NAME',CR,LF
00005BC5= 20 20 20 42 46 20 ...    300                  DC.B    '   BF - Block Fill.',CR,LF,LF
00005BDB                           301                  
00005BDB= 53 59 4E 4F 50 53 ...    302                  DC.B    'SYNOPSYS',CR,LF
00005BE5= 20 20 20 42 46 20 ...    303                  DC.B    '   BF <address1> <address2> <word>',CR,LF,LF
00005C0A                           304                  
00005C0A= 44 45 53 43 52 49 ...    305                  DC.B    'DESCRIPTION',CR,LF
00005C17= 20 20 20 54 68 65 ...    306                  DC.B    '   The Block Fill (BF) command fills memory starting with the word boundary <address1> through',CR,LF
00005C77= 20 20 20 3C 61 64 ...    307                  DC.B    '   <address2>. Both <address1> and <address2> must be even addresses. This command only',CR,LF
00005CD0= 20 20 20 66 69 6C ...    308                  DC.B    '   fills with a word-size (2 bytes) data pattern. If an entire word-size data pattern is not entered,',CR,LF
00005D37= 20 20 20 74 68 65 ...    309                  DC.B    '   the pattern is right justified and leading zeros are inserted.',CR,LF,LF
00005D7B                           310                  
00005D7B                           311                  *DC.B    'OPTIONS',CR,LF
00005D7B                           312                  *DC.B    '   none',CR,LF,LF
00005D7B                           313                  
00005D7B                           314                  *DC.B    'NOTES',CR,LF
00005D7B                           315                  *DC.B    '   none',CR,LF,LF
00005D7B                           316                  
00005D7B                           317                  *DC.B    'FILES',CR,LF
00005D7B                           318                  *DC.B    '   none',CR,LF,LF
00005D7B                           319                  
00005D7B                           320                  *DC.B    'ENVIRONMENT',CR,LF
00005D7B                           321                  *DC.B    '   none',CR,LF,LF
00005D7B                           322                  
00005D7B                           323                  *DC.B    'DIAGNOSTICS',CR,LF
00005D7B                           324                  *DC.B    '   none',CR,LF,LF
00005D7B                           325                  
00005D7B                           326                  *DC.B    'BUGS',CR,LF
00005D7B                           327                  *DC.B    '   none known atm',CR,LF,LF
00005D7B                           328                  
00005D7B= 41 55 54 48 4F 52 ...    329                  DC.B    'AUTHOR',CR,LF
00005D83= 20 20 20 44 61 6E ...    330                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005D98                           331                  
00005D98                           332                  *DC.B    'HISTORY',CR,LF
00005D98                           333                  *DC.B    '   none',CR,LF,LF
00005D98                           334                  
00005D98= 53 45 45 20 41 4C ...    335                  DC.B    'SEE ALSO',CR,LF
00005DA2= 20 20 20 48 45 4C ...    336                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00005E0A                           337                  
00005E0A= 44 61 6E 69 65 6C ...    338                  DC.B    'Daniel H. Meves                    27 April 2016                        BF(1)',CR,LF,LF,0
00005E5B                           339                  
00005E5B= 0D 0A 42 4D 4F 56 ...    340  BMOVMANPAGE     DC.B    CR,LF,'BMOV(1)                       MC68000/SANPER-1 ELU                       BMOV(1)',CR,LF,LF
00005EB0                           341                  
00005EB0= 4E 41 4D 45 0D 0A        342                  DC.B    'NAME',CR,LF
00005EB6= 20 20 20 42 4D 4F ...    343                  DC.B    '   BMOV - Block Move.',CR,LF,LF
00005ECE                           344                  
00005ECE= 53 59 4E 4F 50 53 ...    345                  DC.B    'SYNOPSYS',CR,LF
00005ED8= 20 20 20 42 4D 4F ...    346                  DC.B    '   BMOV <address1> <address2> <address3>',CR,LF,LF
00005F03                           347                  
00005F03= 44 45 53 43 52 49 ...    348                  DC.B    'DESCRIPTION',CR,LF
00005F10= 20 20 20 54 68 65 ...    349                  DC.B    '   The Block Move (BMOV) command is used to move (duplicate) blocks of memory from one area to another.',CR,LF,LF
00005F7A                           350                  
00005F7A                           351                  *DC.B    'OPTIONS',CR,LF
00005F7A                           352                  *DC.B    '   none',CR,LF,LF
00005F7A                           353                  
00005F7A                           354                  *DC.B    'NOTES',CR,LF
00005F7A                           355                  *DC.B    '   none',CR,LF,LF
00005F7A                           356                  
00005F7A                           357                  *DC.B    'FILES',CR,LF
00005F7A                           358                  *DC.B    '   none',CR,LF,LF
00005F7A                           359                  
00005F7A                           360                  *DC.B    'ENVIRONMENT',CR,LF
00005F7A                           361                  *DC.B    '   none',CR,LF,LF
00005F7A                           362                  
00005F7A                           363                  *DC.B    'DIAGNOSTICS',CR,LF
00005F7A                           364                  *DC.B    '   none',CR,LF,LF
00005F7A                           365                  
00005F7A                           366                  *DC.B    'BUGS',CR,LF
00005F7A                           367                  *DC.B    '   none known atm',CR,LF,LF
00005F7A                           368                  
00005F7A= 41 55 54 48 4F 52 ...    369                  DC.B    'AUTHOR',CR,LF
00005F82= 20 20 20 44 61 6E ...    370                  DC.B    '   Daniel H. Meves',CR,LF,LF
00005F97                           371                  
00005F97                           372                  *DC.B    'HISTORY',CR,LF
00005F97                           373                  *DC.B    '   none',CR,LF,LF
00005F97                           374                  
00005F97= 53 45 45 20 41 4C ...    375                  DC.B    'SEE ALSO',CR,LF
00005FA1= 20 20 20 48 45 4C ...    376                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00006007                           377                  
00006007= 44 61 6E 69 65 6C ...    378                  DC.B    'Daniel H. Meves                    27 April 2016                        BMOV(1)',CR,LF,LF,0
0000605A                           379                  
0000605A= 0D 0A 42 54 53 54 ...    380  BTSTMANPAGE     DC.B    CR,LF,'BTST(1)                       MC68000/SANPER-1 ELU                       BTST(1)',CR,LF,LF
000060AF                           381                  
000060AF= 4E 41 4D 45 0D 0A        382                  DC.B    'NAME',CR,LF
000060B5= 20 20 20 42 54 53 ...    383                  DC.B    '   BTST - Block Test.',CR,LF,LF
000060CD                           384                  
000060CD= 53 59 4E 4F 50 53 ...    385                  DC.B    'SYNOPSYS',CR,LF
000060D7= 20 20 20 42 54 53 ...    386                  DC.B    '   BTST <address1> <address2>',CR,LF,LF
000060F7                           387                  
000060F7= 44 45 53 43 52 49 ...    388                  DC.B    'DESCRIPTION',CR,LF
00006104= 20 20 20 54 68 65 ...    389                  DC.B    '   The Block Test (BT) command is a destructive test of a block of memory beginning at <address1>',CR,LF
00006167= 20 20 20 74 68 72 ...    390                  DC.B    '   through <address2>. If this test runs to completion without detecting errors, and display a',CR,LF
000061C7= 20 20 20 6D 65 73 ...    391                  DC.B    '   message that no error was detected. If memory problems are found, a message is displayed',CR,LF
00006224= 20 20 20 69 6E 64 ...    392                  DC.B    '   indicating the address, the data stored, and the data read of the failing memory.',CR,LF,LF
0000627B                           393                  
0000627B                           394                  *DC.B    'OPTIONS',CR,LF
0000627B                           395                  *DC.B    '   none',CR,LF,LF
0000627B                           396                  
0000627B                           397                  *DC.B    'NOTES',CR,LF
0000627B                           398                  *DC.B    '   none',CR,LF,LF
0000627B                           399                  
0000627B                           400                  *DC.B    'FILES',CR,LF
0000627B                           401                  *DC.B    '   none',CR,LF,LF
0000627B                           402                  
0000627B                           403                  *DC.B    'ENVIRONMENT',CR,LF
0000627B                           404                  *DC.B    '   none',CR,LF,LF
0000627B                           405                  
0000627B                           406                  *DC.B    'DIAGNOSTICS',CR,LF
0000627B                           407                  *DC.B    '   none',CR,LF,LF
0000627B                           408                  
0000627B                           409                  *DC.B    'BUGS',CR,LF
0000627B                           410                  *DC.B    '   none known atm',CR,LF,LF
0000627B                           411                  
0000627B= 41 55 54 48 4F 52 ...    412                  DC.B    'AUTHOR',CR,LF
00006283= 20 20 20 44 61 6E ...    413                  DC.B    '   Daniel H. Meves',CR,LF,LF
00006298                           414                  
00006298                           415                  *DC.B    'HISTORY',CR,LF
00006298                           416                  *DC.B    '   none',CR,LF,LF
00006298                           417                  
00006298= 53 45 45 20 41 4C ...    418                  DC.B    'SEE ALSO',CR,LF
000062A2= 20 20 20 48 45 4C ...    419                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BSCH(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
00006308                           420                  
00006308= 44 61 6E 69 65 6C ...    421                  DC.B    'Daniel H. Meves                    27 April 2016                        BTST(1)',CR,LF,LF,0
0000635B                           422  
0000635B= 0D 0A 42 53 43 48 ...    423  BSCHMANPAGE     DC.B    CR,LF,'BSCH(1)                       MC68000/SANPER-1 ELU                       BSCH(1)',CR,LF,LF
000063B0                           424                  
000063B0= 4E 41 4D 45 0D 0A        425                  DC.B    'NAME',CR,LF
000063B6= 20 20 20 42 53 43 ...    426                  DC.B    '   BSCH - Block Search.',CR,LF,LF
000063D0                           427                  
000063D0= 53 59 4E 4F 50 53 ...    428                  DC.B    'SYNOPSYS',CR,LF
000063DA= 20 20 20 42 53 43 ...    429                  DC.B    '   BSCH <address1> <address2> "StringLiteral"',CR,LF,LF
0000640A                           430                  
0000640A= 44 45 53 43 52 49 ...    431                  DC.B    'DESCRIPTION',CR,LF
00006417= 20 20 20 54 68 65 ...    432                  DC.B    '   The BSCH (Block Search) command is used to search a literal string in a memory block starting',CR,LF
00006479= 20 20 20 61 74 20 ...    433                  DC.B    '   at <address1> through <address2> both inclusive. In BSCH command, if search finds matching data,',CR,LF 
000064DE= 20 20 20 74 68 65 ...    434                  DC.B    '   the data and address(es) must be displayed.',CR,LF,LF
0000650F                           435                  
0000650F                           436                  *DC.B    'OPTIONS',CR,LF
0000650F                           437                  *DC.B    '   none',CR,LF,LF
0000650F                           438                  
0000650F                           439                  *DC.B    'NOTES',CR,LF
0000650F                           440                  *DC.B    '   none',CR,LF,LF
0000650F                           441                  
0000650F                           442                  *DC.B    'FILES',CR,LF
0000650F                           443                  *DC.B    '   none',CR,LF,LF
0000650F                           444                  
0000650F                           445                  *DC.B    'ENVIRONMENT',CR,LF
0000650F                           446                  *DC.B    '   none',CR,LF,LF
0000650F                           447                  
0000650F                           448                  *DC.B    'DIAGNOSTICS',CR,LF
0000650F                           449                  *DC.B    '   none',CR,LF,LF
0000650F                           450                  
0000650F                           451                  *DC.B    'BUGS',CR,LF
0000650F                           452                  *DC.B    '   none known atm',CR,LF,LF
0000650F                           453                  
0000650F= 41 55 54 48 4F 52 ...    454                  DC.B    'AUTHOR',CR,LF
00006517= 20 20 20 44 61 6E ...    455                  DC.B    '   Daniel H. Meves',CR,LF,LF
0000652C                           456                  
0000652C                           457                  *DC.B    'HISTORY',CR,LF
0000652C                           458                  *DC.B    '   none',CR,LF,LF
0000652C                           459                  
0000652C= 53 45 45 20 41 4C ...    460                  DC.B    'SEE ALSO',CR,LF
00006536= 20 20 20 48 45 4C ...    461                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), GO(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
0000659C                           462                  
0000659C= 44 61 6E 69 65 6C ...    463                  DC.B    'Daniel H. Meves                    27 April 2016                        BSCH(1)',CR,LF,LF,0
000065EF                           464                  
000065EF= 0D 0A 47 4F 28 31 ...    465  GOMANPAGE       DC.B    CR,LF,'GO(1)                       MC68000/SANPER-1 ELU                       GO(1)',CR,LF,LF
00006640                           466                  
00006640= 4E 41 4D 45 0D 0A        467                  DC.B    'NAME',CR,LF
00006646= 20 20 20 47 4F 20 ...    468                  DC.B    '   GO - Execute Program.',CR,LF,LF
00006661                           469                  
00006661= 53 59 4E 4F 50 53 ...    470                  DC.B    'SYNOPSYS',CR,LF
0000666B= 20 20 20 47 4F 20 ...    471                  DC.B    '   GO <address>',CR,LF,LF
0000667D                           472                  
0000667D= 44 45 53 43 52 49 ...    473                  DC.B    'DESCRIPTION',CR,LF
0000668A= 20 20 20 54 68 65 ...    474                  DC.B    '   The GO command is used to start execution from a given address.',CR,LF,LF
000066CF                           475                  
000066CF                           476                  *DC.B    'OPTIONS',CR,LF
000066CF                           477                  *DC.B    '   none',CR,LF,LF
000066CF                           478                  
000066CF                           479                  *DC.B    'NOTES',CR,LF
000066CF                           480                  *DC.B    '   none',CR,LF,LF
000066CF                           481                  
000066CF                           482                  *DC.B    'FILES',CR,LF
000066CF                           483                  *DC.B    '   none',CR,LF,LF
000066CF                           484                  
000066CF                           485                  *DC.B    'ENVIRONMENT',CR,LF
000066CF                           486                  *DC.B    '   none',CR,LF,LF
000066CF                           487                  
000066CF                           488                  *DC.B    'DIAGNOSTICS',CR,LF
000066CF                           489                  *DC.B    '   none',CR,LF,LF
000066CF                           490                  
000066CF                           491                  *DC.B    'BUGS',CR,LF
000066CF                           492                  *DC.B    '   none known atm',CR,LF,LF
000066CF                           493                  
000066CF= 41 55 54 48 4F 52 ...    494                  DC.B    'AUTHOR',CR,LF
000066D7= 20 20 20 44 61 6E ...    495                  DC.B    '   Daniel H. Meves',CR,LF,LF
000066EC                           496                  
000066EC                           497                  *DC.B    'HISTORY',CR,LF
000066EC                           498                  *DC.B    '   none',CR,LF,LF
000066EC                           499                  
000066EC= 53 45 45 20 41 4C ...    500                  DC.B    'SEE ALSO',CR,LF
000066F6= 20 20 20 48 45 4C ...    501                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), DF(1), EXIT(1), MAN(1)',CR,LF,LF
0000675E                           502                  
0000675E= 44 61 6E 69 65 6C ...    503                  DC.B    'Daniel H. Meves                    27 April 2016                        GO(1)',CR,LF,LF,0
000067AF                           504                  
000067AF= 0D 0A 44 46 28 31 ...    505  DFMANPAGE       DC.B    CR,LF,'DF(1)                       MC68000/SANPER-1 ELU                       DF(1)',CR,LF,LF
00006800                           506                  
00006800= 4E 41 4D 45 0D 0A        507                  DC.B    'NAME',CR,LF
00006806= 20 20 20 44 46 20 ...    508                  DC.B    '   DF - Display Formatted Registers.',CR,LF,LF
0000682D                           509                  
0000682D= 53 59 4E 4F 50 53 ...    510                  DC.B    'SYNOPSYS',CR,LF
00006837= 20 20 20 44 46 0D ...    511                  DC.B    '   DF',CR,LF,LF
0000683F                           512                  
0000683F= 44 45 53 43 52 49 ...    513                  DC.B    'DESCRIPTION',CR,LF
0000684C= 20 20 20 54 68 65 ...    514                  DC.B    '   The Display Formatted Registers (DF) command is used to display the MC68000 processor registers.',CR,LF 
000068B1= 20 20 20 54 68 69 ...    515                  DC.B    '   This command should display current PC, SR, US, SS and D, A registers.',CR,LF,LF
000068FD                           516                  
000068FD                           517                  *DC.B    'OPTIONS',CR,LF
000068FD                           518                  *DC.B    '   none',CR,LF,LF
000068FD                           519                  
000068FD                           520                  *DC.B    'NOTES',CR,LF
000068FD                           521                  *DC.B    '   none',CR,LF,LF
000068FD                           522                  
000068FD                           523                  *DC.B    'FILES',CR,LF
000068FD                           524                  *DC.B    '   none',CR,LF,LF
000068FD                           525                  
000068FD                           526                  *DC.B    'ENVIRONMENT',CR,LF
000068FD                           527                  *DC.B    '   none',CR,LF,LF
000068FD                           528                  
000068FD                           529                  *DC.B    'DIAGNOSTICS',CR,LF
000068FD                           530                  *DC.B    '   none',CR,LF,LF
000068FD                           531                  
000068FD                           532                  *DC.B    'BUGS',CR,LF
000068FD                           533                  *DC.B    '   none known atm',CR,LF,LF
000068FD                           534                  
000068FD= 41 55 54 48 4F 52 ...    535                  DC.B    'AUTHOR',CR,LF
00006905= 20 20 20 44 61 6E ...    536                  DC.B    '   Daniel H. Meves',CR,LF,LF
0000691A                           537                  
0000691A                           538                  *DC.B    'HISTORY',CR,LF
0000691A                           539                  *DC.B    '   none',CR,LF,LF
0000691A                           540                  
0000691A= 53 45 45 20 41 4C ...    541                  DC.B    'SEE ALSO',CR,LF
00006924= 20 20 20 48 45 4C ...    542                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), EXIT(1), MAN(1)',CR,LF,LF
0000698C                           543                  
0000698C= 44 61 6E 69 65 6C ...    544                  DC.B    'Daniel H. Meves                    27 April 2016                        DF(1)',CR,LF,LF,0
000069DD                           545                  
000069DD= 0D 0A 45 58 49 54 ...    546  EXITMANPAGE     DC.B    CR,LF,'EXIT(1)                       MC68000/SANPER-1 ELU                       EXIT(1)',CR,LF,LF
00006A32                           547                  
00006A32= 4E 41 4D 45 0D 0A        548                  DC.B    'NAME',CR,LF
00006A38= 20 20 20 45 58 49 ...    549                  DC.B    '   EXIT - Exit Monitor Program.',CR,LF,LF
00006A5A                           550                  
00006A5A= 53 59 4E 4F 50 53 ...    551                  DC.B    'SYNOPSYS',CR,LF
00006A64= 20 20 20 45 58 49 ...    552                  DC.B    '   EXIT',CR,LF,LF
00006A6E                           553                  
00006A6E= 44 45 53 43 52 49 ...    554                  DC.B    'DESCRIPTION',CR,LF
00006A7B= 20 20 20 54 68 65 ...    555                  DC.B    '   The EXIT command terminates/exits your Monitor program.',CR,LF,LF
00006AB8                           556                  
00006AB8                           557                  *DC.B    'OPTIONS',CR,LF
00006AB8                           558                  *DC.B    '   none',CR,LF,LF
00006AB8                           559                  
00006AB8                           560                  *DC.B    'NOTES',CR,LF
00006AB8                           561                  *DC.B    '   none',CR,LF,LF
00006AB8                           562                  
00006AB8                           563                  *DC.B    'FILES',CR,LF
00006AB8                           564                  *DC.B    '   none',CR,LF,LF
00006AB8                           565                  
00006AB8                           566                  *DC.B    'ENVIRONMENT',CR,LF
00006AB8                           567                  *DC.B    '   none',CR,LF,LF
00006AB8                           568                  
00006AB8                           569                  *DC.B    'DIAGNOSTICS',CR,LF
00006AB8                           570                  *DC.B    '   none',CR,LF,LF
00006AB8                           571                  
00006AB8                           572                  *DC.B    'BUGS',CR,LF
00006AB8                           573                  *DC.B    '   none known atm',CR,LF,LF
00006AB8                           574                  
00006AB8= 41 55 54 48 4F 52 ...    575                  DC.B    'AUTHOR',CR,LF
00006AC0= 20 20 20 44 61 6E ...    576                  DC.B    '   Daniel H. Meves',CR,LF,LF
00006AD5                           577                  
00006AD5                           578                  *DC.B    'HISTORY',CR,LF
00006AD5                           579                  *DC.B    '   none',CR,LF,LF
00006AD5                           580                  
00006AD5= 53 45 45 20 41 4C ...    581                  DC.B    'SEE ALSO',CR,LF
00006ADF= 20 20 20 48 45 4C ...    582                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), MAN(1)',CR,LF,LF
00006B45                           583                  
00006B45= 44 61 6E 69 65 6C ...    584                  DC.B    'Daniel H. Meves                    27 April 2016                        EXIT(1)',CR,LF,LF,0
00006B98                           585                  
00006B98= 0D 0A 4D 41 4E 28 ...    586  MANMANPAGE      DC.B    CR,LF,'MAN(1)                       MC68000/SANPER-1 ELU                       MAN(1)',CR,LF,LF
00006BEB                           587                  
00006BEB= 4E 41 4D 45 0D 0A        588                  DC.B    'NAME',CR,LF
00006BF1= 20 20 20 4D 41 4E ...    589                  DC.B    '   MAN - An interface to the on-line reference manuals.',CR,LF,LF
00006C2B                           590                  
00006C2B= 53 59 4E 4F 50 53 ...    591                  DC.B    'SYNOPSYS',CR,LF
00006C35= 20 20 20 4D 41 4E ...    592                  DC.B    '   MAN [command]',CR,LF,LF
00006C48                           593                  
00006C48= 44 45 53 43 52 49 ...    594                  DC.B    'DESCRIPTION',CR,LF
00006C55= 20 20 20 4D 41 4E ...    595                  DC.B    '   MAN is the systems manual pager.',CR,LF,LF
00006C7B                           596                  
00006C7B                           597                  *DC.B    'OPTIONS',CR,LF
00006C7B                           598                  *DC.B    '   none',CR,LF,LF
00006C7B                           599                  
00006C7B                           600                  *DC.B    'NOTES',CR,LF
00006C7B                           601                  *DC.B    '   none',CR,LF,LF
00006C7B                           602                  
00006C7B                           603                  *DC.B    'FILES',CR,LF
00006C7B                           604                  *DC.B    '   none',CR,LF,LF
00006C7B                           605                  
00006C7B                           606                  *DC.B    'ENVIRONMENT',CR,LF
00006C7B                           607                  *DC.B    '   none',CR,LF,LF
00006C7B                           608                  
00006C7B                           609                  *DC.B    'DIAGNOSTICS',CR,LF
00006C7B                           610                  *DC.B    '   none',CR,LF,LF
00006C7B                           611                  
00006C7B                           612                  *DC.B    'BUGS',CR,LF
00006C7B                           613                  *DC.B    '   none known atm',CR,LF,LF
00006C7B                           614                  
00006C7B= 41 55 54 48 4F 52 ...    615                  DC.B    'AUTHOR',CR,LF
00006C83= 20 20 20 44 61 6E ...    616                  DC.B    '   Daniel H. Meves',CR,LF,LF
00006C98                           617                  
00006C98                           618                  *DC.B    'HISTORY',CR,LF
00006C98                           619                  *DC.B    '   none',CR,LF,LF
00006C98                           620                  
00006C98= 53 45 45 20 41 4C ...    621                  DC.B    'SEE ALSO',CR,LF
00006CA2= 20 20 20 48 45 4C ...    622                  DC.B    '   HELP(1), MDSP(1), SORTW(1), MM(1), MS(1), BF(1), BMOV(1), BTST(1), BSCH(1), GO(1), DF(1), EXIT(1)',CR,LF,LF
00006D09                           623                  
00006D09= 44 61 6E 69 65 6C ...    624                  DC.B    'Daniel H. Meves                    27 April 2016                        MAN(1)',CR,LF,LF,0
00006D5B                           625                  
00003000                           626      ORG     $3000
00003000= 48 45 4C 50 00           627  HELPPTR    DC.B    'HELP',0
00003005= 4D 44 53 50 00           628  MDSPPTR    DC.B    'MDSP',0
0000300A= 53 4F 52 54 57 00        629  SORTWPTR   DC.B    'SORTW',0
00003010= 4D 4D 00                 630  MMPTR      DC.B    'MM',0
00003013= 4D 53 00                 631  MSPTR      DC.B    'MS',0
00003016= 42 46 00                 632  BFPTR      DC.B    'BF',0
00003019= 42 4D 4F 56 00           633  BMOVPTR    DC.B    'BMOV',0
0000301E= 42 54 53 54 00           634  BTSTPTR    DC.B    'BTST',0
00003023= 42 53 43 48 00           635  BSCHPTR    DC.B    'BSCH',0
00003028= 47 4F 00                 636  GOPTR      DC.B    'GO',0
0000302B= 44 46 00                 637  DFPTR      DC.B    'DF',0
0000302E= 45 58 49 54 00           638  EXITPTR    DC.B    'EXIT',0
00003033= 4D 41 4E 00              639  MANPTR     DC.B    'MAN',0
00003037                           640  
00004000                           641      ORG     $4000
00004000= 00002118                 642  HELPHDLR    DC.L   HELP
00004004= 0000230A                 643  MDSPHDLR    DC.L   MDSP
00004008= 000023B8                 644  SORTWHDLR   DC.L   SORTW
0000400C= 00002596                 645  MMHDLR      DC.L   MM
00004010= 00002630                 646  MSHDLR      DC.L   MS
00004014= 0000269C                 647  BFHDLR      DC.L   BF
00004018= 000026A6                 648  BMOVHDLR    DC.L   BMOV
0000401C= 000026B0                 649  BTSTHDLR    DC.L   BTST
00004020= 000026BA                 650  BSCHHDLR    DC.L   BSCH
00004024= 000026C4                 651  GOHDLR      DC.L   GO
00004028= 000026CE                 652  DFHDLR      DC.L   DF
0000402C= 000026D8                 653  EXITHDLR    DC.L   EXIT
00004030= 000020DC                 654  MANHDLR     DC.L   MANHELP
00004034                           655  
00004800                           656      ORG     $4800
00004800= 0000215C                 657  HELPSTR     DC.L    HELPOUT
00004804= 00002170                 658  MDSPSTR     DC.L    MDSPOUT
00004808= 00002184                 659  SORTWSTR    DC.L    SORTWOUT
0000480C= 00002198                 660  MMSTR       DC.L    MMOUT
00004810= 000021AC                 661  MSSTR       DC.L    MSOUT
00004814= 000021C0                 662  BFSTR       DC.L    BFOUT
00004818= 000021D4                 663  BMOVSTR     DC.L    BMOVOUT
0000481C= 000021E8                 664  BTSTSTR     DC.L    BTSTOUT
00004820= 000021FC                 665  BSCHSTR     DC.L    BSCHOUT
00004824= 00002210                 666  GOSTR       DC.L    GOOUT
00004828= 00002224                 667  DFSTR       DC.L    DFOUT
0000482C= 00002238                 668  EXITSTR     DC.L    EXITOUT
00004830= 0000224C                 669  MANSTR      DC.L    MANOUT   
00004834                           670      
00004834                           671  *-----------------------------------------------------------
00004834                           672  * Main Program
00004834                           673  *-----------------------------------------------------------
00002000                           674      ORG     $2000
00002000                           675  START:                  ; first instruction of program
00002000  43F8 1000                676                  LEA     PROMPT,A1
00002004  103C 000E                677                  MOVE.B  #14,D0
00002008  4E4F                     678                  TRAP    #15
0000200A                           679          
0000200A  45F8 1010                680                  LEA     INPUTBUFFER,A2
0000200E  744F                     681                  MOVE.L  #79,D2
00002010  421A                     682  CLRINBUF        CLR.B   (A2)+
00002012  51CA FFFC                683                  DBRA    D2,CLRINBUF
00002016                           684  
00002016  47F8 1060                685                  LEA     CMDBUFFER,A3
0000201A  764F                     686                  MOVE.L  #79,D3
0000201C  421B                     687  CLRCMDBUF       CLR.B   (A3)+
0000201E  51CB FFFC                688                  DBRA    D3,CLRCMDBUF  
00002022                           689          
00002022  43F8 1010                690                  LEA     INPUTBUFFER,A1
00002026  103C 0002                691                  MOVE.B  #2,D0
0000202A  4E4F                     692                  TRAP    #15
0000202C                           693                  
0000202C  4EB9 00002034            694                  JSR     INTERPRETER
00002032  60CC                     695                  BRA     START   
00002034                           696      
00002034                           697  *-----------------------------------------------------------
00002034                           698  *Command Interpreter
00002034                           699  *-----------------------------------------------------------
00002034  48E7 FFFF                700  INTERPRETER     MOVEM.L A0-A7/D0-D7,-(SP)
00002038                           701   
00002038  43F8 1010                702                  LEA     INPUTBUFFER,A1      ; pointer to command input
0000203C  2049                     703                  MOVEA.L A1,A0
0000203E  D3C1                     704                  ADDA.L  D1,A1               ; pointer to end of command input
00002040  4282                     705                  CLR.L   D2
00002042  4283                     706                  CLR.L   D3                  ; character counter
00002044                           707                   
00002044  49F8 3000                708                  LEA     HELPPTR,A4          ; pointer to string table
00002048  4BF8 4000                709                  LEA     HELPHDLR,A5         ; pointer to jump table
0000204C  47F8 1010                710  NEXT            LEA     INPUTBUFFER,A3
00002050  4EB9 00002080            711                  JSR     COMPARESTRING
00002056                           712                  
00002056  0C04 0001                713                  CMPI.B  #1,D4
0000205A  6700 000E                714                  BEQ     HDLRJMP
0000205E  584D                     715                  ADDA.W  #4,A5
00002060  BAFC 4034                716                  CMP.W  #$4034,A5
00002064  6700 000E                717                  BEQ     ERROR
00002068  60E2                     718                  BRA     NEXT
0000206A                           719                  
0000206A  2C55                     720  HDLRJMP         MOVE.L  (A5),A6
0000206C  4E96                     721                  JSR     (A6)
0000206E                           722                     
0000206E  4CDF FFFF                723                  MOVEM.L (SP)+,A0-A7/D0-D7
00002072  4E75                     724                  RTS
00002074                           725                  
00002074  43F8 1134                726  ERROR           LEA     ERRORMSG,A1
00002078  103C 000E                727                  MOVE.B  #14,D0
0000207C  4E4F                     728                  TRAP    #15
0000207E  6080                     729                  BRA     START
00002080                           730  
00002080                           731  *-----------------------------------------------------------
00002080                           732  * Compare Strings
00002080                           733  * INPUT: (A3) = STRING 1, (A4) = STRING 2
00002080                           734  * OUTPUT: D4=1 IF STRINGS MATCH, ELSE D4=0
00002080                           735  *-----------------------------------------------------------
00002080  48E7 F7E7                736  COMPARESTRING   MOVEM.L A0-A2/A5-A7/D0-D3/D5-D7,-(SP)
00002084  4284                     737                  CLR.L   D4
00002086                           738                  
00002086  0C13 0020                739  COMPARELOOP     CMPI.B  #SP,(A3)
0000208A  6700 0026                740                  BEQ     COMPARELIST
0000208E                           741                  
0000208E  0C13 000D                742                  CMPI.B  #CR,(A3)
00002092  6700 001E                743                  BEQ     COMPARELIST
00002096                           744                  
00002096  0C13 0000                745                  CMPI.B  #NULL,(A3)
0000209A  6700 0016                746                  BEQ     COMPARELIST
0000209E                           747                  
0000209E  B90B                     748                  CMPM.B  (A3)+,(A4)+
000020A0  67E4                     749                  BEQ     COMPARELOOP
000020A2                           750                  
000020A2  4EB9 000020CC            751                  JSR     NULLJMP
000020A8  183C 0000                752                  MOVE.B  #0,D4
000020AC  4CDF E7EF                753                  MOVEM.L (SP)+,A0-A2/A5-A7/D0-D3/D5-D7
000020B0  4E75                     754                  RTS     
000020B2                           755                  
000020B2  0C1C 0000                756  COMPARELIST     CMPI.B  #NULL,(A4)+
000020B6  6700 000A                757                  BEQ     MATCH
000020BA                           758                  
000020BA  183C 0000                759                  MOVE.B  #0,D4
000020BE  6000 0006                760                  BRA     RETURN
000020C2                           761                  
000020C2  183C 0001                762  MATCH           MOVE.B  #1,D4
000020C6                           763                  
000020C6  4CDF E7EF                764  RETURN          MOVEM.L (SP)+,A0-A2/A5-A7/D0-D3/D5-D7
000020CA  4E75                     765                  RTS
000020CC                           766  
000020CC  48E7 FFF7                767  NULLJMP         MOVEM.L A0-A3/A5-A7/D0-D7,-(SP)
000020D0  0C1C 0000                768  NULLLOOP        CMPI.B  #NULL,(A4)+
000020D4  66FA                     769                  BNE     NULLLOOP
000020D6  4CDF EFFF                770                  MOVEM.L (SP)+,A0-A3/A5-A7/D0-D7
000020DA  4E75                     771                  RTS
000020DC                           772                  
000020DC                           773  *-----------------------------------------------------------
000020DC                           774  * HELP (Help) - The Help command must display all available
000020DC                           775  * commands and usage descriptions.
000020DC                           776  *
000020DC                           777  *
000020DC                           778  *-----------------------------------------------------------
000020DC  48E7 FFFF                779  MANHELP         MOVEM.L A0-A7/D0-D7,-(SP)
000020E0                           780  
000020E0  49F8 3000                781                  LEA     HELPPTR,A4          ; pointer to string table
000020E4  4BF8 4800                782                  LEA     HELPSTR,A5          ; pointer to jump table
000020E8  47F8 1010                783  NEXTPAGEMAN     LEA     INPUTBUFFER,A3
000020EC  584B                     784                  ADDA.W  #4,A3
000020EE  0C1B 0000                785                  CMPI.B  #NULL,(A3)+
000020F2  6600 000A                786                  BNE     CMPSTR1
000020F6  0C13 0000                787                  CMPI.B  #NULL,(A3)
000020FA  6700 0164                788                  BEQ     HELPONLY
000020FE  534B                     789  CMPSTR1         SUBA.W  #1,A3
00002100  4EB8 2080                790                  JSR     COMPARESTRING
00002104                           791                  
00002104  0C04 0001                792                  CMPI.B  #1,D4
00002108  6700 004A                793                  BEQ     MANPAGEJMP
0000210C  584D                     794                  ADDA.W  #4,A5
0000210E  BAFC 4834                795                  CMP.W  #$4834,A5
00002112  6700 014C                796                  BEQ     HELPONLY
00002116  60D0                     797                  BRA     NEXTPAGEMAN
00002118                           798  
00002118  48E7 FFFF                799  HELP            MOVEM.L A0-A7/D0-D7,-(SP)
0000211C                           800  
0000211C  49F8 3000                801                  LEA     HELPPTR,A4          ; pointer to string table
00002120  4BF8 4800                802                  LEA     HELPSTR,A5          ; pointer to jump table
00002124  47F8 1010                803  NEXTPAGE        LEA     INPUTBUFFER,A3
00002128  5A4B                     804                  ADDA.W  #5,A3
0000212A  0C1B 0000                805                  CMPI.B  #NULL,(A3)+
0000212E  6600 000A                806                  BNE     CMPSTR2
00002132  0C13 0000                807                  CMPI.B  #NULL,(A3)
00002136  6700 0128                808                  BEQ     HELPONLY
0000213A  534B                     809  CMPSTR2         SUBA.W  #1,A3
0000213C  4EB8 2080                810                  JSR     COMPARESTRING
00002140                           811                  
00002140  0C04 0001                812  CHECK           CMPI.B  #1,D4
00002144  6700 000E                813                  BEQ     MANPAGEJMP
00002148  584D                     814                  ADDA.W  #4,A5
0000214A  BAFC 4834                815                  CMP.W  #$4834,A5
0000214E  6700 0110                816                  BEQ     HELPONLY
00002152  60D0                     817                  BRA     NEXTPAGE
00002154                           818                  
00002154  2C55                     819  MANPAGEJMP      MOVE.L  (A5),A6
00002156  4E96                     820                  JSR     (A6)
00002158  6000 0110                821                  BRA     ENDHELP
0000215C                           822  
0000215C  48E7 FFFF                823  HELPOUT         MOVEM.L A0-A7/D0-D7,-(SP)
00002160  43F8 5000                824                  LEA     HELPMANPAGE,A1
00002164  103C 000E                825                  MOVE.B  #14,D0
00002168  4E4F                     826                  TRAP    #15
0000216A  4CDF FFFF                827                  MOVEM.L (SP)+,A0-A7/D0-D7
0000216E  4E75                     828                  RTS
00002170                           829                  
00002170  48E7 FFFF                830  MDSPOUT         MOVEM.L A0-A7/D0-D7,-(SP)
00002174  43F8 51C0                831                  LEA     MDSPMANPAGE,A1
00002178  103C 000E                832                  MOVE.B  #14,D0
0000217C  4E4F                     833                  TRAP    #15
0000217E  4CDF FFFF                834                  MOVEM.L (SP)+,A0-A7/D0-D7
00002182  4E75                     835                  RTS
00002184                           836                  
00002184  48E7 FFFF                837  SORTWOUT        MOVEM.L A0-A7/D0-D7,-(SP)
00002188  43F8 543C                838                  LEA     SORTWMANPAGE,A1
0000218C  103C 000E                839                  MOVE.B  #14,D0
00002190  4E4F                     840                  TRAP    #15
00002192  4CDF FFFF                841                  MOVEM.L (SP)+,A0-A7/D0-D7
00002196  4E75                     842                  RTS
00002198                           843                  
00002198  48E7 FFFF                844  MMOUT           MOVEM.L A0-A7/D0-D7,-(SP)
0000219C  43F8 5704                845                  LEA     MMMANPAGE,A1
000021A0  103C 000E                846                  MOVE.B  #14,D0
000021A4  4E4F                     847                  TRAP    #15
000021A6  4CDF FFFF                848                  MOVEM.L (SP)+,A0-A7/D0-D7
000021AA  4E75                     849                  RTS
000021AC                           850                  
000021AC  48E7 FFFF                851  MSOUT           MOVEM.L A0-A7/D0-D7,-(SP)
000021B0  43F8 5952                852                  LEA     MSMANPAGE,A1
000021B4  103C 000E                853                  MOVE.B  #14,D0
000021B8  4E4F                     854                  TRAP    #15
000021BA  4CDF FFFF                855                  MOVEM.L (SP)+,A0-A7/D0-D7
000021BE  4E75                     856                  RTS
000021C0                           857                  
000021C0  48E7 FFFF                858  BFOUT           MOVEM.L A0-A7/D0-D7,-(SP)
000021C4  43F8 5B6E                859                  LEA     BFMANPAGE,A1
000021C8  103C 000E                860                  MOVE.B  #14,D0
000021CC  4E4F                     861                  TRAP    #15
000021CE  4CDF FFFF                862                  MOVEM.L (SP)+,A0-A7/D0-D7
000021D2  4E75                     863                  RTS
000021D4                           864                  
000021D4  48E7 FFFF                865  BMOVOUT         MOVEM.L A0-A7/D0-D7,-(SP)
000021D8  43F8 5E5B                866                  LEA     BMOVMANPAGE,A1
000021DC  103C 000E                867                  MOVE.B  #14,D0
000021E0  4E4F                     868                  TRAP    #15
000021E2  4CDF FFFF                869                  MOVEM.L (SP)+,A0-A7/D0-D7
000021E6  4E75                     870                  RTS
000021E8                           871                  
000021E8  48E7 FFFF                872  BTSTOUT         MOVEM.L A0-A7/D0-D7,-(SP)
000021EC  43F8 605A                873                  LEA     BTSTMANPAGE,A1
000021F0  103C 000E                874                  MOVE.B  #14,D0
000021F4  4E4F                     875                  TRAP    #15
000021F6  4CDF FFFF                876                  MOVEM.L (SP)+,A0-A7/D0-D7
000021FA  4E75                     877                  RTS
000021FC                           878                  
000021FC  48E7 FFFF                879  BSCHOUT         MOVEM.L A0-A7/D0-D7,-(SP)
00002200  43F8 635B                880                  LEA     BSCHMANPAGE,A1
00002204  103C 000E                881                  MOVE.B  #14,D0
00002208  4E4F                     882                  TRAP    #15
0000220A  4CDF FFFF                883                  MOVEM.L (SP)+,A0-A7/D0-D7
0000220E  4E75                     884                  RTS
00002210                           885                  
00002210  48E7 FFFF                886  GOOUT           MOVEM.L A0-A7/D0-D7,-(SP)
00002214  43F8 65EF                887                  LEA     GOMANPAGE,A1
00002218  103C 000E                888                  MOVE.B  #14,D0
0000221C  4E4F                     889                  TRAP    #15
0000221E  4CDF FFFF                890                  MOVEM.L (SP)+,A0-A7/D0-D7
00002222  4E75                     891                  RTS
00002224                           892                  
00002224  48E7 FFFF                893  DFOUT           MOVEM.L A0-A7/D0-D7,-(SP)
00002228  43F8 67AF                894                  LEA     DFMANPAGE,A1
0000222C  103C 000E                895                  MOVE.B  #14,D0
00002230  4E4F                     896                  TRAP    #15
00002232  4CDF FFFF                897                  MOVEM.L (SP)+,A0-A7/D0-D7
00002236  4E75                     898                  RTS
00002238                           899                  
00002238  48E7 FFFF                900  EXITOUT         MOVEM.L A0-A7/D0-D7,-(SP)
0000223C  43F8 69DD                901                  LEA     EXITMANPAGE,A1
00002240  103C 000E                902                  MOVE.B  #14,D0
00002244  4E4F                     903                  TRAP    #15
00002246  4CDF FFFF                904                  MOVEM.L (SP)+,A0-A7/D0-D7
0000224A  4E75                     905                  RTS
0000224C                           906                  
0000224C  48E7 FFFF                907  MANOUT          MOVEM.L A0-A7/D0-D7,-(SP)
00002250  43F8 6B98                908                  LEA     MANMANPAGE,A1
00002254  103C 000E                909                  MOVE.B  #14,D0
00002258  4E4F                     910                  TRAP    #15
0000225A  4CDF FFFF                911                  MOVEM.L (SP)+,A0-A7/D0-D7
0000225E  4E75                     912                  RTS
00002260                           913                  
00002260  43F8 1191                914  HELPONLY        LEA     HELPMSG,A1
00002264  103C 000E                915                  MOVE.B  #14,D0
00002268  4E4F                     916                  TRAP    #15
0000226A                           917                  
0000226A  4CDF FFFF                918  ENDHELP         MOVEM.L (SP)+,A0-A7/D0-D7
0000226E  4E75                     919                  RTS
00002270                           920                  
00002270                           921  *-----------------------------------------------------------
00002270                           922  * Check for Dollarsign and Convert Argument to Hex
00002270                           923  * A0 = ptr to command buffer, incremented by INDEX
00002270                           924  * D3 = output               A4 = ptr to output
00002270                           925  * D2 = 1 - INVALID ADDRESS, 0 - VALID ADDRESS
00002270                           926  * D4 = 0 - HEX VALUE, 1 - NON HEX VALUE
00002270                           927  *-----------------------------------------------------------
00002270  48E7 C7F7                928  CHKDOLLAR   MOVEM.L A0-A3/A5-A7/D0-D1/D5-D7,-(SP)
00002274  4282                     929              CLR.L   D2
00002276  4283                     930              CLR.L   D3
00002278                           931              
00002278  0C10 0024                932              CMPI.B  #HEX,(A0)
0000227C  6700 0006                933              BEQ     DOLLARSIGN
00002280  6000 0004                934              BRA     ARGPTR
00002284  5248                     935  DOLLARSIGN  ADDA.W  #1,A0         
00002286  2A48                     936  ARGPTR      MOVEA.L A0,A5
00002288                           937  
00002288  5203                     938  CMPNULL     ADDI.B  #1,D3
0000228A  0C18 0000                939              CMPI.B  #NULL,(A0)+
0000228E  6700 0004                940              BEQ     ENDPTR
00002292  60F4                     941              BRA     CMPNULL
00002294  5303                     942  ENDPTR      SUBI.B  #1,D3
00002296  5348                     943              SUBA.W  #1,A0
00002298  2C48                     944              MOVEA.L A0,A6
0000229A  0C03 0008                945              CMPI.B  #8,D3
0000229E  6F00 0012                946              BLE     SAFE
000022A2  7401                     947              MOVE.L  #1,D2
000022A4  43F8 1149                948              LEA     ADDRERROR,A1
000022A8  103C 000E                949              MOVE.B  #14,D0
000022AC  4E4F                     950              TRAP    #15
000022AE  6000 000A                951              BRA     INVALIDADDR
000022B2                           952                   
000022B2  7400                     953  SAFE        MOVE.L  #0,D2
000022B4  4EB9 0000272A            954              JSR     ASCII2HEX
000022BA                           955  
000022BA  4CDF EFE3                956  INVALIDADDR MOVEM.L (SP)+,A0-A3/A5-A7/D0-D1/D5-D7
000022BE  4E75                     957              RTS
000022C0                           958  
000022C0                           959  *-----------------------------------------------------------
000022C0                           960  * MDSP Print Loop
000022C0                           961  * A2 = ptr to beginning memory A3 = ptr to ending memory
000022C0                           962  *-----------------------------------------------------------
000022C0  48E7 FFFF                963  MDSPPRINT   MOVEM.L A0-A7/D0-D7,-(SP)
000022C4                           964  
000022C4  2A8A                     965  INCREMENT   MOVE.L  A2,(A5)
000022C6  584E                     966              ADDA.W  #4,A6
000022C8  4EB9 00002794            967              JSR     HEX2ASCII
000022CE  224C                     968              MOVEA.L A4,A1
000022D0  323C 0008                969              MOVE.W  #8,D1  
000022D4  103C 0001                970              MOVE.B  #1,D0
000022D8  4E4F                     971              TRAP    #15
000022DA  43F8 118D                972              LEA     SPACE,A1
000022DE  103C 000E                973              MOVE.B  #14,D0
000022E2  4E4F                     974              TRAP    #15
000022E4  1A92                     975              MOVE.B  (A2),(A5)
000022E6  4DF8 1128                976              LEA     BUFFER,A6
000022EA  524E                     977              ADDA.W  #1,A6
000022EC  4EB9 00002794            978              JSR     HEX2ASCII
000022F2  224C                     979              MOVEA.L A4,A1
000022F4  323C 0002                980              MOVE.W  #2,D1  
000022F8  103C 0000                981              MOVE.B  #0,D0
000022FC  4E4F                     982              TRAP    #15
000022FE  524A                     983              ADDA.W  #1,A2
00002300  B7CA                     984              CMP.L   A2,A3
00002302  66C0                     985              BNE     INCREMENT
00002304                           986              
00002304  4CDF FFFF                987              MOVEM.L (SP)+,A0-A7/D0-D7
00002308  4E75                     988              RTS
0000230A                           989  
0000230A                           990  
0000230A                           991  *-----------------------------------------------------------
0000230A                           992  * MDSP (Memory Display) - The MDSP (Memory Display) command
0000230A                           993  * outputs the address and memory contents from <address1> to
0000230A                           994  * <address2>. The MDSP (Memory Display) command ALSO outputs
0000230A                           995  * the address and memory contents from <address1> to <address1 + 16bytes>
0000230A                           996  *-----------------------------------------------------------
0000230A  48E7 FFFF                997  MDSP        MOVEM.L A0-A7/D0-D7,-(SP)
0000230E                           998              
0000230E  4283                     999              CLR.L   D3
00002310  4EB9 000026E8           1000              JSR     ARGV
00002316  41F8 1060               1001              LEA     CMDBUFFER,A0
0000231A  D0FC 000C               1002              ADDA.W  #INDEX,A0
0000231E                          1003              
0000231E  4EB8 2270               1004              JSR     CHKDOLLAR
00002322                          1005              
00002322  21D4 1100               1006              MOVE.L  (A4),$1100
00002326                          1007              
00002326  0C02 0002               1008              CMPI.B  #2,D2
0000232A  6700 000A               1009              BEQ     ARG1
0000232E                          1010              
0000232E  0C02 0003               1011              CMPI.B  #3,D2
00002332  6700 001E               1012              BEQ     ARG2
00002336                          1013              
00002336  41F8 1110               1014  ARG1        LEA     ASCIIBUFFER,A0
0000233A  2450                    1015              MOVEA.L (A0),A2
0000233C  4BF8 1128               1016              LEA     BUFFER,A5
00002340  4DF8 1128               1017              LEA     BUFFER,A6
00002344  264A                    1018              MOVEA.L A2,A3
00002346  D6FC 0010               1019              ADDA.W  #16,A3
0000234A                          1020              
0000234A  4EB8 22C0               1021              JSR     MDSPPRINT
0000234E                          1022              
0000234E  6000 002E               1023              BRA     MDSPDONE
00002352                          1024           
00002352  41F8 1060               1025  ARG2        LEA     CMDBUFFER,A0
00002356  103C 0002               1026              MOVE.B  #2,D0
0000235A  123C 000C               1027              MOVE.B  #INDEX,D1
0000235E  C2C0                    1028              MULU    D0,D1
00002360  D0C1                    1029              ADDA.W  D1,A0
00002362                          1030              
00002362  4EB8 2270               1031              JSR     CHKDOLLAR
00002366                          1032              
00002366  41F8 1100               1033              LEA     $1100,A0
0000236A  43F8 1110               1034              LEA     ASCIIBUFFER,A1
0000236E  2450                    1035              MOVEA.L (A0),A2
00002370  2651                    1036              MOVEA.L (A1),A3
00002372  4BF8 1128               1037              LEA     BUFFER,A5
00002376  4DF8 1128               1038              LEA     BUFFER,A6
0000237A                          1039              
0000237A  4EB8 22C0               1040              JSR     MDSPPRINT
0000237E                          1041              
0000237E  4CDF FFFF               1042  MDSPDONE    MOVEM.L (SP)+,A0-A7/D0-D7
00002382  4E75                    1043              RTS
00002384                          1044  
00002384                          1045  *-----------------------------------------------------------
00002384                          1046  * Bubble Sort
00002384                          1047  * A0 - ptr to beginning memory A1 = ptr to ending memory
00002384                          1048  * D1 = 1 - Ascending, 0 - Descending 
00002384                          1049  *-----------------------------------------------------------
00002384  48E7 FFFF               1050  BUBBLESORT  MOVEM.L A0-A7/D0-D7,-(SP)
00002388                          1051              
00002388  2448                    1052              MOVE.L  A0,A2
0000238A  204A                    1053  BUBBLELOOP  MOVE.L  A2,A0
0000238C                          1054  
0000238C  0C01 0001               1055  BUBBLECMP   CMPI.B  #1,D1
00002390  6700 000A               1056              BEQ     DESCEND
00002394  B148                    1057              CMP.W   (A0)+,(A0)+
00002396  6212                    1058              BHI.S   BUBBLESWAP
00002398  6000 0006               1059              BRA     SORT
0000239C                          1060        
0000239C  B148                    1061  DESCEND     CMP.W   (A0)+,(A0)+
0000239E  650A                    1062              BLO.S   BUBBLESWAP
000023A0                          1063              
000023A0  5588                    1064  SORT        SUBQ.L  #2,A0
000023A2  B3C8                    1065              CMP.L   A0,A1
000023A4  66E6                    1066              BNE     BUBBLECMP
000023A6  6000 000A               1067              BRA     BUBBLEDN
000023AA  2020                    1068  BUBBLESWAP  MOVE.L  -(A0),D0
000023AC  4840                    1069              SWAP.W  D0
000023AE  2080                    1070              MOVE.L  D0,(A0)
000023B0  60D8                    1071              BRA     BUBBLELOOP
000023B2                          1072  
000023B2  4CDF FFFF               1073  BUBBLEDN    MOVEM.L (SP)+,A0-A7/D0-D7
000023B6  4E75                    1074              RTS
000023B8                          1075  
000023B8                          1076  *-----------------------------------------------------------
000023B8                          1077  * SORTW (Sort) - The SORT command sorts a block of memory. The starting
000023B8                          1078  * address <address1> and the ending address <address2> of the memory block
000023B8                          1079  * are specified in the command. The order (A or D) specifies whether the list is 
000023B8                          1080  * sorted in Ascending or Descending order. (The size of the data to be sorted is a word)
000023B8                          1081  *-----------------------------------------------------------
000023B8  48E7 FFFF               1082  SORTW       MOVEM.L A0-A7/D0-D7,-(SP)
000023BC                          1083  
000023BC  4EB9 000026E8           1084              JSR     ARGV
000023C2  41F8 1060               1085              LEA     CMDBUFFER,A0
000023C6  D0FC 000C               1086              ADDA.W  #INDEX,A0
000023CA                          1087              
000023CA  4EB8 2270               1088              JSR     CHKDOLLAR
000023CE  B43C 0001               1089              CMP.B   #1,D2
000023D2  6700 005E               1090              BEQ     SORTWDONE
000023D6  2254                    1091              MOVEA.L (A4),A1
000023D8                          1092              
000023D8  41F8 1060               1093              LEA     CMDBUFFER,A0
000023DC  103C 0002               1094              MOVE.B  #2,D0
000023E0  123C 000C               1095              MOVE.B  #INDEX,D1
000023E4  C2C0                    1096              MULU    D0,D1
000023E6  D0C1                    1097              ADDA.W  D1,A0
000023E8                          1098              
000023E8  4EB8 2270               1099              JSR     CHKDOLLAR
000023EC  B43C 0001               1100              CMP.B   #1,D2
000023F0  6700 0040               1101              BEQ     SORTWDONE
000023F4  2049                    1102              MOVEA.L A1,A0
000023F6  2254                    1103              MOVEA.L (A4),A1
000023F8                          1104              
000023F8  45F8 1060               1105              LEA     CMDBUFFER,A2
000023FC  103C 0003               1106              MOVE.B  #3,D0
00002400  123C 000C               1107              MOVE.B  #INDEX,D1
00002404  C2C0                    1108              MULU    D0,D1
00002406  D4C1                    1109              ADDA.W  D1,A2
00002408                          1110              
00002408  0C12 0041               1111              CMP.B   #'A',(A2)
0000240C  6700 0018               1112              BEQ     ASCENDING
00002410                          1113              
00002410  0C12 0044               1114              CMP.B   #'D',(A2)
00002414  6700 0016               1115              BEQ     DESCENDING
00002418                          1116              
00002418  43F8 1134               1117              LEA     ERRORMSG,A1
0000241C  103C 000E               1118              MOVE.B  #14,D0
00002420  4E4F                    1119              TRAP    #15
00002422  6000 000E               1120              BRA     SORTWDONE
00002426                          1121              
00002426  7201                    1122  ASCENDING   MOVE.L  #1,D1
00002428  6000 0004               1123              BRA     BSORT
0000242C                          1124              
0000242C  7200                    1125  DESCENDING  MOVE.L  #0,D1
0000242E                          1126              
0000242E  4EB8 2384               1127  BSORT       JSR     BUBBLESORT
00002432                          1128          
00002432  4CDF FFFF               1129  SORTWDONE   MOVEM.L (SP)+,A0-A7/D0-D7
00002436  4E75                    1130              RTS
00002438                          1131  
00002438                          1132  *-----------------------------------------------------------
00002438                          1133  * MM Print Loop
00002438                          1134  * A2 = ptr to beginning memory A3 = ptr to ending memory
00002438                          1135  * D2 = SIZE OF MEMORY OUTPUT D4 = LENGTH OF OUTPUT
00002438                          1136  *-----------------------------------------------------------
00002438  48E7 FFFF               1137  MMPRINT     MOVEM.L A0-A7/D0-D7,-(SP)
0000243C                          1138  
0000243C  2A8A                    1139  INCREMENT2  MOVE.L  A2,(A5)
0000243E  584E                    1140              ADDA.W  #4,A6
00002440  4EB9 00002794           1141              JSR     HEX2ASCII
00002446                          1142              
00002446  224C                    1143              MOVEA.L A4,A1
00002448  123C 0008               1144              MOVE.B  #8,D1
0000244C  103C 0001               1145              MOVE.B  #1,D0
00002450  4E4F                    1146              TRAP    #15
00002452                          1147              
00002452  43F8 118D               1148              LEA     SPACE,A1
00002456  103C 000E               1149              MOVE.B  #14,D0
0000245A  4E4F                    1150              TRAP    #15
0000245C                          1151              
0000245C  B43C 0001               1152              CMP.B   #1,D2
00002460  6700 0012               1153              BEQ     BYTEPRINT
00002464                          1154              
00002464  B43C 0002               1155              CMP.B   #2,D2
00002468  6700 0066               1156              BEQ     WORDPRINT
0000246C                          1157              
0000246C  B43C 0004               1158              CMP.B   #4,D2
00002470  6700 00BA               1159              BEQ     LONGPRINT
00002474                          1160              
00002474  1A92                    1161  BYTEPRINT   MOVE.B  (A2),(A5)
00002476  4DF8 1128               1162              LEA     BUFFER,A6
0000247A  DCC2                    1163              ADDA.W  D2,A6
0000247C  4EB9 00002794           1164              JSR     HEX2ASCII
00002482  224C                    1165              MOVEA.L A4,A1
00002484  2204                    1166              MOVE.L  D4,D1  
00002486  103C 0001               1167              MOVE.B  #1,D0
0000248A  4E4F                    1168              TRAP    #15
0000248C                          1169              
0000248C  43F8 118D               1170              LEA     SPACE,A1
00002490  103C 000E               1171              MOVE.B  #14,D0
00002494  4E4F                    1172              TRAP    #15
00002496                          1173              
00002496  43F8 1128               1174              LEA     BUFFER,A1
0000249A  103C 0002               1175              MOVE.B  #2,D0
0000249E  4E4F                    1176              TRAP    #15
000024A0                          1177              
000024A0  0C11 002E               1178              CMPI.B  #'.',(A1)
000024A4  6700 00EA               1179              BEQ     MMPRINTDN
000024A8                          1180              
000024A8  B23C 0000               1181              CMP.B   #0,D1
000024AC  6700 001C               1182              BEQ     BYTECONT
000024B0                          1183  
000024B0  B204                    1184              CMP.B   D4,D1
000024B2  6600 00D2               1185              BNE     MMERROR
000024B6                          1186              
000024B6  4BF8 1128               1187              LEA     BUFFER,A5
000024BA  4DF8 1128               1188              LEA     BUFFER,A6
000024BE  DCC4                    1189              ADDA.W  D4,A6
000024C0  4EB9 0000272A           1190              JSR     ASCII2HEX
000024C6  564C                    1191              ADDA.W  #3,A4
000024C8  1494                    1192              MOVE.B  (A4),(A2)
000024CA                          1193              
000024CA  D4C2                    1194  BYTECONT    ADDA.W  D2,A2
000024CC  6000 FF6E               1195              BRA     INCREMENT2
000024D0                          1196              
000024D0  3A92                    1197  WORDPRINT   MOVE.W  (A2),(A5)
000024D2  4DF8 1128               1198              LEA     BUFFER,A6
000024D6  DCC2                    1199              ADDA.W  D2,A6
000024D8  4EB9 00002794           1200              JSR     HEX2ASCII
000024DE  224C                    1201              MOVEA.L A4,A1
000024E0  2204                    1202              MOVE.L  D4,D1  
000024E2  103C 0001               1203              MOVE.B  #1,D0
000024E6  4E4F                    1204              TRAP    #15
000024E8                          1205              
000024E8  43F8 118D               1206              LEA     SPACE,A1
000024EC  103C 000E               1207              MOVE.B  #14,D0
000024F0  4E4F                    1208              TRAP    #15
000024F2                          1209              
000024F2  43F8 1128               1210              LEA     BUFFER,A1
000024F6  103C 0002               1211              MOVE.B  #2,D0
000024FA  4E4F                    1212              TRAP    #15
000024FC                          1213              
000024FC  0C11 002E               1214              CMPI.B  #'.',(A1)
00002500  6700 008E               1215              BEQ     MMPRINTDN
00002504                          1216  
00002504  B23C 0000               1217              CMP.B   #0,D1
00002508  6700 001C               1218              BEQ     WORDCONT    
0000250C                          1219  
0000250C  B204                    1220              CMP.B   D4,D1
0000250E  6600 0076               1221              BNE     MMERROR
00002512                          1222              
00002512  4BF8 1128               1223              LEA     BUFFER,A5
00002516  4DF8 1128               1224              LEA     BUFFER,A6
0000251A  DCC4                    1225              ADDA.W  D4,A6
0000251C  4EB9 0000272A           1226              JSR     ASCII2HEX
00002522  544C                    1227              ADDA.W  #2,A4
00002524  3494                    1228              MOVE.W (A4),(A2)
00002526                          1229              
00002526  D4C2                    1230  WORDCONT    ADDA.W  D2,A2
00002528  6000 FF12               1231              BRA     INCREMENT2
0000252C                          1232              
0000252C  2A92                    1233  LONGPRINT   MOVE.L  (A2),(A5)
0000252E  4DF8 1128               1234              LEA     BUFFER,A6
00002532  DCC2                    1235              ADDA.W  D2,A6
00002534  4EB9 00002794           1236              JSR     HEX2ASCII
0000253A  224C                    1237              MOVEA.L A4,A1
0000253C  2204                    1238              MOVE.L  D4,D1  
0000253E  103C 0001               1239              MOVE.B  #1,D0
00002542  4E4F                    1240              TRAP    #15
00002544                          1241              
00002544  43F8 118D               1242              LEA     SPACE,A1
00002548  103C 000E               1243              MOVE.B  #14,D0
0000254C  4E4F                    1244              TRAP    #15
0000254E                          1245              
0000254E  43F8 1128               1246              LEA     BUFFER,A1
00002552  103C 0002               1247              MOVE.B  #2,D0
00002556  4E4F                    1248              TRAP    #15
00002558                          1249              
00002558  0C11 002E               1250              CMPI.B  #'.',(A1)
0000255C  6700 0032               1251              BEQ     MMPRINTDN
00002560                          1252              
00002560  B23C 0000               1253              CMP.B   #0,D1
00002564  6700 001A               1254              BEQ     LONGCONT
00002568                          1255          
00002568  B204                    1256              CMP.B   D4,D1
0000256A  6600 001A               1257              BNE     MMERROR
0000256E                          1258              
0000256E  4BF8 1128               1259              LEA     BUFFER,A5
00002572  4DF8 1128               1260              LEA     BUFFER,A6
00002576  DCC4                    1261              ADDA.W  D4,A6
00002578  4EB9 0000272A           1262              JSR     ASCII2HEX
0000257E  2494                    1263              MOVE.L  (A4),(A2)
00002580                          1264              
00002580  D4C2                    1265  LONGCONT    ADDA.W  D2,A2
00002582  6000 FEB8               1266              BRA     INCREMENT2
00002586                          1267  
00002586  43F8 1134               1268  MMERROR     LEA     ERRORMSG,A1
0000258A  103C 000E               1269              MOVE.B  #14,D0
0000258E  4E4F                    1270              TRAP    #15    
00002590                          1271              
00002590  4CDF FFFF               1272  MMPRINTDN   MOVEM.L (SP)+,A0-A7/D0-D7
00002594  4E75                    1273              RTS
00002596                          1274  
00002596                          1275  
00002596                          1276  *-----------------------------------------------------------
00002596                          1277  * MM (Memory Modify) - MM (Memory Modify) command is used to display memory and,
00002596                          1278  * as required, modify data or enter new data. The size (bye, word, long word) controls
00002596                          1279  * the number of bytes displayed for each address.
00002596                          1280  *
00002596                          1281  *-----------------------------------------------------------
00002596  48E7 FFFF               1282  MM          MOVEM.L A0-A7/D0-D7,-(SP)
0000259A                          1283  
0000259A  4EB9 000026E8           1284              JSR     ARGV
000025A0  41F8 1060               1285              LEA     CMDBUFFER,A0
000025A4  D0FC 000C               1286              ADDA.W  #INDEX,A0
000025A8                          1287              
000025A8  4EB8 2270               1288              JSR     CHKDOLLAR
000025AC  B43C 0001               1289              CMP.B   #1,D2
000025B0  6700 0078               1290              BEQ     MMDONE
000025B4  2254                    1291              MOVEA.L (A4),A1
000025B6                          1292              
000025B6  45F8 1060               1293              LEA     CMDBUFFER,A2
000025BA  103C 0002               1294              MOVE.B  #2,D0
000025BE  123C 000C               1295              MOVE.B  #INDEX,D1
000025C2  C2C0                    1296              MULU    D0,D1
000025C4  D4C1                    1297              ADDA.W  D1,A2
000025C6                          1298              
000025C6  0C12 0042               1299              CMP.B   #'B',(A2)
000025CA  6700 0020               1300              BEQ     BYTE
000025CE                          1301              
000025CE  0C12 0057               1302              CMP.B   #'W',(A2)
000025D2  6700 002E               1303              BEQ     WORD
000025D6                          1304              
000025D6  0C12 004C               1305              CMP.B   #'L',(A2)
000025DA  6700 003C               1306              BEQ     LONG
000025DE                          1307              
000025DE  43F8 1134               1308              LEA     ERRORMSG,A1
000025E2  103C 000E               1309              MOVE.B  #14,D0
000025E6  4E4F                    1310              TRAP    #15
000025E8  6000 0040               1311              BRA     MMDONE
000025EC                          1312              
000025EC  7401                    1313  BYTE        MOVE.L  #1,D2
000025EE  7802                    1314              MOVE.L  #2,D4
000025F0  2449                    1315              MOVEA.L A1,A2
000025F2  4BF8 1128               1316              LEA     BUFFER,A5
000025F6  4DF8 1128               1317              LEA     BUFFER,A6
000025FA  4EB8 2438               1318              JSR     MMPRINT
000025FE  6000 002A               1319              BRA     MMDONE
00002602                          1320              
00002602  7402                    1321  WORD        MOVE.L  #2,D2
00002604  7804                    1322              MOVE.L  #4,D4
00002606  2449                    1323              MOVEA.L A1,A2
00002608  4BF8 1128               1324              LEA     BUFFER,A5
0000260C  4DF8 1128               1325              LEA     BUFFER,A6
00002610  4EB8 2438               1326              JSR     MMPRINT
00002614  6000 0014               1327              BRA     MMDONE
00002618                          1328              
00002618  7404                    1329  LONG        MOVE.L  #4,D2
0000261A  7808                    1330              MOVE.L  #8,D4
0000261C  2449                    1331              MOVEA.L A1,A2
0000261E  4BF8 1128               1332              LEA     BUFFER,A5
00002622  4DF8 1128               1333              LEA     BUFFER,A6
00002626  4EB8 2438               1334              JSR     MMPRINT
0000262A                          1335  
0000262A  4CDF FFFF               1336  MMDONE      MOVEM.L (SP)+,A0-A7/D0-D7
0000262E  4E75                    1337              RTS
00002630                          1338  
00002630                          1339  *-----------------------------------------------------------
00002630                          1340  * MS (Memory Set) - The Memory Set (MS) command alters memory by setting data into
00002630                          1341  * the address specified. The data can take the form of ASCII string or hexadecimal
00002630                          1342  * data.
00002630                          1343  *
00002630                          1344  *-----------------------------------------------------------
00002630  48E7 FFFF               1345  MS          MOVEM.L A0-A7/D0-D7,-(SP)
00002634                          1346  
00002634  4EB9 000026E8           1347              JSR     ARGV
0000263A  41F8 1060               1348              LEA     CMDBUFFER,A0
0000263E  D0FC 000C               1349              ADDA.W  #INDEX,A0
00002642                          1350              
00002642  4EB8 2270               1351              JSR     CHKDOLLAR
00002646  B83C 0001               1352              CMP.B   #1,D4
0000264A  6700 0040               1353              BEQ     MSERROR
0000264E  B43C 0001               1354              CMP.B   #1,D2
00002652  6700 0042               1355              BEQ     MSDONE
00002656  2254                    1356              MOVEA.L (A4),A1
00002658                          1357              
00002658  41F8 1060               1358              LEA     CMDBUFFER,A0
0000265C  103C 0002               1359              MOVE.B  #2,D0
00002660  123C 000C               1360              MOVE.B  #INDEX,D1
00002664  C2C0                    1361              MULU    D0,D1
00002666  D0C1                    1362              ADDA.W  D1,A0
00002668                          1363              
00002668  4EB8 2270               1364              JSR     CHKDOLLAR
0000266C  B83C 0001               1365              CMP.B   #1,D4
00002670  6700 0016               1366              BEQ     ASCIIDATA
00002674  B43C 0001               1367              CMP.B   #1,D2
00002678  6700 001C               1368              BEQ     MSDONE
0000267C  2049                    1369              MOVEA.L A1,A0
0000267E  0C1C 0000               1370  INCPTR      CMP.B   #NULL,(A4)+
00002682  67FA                    1371              BEQ     INCPTR
00002684  534C                    1372              SUBA.W  #1,A4
00002686  2294                    1373              MOVE.L  (A4),(A1)
00002688                          1374              
00002688                          1375  ASCIIDATA
00002688                          1376              
00002688  6000 000C               1377              BRA     MSDONE
0000268C                          1378              
0000268C  43F8 1134               1379  MSERROR     LEA     ERRORMSG,A1
00002690  103C 000E               1380              MOVE.B  #14,D0
00002694  4E4F                    1381              TRAP    #15
00002696                          1382          
00002696  4CDF FFFF               1383  MSDONE      MOVEM.L (SP)+,A0-A7/D0-D7
0000269A  4E75                    1384              RTS
0000269C                          1385  
0000269C                          1386  *-----------------------------------------------------------
0000269C                          1387  * BF (Block Fill) - The Block Fill (BF) command fills memory starting with the word
0000269C                          1388  * boundary <address1> through <address2>. Both <address1> and <address2> must be even
0000269C                          1389  * addresses. This command only fills with a word-size (2 bytes) data pattern. If an entire
0000269C                          1390  * word-size data pattern is not entered, the pattern is right justified and leading zeros are inserted.
0000269C                          1391  *-----------------------------------------------------------
0000269C  48E7 FFFF               1392  BF      MOVEM.L A0-A7/D0-D7,-(SP)
000026A0                          1393          
000026A0  4CDF FFFF               1394          MOVEM.L (SP)+,A0-A7/D0-D7
000026A4  4E75                    1395          RTS
000026A6                          1396  
000026A6                          1397  *-----------------------------------------------------------
000026A6                          1398  * BMOV (Block Move) - The Block Move (BMOV) command is used to move (duplicate) blocks
000026A6                          1399  * of memory from one area to another.
000026A6                          1400  *
000026A6                          1401  *
000026A6                          1402  *-----------------------------------------------------------
000026A6  48E7 FFFF               1403  BMOV    MOVEM.L A0-A7/D0-D7,-(SP)
000026AA                          1404          
000026AA  4CDF FFFF               1405          MOVEM.L (SP)+,A0-A7/D0-D7
000026AE  4E75                    1406          RTS
000026B0                          1407  
000026B0                          1408  *-----------------------------------------------------------
000026B0                          1409  * BTST (Block Test) - The Block Test (BT) command is a destructive test of a block of memory
000026B0                          1410  * beginning at <address1> through <address2>. If this test runs to completion without detecting
000026B0                          1411  * errors, and display a message that no error was detected. If memory problems are found, a message
000026B0                          1412  * is displayed indicating the address, the data stored, and the data read of the failing memory.
000026B0                          1413  *-----------------------------------------------------------
000026B0  48E7 FFFF               1414  BTST    MOVEM.L A0-A7/D0-D7,-(SP)
000026B4                          1415          
000026B4  4CDF FFFF               1416          MOVEM.L (SP)+,A0-A7/D0-D7
000026B8  4E75                    1417          RTS
000026BA                          1418  
000026BA                          1419  *-----------------------------------------------------------
000026BA                          1420  * BSCH (Block Search) - The BSCH (Block Search) command is used to search a literal string in a 
000026BA                          1421  * memory block starting at <address1> through <address2> both inclusive. In BSCH command, if search
000026BA                          1422  * finds matching data, the data and address(es) must be displayed.
000026BA                          1423  *
000026BA                          1424  *-----------------------------------------------------------
000026BA  48E7 FFFF               1425  BSCH    MOVEM.L A0-A7/D0-D7,-(SP)
000026BE                          1426          
000026BE  4CDF FFFF               1427          MOVEM.L (SP)+,A0-A7/D0-D7
000026C2  4E75                    1428          RTS
000026C4                          1429  
000026C4                          1430  *-----------------------------------------------------------
000026C4                          1431  * GO (Execute Program) - The GO command is used to start execution from a given address.
000026C4                          1432  *
000026C4                          1433  *
000026C4                          1434  *
000026C4                          1435  *-----------------------------------------------------------
000026C4  48E7 FFFF               1436  GO      MOVEM.L A0-A7/D0-D7,-(SP)
000026C8                          1437          
000026C8  4CDF FFFF               1438          MOVEM.L (SP)+,A0-A7/D0-D7
000026CC  4E75                    1439          RTS
000026CE                          1440  
000026CE                          1441  *-----------------------------------------------------------
000026CE                          1442  * DF (Display Formatted Registers) - The Display Formatted Registers (DF) command is used
000026CE                          1443  * to display the MC68000 processor registers. This command should display current PC, SR, US,
000026CE                          1444  * SS and D, A registers. Note that since your program will be using D and A registers, those 
000026CE                          1445  * changed values should not be shown to the user. Thus, you must save all D and A register
000026CE                          1446  * values before any of your subroutines.
000026CE                          1447  *-----------------------------------------------------------
000026CE  48E7 FFFF               1448  DF      MOVEM.L A0-A7/D0-D7,-(SP)
000026D2                          1449          
000026D2  4CDF FFFF               1450          MOVEM.L (SP)+,A0-A7/D0-D7
000026D6  4E75                    1451          RTS
000026D8                          1452  
000026D8                          1453  *-----------------------------------------------------------
000026D8                          1454  * EXIT (Exit Monitor Program) - The EXIT command terminates/exits your Monitor program.
000026D8                          1455  *
000026D8                          1456  *
000026D8                          1457  *
000026D8                          1458  *-----------------------------------------------------------
000026D8  48E7 FFFF               1459  EXIT    MOVEM.L A0-A7/D0-D7,-(SP)
000026DC                          1460  
000026DC  103C 0009               1461          MOVE.B  #9,D0
000026E0  4E4F                    1462          TRAP    #15
000026E2                          1463          
000026E2  4CDF FFFF               1464          MOVEM.L (SP)+,A0-A7/D0-D7
000026E6  4E75                    1465          RTS
000026E8                          1466          
000026E8                          1467  *-----------------------------------------------------------
000026E8                          1468  * ARGV Command Line Parsing Subroutine
000026E8                          1469  * Stores Commands separated by INDEX (12) in memory starting at CMDBUFFER
000026E8                          1470  * D2 = # of Arguments
000026E8                          1471  *-----------------------------------------------------------
000026E8                          1472  
000026E8  48E7 DFFF               1473  ARGV        MOVEM.L A0-A7/D0-D1/D3-D7,-(SP)
000026EC                          1474  
000026EC  41F8 1010               1475              LEA     INPUTBUFFER,A0
000026F0  43F8 1060               1476              LEA     CMDBUFFER,A1
000026F4  45F8 1060               1477              LEA     CMDBUFFER,A2
000026F8  4282                    1478              CLR.L   D2
000026FA  12D0                    1479  CHECKLOOP   MOVE.B  (A0),(A1)+
000026FC  0C10 0020               1480              CMPI.B  #SP,(A0)
00002700  6700 000C               1481              BEQ     SPFOUND
00002704  0C18 0000               1482              CMPI.B  #NULL,(A0)+
00002708  6700 0018               1483              BEQ     NULLFOUND
0000270C  60EC                    1484              BRA     CHECKLOOP
0000270E                          1485                       
0000270E  5349                    1486  SPFOUND     SUBA.W  #1,A1
00002710  12BC 0000               1487              MOVE.B  #NULL,(A1)
00002714  5249                    1488              ADDA.W  #1,A1
00002716  5248                    1489              ADDA.W  #1,A0
00002718  5202                    1490              ADDI.B  #1,D2
0000271A  D4FC 000C               1491              ADDA.W  #INDEX,A2
0000271E  224A                    1492              MOVEA.L A2,A1
00002720  60D8                    1493              BRA     CHECKLOOP
00002722                          1494      
00002722  5202                    1495  NULLFOUND   ADDI.B  #1,D2
00002724  4CDF FFFB               1496              MOVEM.L (SP)+,A0-A7/D0-D1/D3-D7
00002728  4E75                    1497              RTS
0000272A                          1498          
0000272A                          1499  *-----------------------------------------------------------
0000272A                          1500  *ASCII TO HEX CONVERSION SUBROUTINE
0000272A                          1501  * A5 = ptr to beginning address A6 = ptr to ending address
0000272A                          1502  * D3 = output D4 = 0 - HEX VALUE, 1 - NON HEX VALUE A4 = ptr to output
0000272A                          1503  *-----------------------------------------------------------
0000272A  48E7 E7F7               1504  ASCII2HEX   MOVEM.L A0-A3/A5-A7/D0-D2/D5-D7,-(SP)
0000272E                          1505              
0000272E  287C 00001110           1506              MOVEA.L #ASCIIBUFFER,A4
00002734  4283                    1507              CLR.L   D3            
00002736  4282                    1508  ASCIILOOP   CLR.L   D2           
00002738  BDCD                    1509              CMP.L   A5,A6
0000273A  6700 004C               1510              BEQ     ASCIIDONE
0000273E  141D                    1511              MOVE.B  (A5)+,D2
00002740  0C02 0030               1512              CMPI.B  #'0',D2
00002744  6D00 0032               1513              BLT     ASCIIRANGE
00002748  0C02 0046               1514              CMPI.B  #'F',D2
0000274C  6E00 002A               1515              BGT     ASCIIRANGE
00002750  0C02 0039               1516              CMPI.B  #'9',D2
00002754  6F00 0018               1517              BLE     ASCIINUMBER
00002758  0C02 0041               1518              CMPI.B  #'A',D2
0000275C  6C00 0006               1519              BGE     ASCIILETTER
00002760  6000 0016               1520              BRA     ASCIIRANGE
00002764  0402 0037               1521  ASCIILETTER SUBI.B  #$37,D2
00002768  8602                    1522              OR.B    D2,D3
0000276A  E99B                    1523              ROL.L   #4,D3
0000276C  60C8                    1524              BRA     ASCIILOOP
0000276E  0402 0030               1525  ASCIINUMBER SUBI.B  #$30,D2
00002772  8602                    1526              OR.B    D2,D3
00002774  E99B                    1527              ROL.L   #4,D3
00002776  60BE                    1528              BRA     ASCIILOOP
00002778  7801                    1529  ASCIIRANGE  MOVE.L  #1,D4
0000277A  43F8 115C               1530              LEA     ASCIIERROR,A1
0000277E  103C 000E               1531              MOVE.B  #14,D0
00002782  4E4F                    1532              TRAP    #15
00002784  6000 0008               1533              BRA     ASCIIFIN       
00002788  7800                    1534  ASCIIDONE   MOVE.L  #0,D4
0000278A  E89B                    1535              ROR.L   #4,D3
0000278C  2883                    1536              MOVE.L  D3,(A4)
0000278E                          1537              
0000278E  4CDF EFE7               1538  ASCIIFIN    MOVEM.L (SP)+,A0-A3/A5-A7/D0-D2/D5-D7
00002792  4E75                    1539              RTS
00002794                          1540  
00002794                          1541  *-----------------------------------------------------------
00002794                          1542  *HEX TO ASCII CONVERSION SUBROUTINE
00002794                          1543  * A5 = ptr to beginning address A6 = ptr to ending address
00002794                          1544  * D3 = output                   A4 = ptr to output
00002794                          1545  *-----------------------------------------------------------
00002794  48E7 EFF7               1546  HEX2ASCII   MOVEM.L A0-A3/A5-A7/D0-D2/D4-D7,-(SP)
00002798                          1547  
00002798  4282                    1548              CLR.L   D2
0000279A  4283                    1549              CLR.L   D3
0000279C  49F8 111C               1550              LEA     HEXBUFFER,A4
000027A0  4284                    1551  NEXTHEX     CLR.L   D4
000027A2  183C 0001               1552              MOVE.B  #1,D4
000027A6  BDCD                    1553              CMP.L   A5,A6
000027A8  6700 0058               1554              BEQ     HEXDONE
000027AC  1426                    1555              MOVE.B  -(A6),D2
000027AE  1602                    1556              MOVE.B  D2,D3
000027B0  1403                    1557  HEXLOOP     MOVE.B  D3,D2
000027B2  C4BC 0000000F           1558              AND.L   #$0000000F,D2
000027B8  0C02 0000               1559              CMPI.B  #$0,D2
000027BC  6D00 003A               1560              BLT     HEXRANGE
000027C0  0C02 000F               1561              CMPI.B  #$F,D2
000027C4  6E00 0032               1562              BGT     HEXRANGE
000027C8  0C02 0009               1563              CMPI.B  #$9,D2
000027CC  6F00 001C               1564              BLE     HEXNUMBER
000027D0  0C02 000A               1565              CMPI.B  #$A,D2
000027D4  6C00 0006               1566              BGE     HEXLETTER
000027D8  6000 001E               1567              BRA     HEXRANGE
000027DC  0602 0037               1568  HEXLETTER   ADDI.B  #$37,D2
000027E0  1902                    1569              MOVE.B  D2,-(A4)
000027E2  E89B                    1570              ROR.L   #4,D3
000027E4  51CC FFCA               1571              DBRA    D4,HEXLOOP
000027E8  60B6                    1572              BRA     NEXTHEX
000027EA  0602 0030               1573  HEXNUMBER   ADDI.B  #$30,D2
000027EE  1902                    1574              MOVE.B  D2,-(A4)
000027F0  E89B                    1575              ROR.L   #4,D3
000027F2  51CC FFBC               1576              DBRA    D4,HEXLOOP
000027F6  60A8                    1577              BRA     NEXTHEX
000027F8  43F8 1172               1578  HEXRANGE    LEA     HEXERROR,A1
000027FC  103C 000E               1579              MOVE.B  #14,D0
00002800  4E4F                    1580              TRAP    #15
00002802                          1581  
00002802  4CDF EFF7               1582  HEXDONE     MOVEM.L (SP)+,A0-A3/A5-A7/D0-D2/D4-D7
00002806  4E75                    1583              RTS
00002808                          1584             
00002808                          1585  * Put program code here
00002808                          1586  
00002808  FFFF FFFF               1587      SIMHALT             ; halt simulator
0000280C                          1588  
0000280C                          1589  * Put variables and constants here
0000280C                          1590  
0000280C                          1591      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDRERROR           1149
ARG1                2336
ARG2                2352
ARGPTR              2286
ARGV                26E8
ASCENDING           2426
ASCII2HEX           272A
ASCIIBUFFER         1110
ASCIIDATA           2688
ASCIIDONE           2788
ASCIIERROR          115C
ASCIIFIN            278E
ASCIILETTER         2764
ASCIILOOP           2736
ASCIINUMBER         276E
ASCIIRANGE          2778
BF                  269C
BFHDLR              4014
BFMANPAGE           5B6E
BFOUT               21C0
BFPTR               3016
BFSTR               4814
BMOV                26A6
BMOVHDLR            4018
BMOVMANPAGE         5E5B
BMOVOUT             21D4
BMOVPTR             3019
BMOVSTR             4818
BS                  8
BSCH                26BA
BSCHHDLR            4020
BSCHMANPAGE         635B
BSCHOUT             21FC
BSCHPTR             3023
BSCHSTR             4820
BSORT               242E
BTST                26B0
BTSTHDLR            401C
BTSTMANPAGE         605A
BTSTOUT             21E8
BTSTPTR             301E
BTSTSTR             481C
BUBBLECMP           238C
BUBBLEDN            23B2
BUBBLELOOP          238A
BUBBLESORT          2384
BUBBLESWAP          23AA
BUF                 900
BUFFER              1128
BYTE                25EC
BYTECONT            24CA
BYTEPRINT           2474
CHECK               2140
CHECKLOOP           26FA
CHKDOLLAR           2270
CLRCMDBUF           201C
CLRINBUF            2010
CMDBUFFER           1060
CMPNULL             2288
CMPSTR1             20FE
CMPSTR2             213A
COMPARELIST         20B2
COMPARELOOP         2086
COMPARESTRING       2080
CR                  D
DESCEND             239C
DESCENDING          242C
DF                  26CE
DFHDLR              4028
DFMANPAGE           67AF
DFOUT               2224
DFPTR               302B
DFSTR               4828
DOLLARSIGN          2284
ENDHELP             226A
ENDPTR              2294
ERROR               2074
ERRORMSG            1134
EXIT                26D8
EXITHDLR            402C
EXITMANPAGE         69DD
EXITOUT             2238
EXITPTR             302E
EXITSTR             482C
FF                  C
GO                  26C4
GOHDLR              4024
GOMANPAGE           65EF
GOOUT               2210
GOPTR               3028
GOSTR               4824
HASH                23
HDLRJMP             206A
HELP                2118
HELPHDLR            4000
HELPMANPAGE         5000
HELPMSG             1191
HELPONLY            2260
HELPOUT             215C
HELPPTR             3000
HELPSTR             4800
HEX                 24
HEX2ASCII           2794
HEXBUFFER           111C
HEXDONE             2802
HEXERROR            1172
HEXLETTER           27DC
HEXLOOP             27B0
HEXNUMBER           27EA
HEXRANGE            27F8
HT                  9
INCPTR              267E
INCREMENT           22C4
INCREMENT2          243C
INDEX               C
INPUTBUFFER         1010
INTERPRETER         2034
INVALIDADDR         22BA
LF                  A
LONG                2618
LONGCONT            2580
LONGPRINT           252C
MANHDLR             4030
MANHELP             20DC
MANMANPAGE          6B98
MANOUT              224C
MANPAGEJMP          2154
MANPTR              3033
MANSTR              4830
MATCH               20C2
MDSP                230A
MDSPDONE            237E
MDSPHDLR            4004
MDSPMANPAGE         51C0
MDSPOUT             2170
MDSPPRINT           22C0
MDSPPTR             3005
MDSPSTR             4804
MM                  2596
MMDONE              262A
MMERROR             2586
MMHDLR              400C
MMMANPAGE           5704
MMOUT               2198
MMPRINT             2438
MMPRINTDN           2590
MMPTR               3010
MMSTR               480C
MS                  2630
MSDONE              2696
MSERROR             268C
MSHDLR              4010
MSMANPAGE           5952
MSOUT               21AC
MSPTR               3013
MSSTR               4810
NEXT                204C
NEXTHEX             27A0
NEXTPAGE            2124
NEXTPAGEMAN         20E8
NULL                0
NULLFOUND           2722
NULLJMP             20CC
NULLLOOP            20D0
OUT1CR              E3
OUTPUT              F3
PORTIN1             F1
PROMPT              1000
RETURN              20C6
SAFE                22B2
SORT                23A0
SORTW               23B8
SORTWDONE           2432
SORTWHDLR           4008
SORTWMANPAGE        543C
SORTWOUT            2184
SORTWPTR            300A
SORTWSTR            4808
SP                  20
SPACE               118D
SPFOUND             270E
START               2000
TUTOR               E4
VT                  B
WORD                2602
WORDCONT            2526
WORDPRINT           24D0
